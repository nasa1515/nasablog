{"componentChunkName":"component---src-templates-blog-template-js","path":"/kubernetes-error01/","result":{"data":{"cur":{"id":"fd1c3f20-62ff-5ee2-a922-ceae1bfe395d","html":"<p>이번 포스트는 이전 K8S 설치 및 구성 포스트에서 정상적으로 설치 뒤에 발견된 이슈에 대한 리포트 입니다.<br>\ngithub, 영문 리포트 사이트에서 여러가지 글이 있지만 정확한 원인과 해결방법에 대한 댓글이 없어 리포트 합니다.</p>\n<hr>\n<h2 id=\"-해결방법\" style=\"position:relative;\"><a href=\"#-%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95\" aria-label=\" 해결방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 해결방법</h2>\n<ul>\n<li><code class=\"language-text\">해당이슈는 1.17버전</code> 이후에서만 발생하는 이슈입니다. 버전을 낮춰 설치를 진행, 혹은 버그가 릴리즈 될 때까지 기다리는 수 밖에 없을 것 같습니다.  </li>\n<li>저는 1.16 버전으로 설치 후 정상 구동을 확인 했습니다.</li>\n<li>추가적으로 GCP같은 퍼블릭 클라우드의 환경에서만 발생하는건지<br>\n기존의 레거시 설치 환경에서도 발생하는 건지는 테스트가 필요합니다.</li>\n</ul>\n<hr>\n<h2 id=\"-이슈-내용\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EC%8A%88-%EB%82%B4%EC%9A%A9\" aria-label=\" 이슈 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 이슈 내용</h2>\n<p><code class=\"language-text\">K8S 1.17 이상의 버전</code>에서 헬스체크 이슈\n<code class=\"language-text\">kubespray , adm</code>으로 기본 설치 이후 아래와 같이 헬스체크의 <code class=\"language-text\">Unhealthy</code>에러 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectrl <span class=\"token keyword\">get</span> cs</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90993355-88020680-e5ef-11ea-8b59-6102415fec3f.png\" alt=\"스크린샷, 2020-08-24 09-52-12\"></p>\n<br/>\n<h3 id=\"에러\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC\" aria-label=\"에러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl <span class=\"token keyword\">get</span> componentstatus\nNAME                 STATUS      MESSAGE                                                                                        ERROR\ncontroller<span class=\"token operator\">-</span>manager   Unhealthy   <span class=\"token class-name\">Get</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">10252</span><span class=\"token operator\">/</span>healthz<span class=\"token punctuation\">:</span> dial tcp <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">10252</span><span class=\"token punctuation\">:</span> getsockopt<span class=\"token punctuation\">:</span> connection refused\nscheduler            Unhealthy   <span class=\"token class-name\">Get</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">10251</span><span class=\"token operator\">/</span>healthz<span class=\"token punctuation\">:</span> dial tcp <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">10251</span><span class=\"token punctuation\">:</span> getsockopt<span class=\"token punctuation\">:</span> connection refused\netcd<span class=\"token operator\">-</span><span class=\"token number\">0</span>               Healthy     <span class=\"token punctuation\">{</span><span class=\"token string\">\"health\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span></code></pre></div>\n<br/>\n<h3 id=\"분석-결과\" style=\"position:relative;\"><a href=\"#%EB%B6%84%EC%84%9D-%EA%B2%B0%EA%B3%BC\" aria-label=\"분석 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>분석 결과</h3>\n<ul>\n<li>\n<p>해당이슈는 아래와 같이 <code class=\"language-text\">GoRang</code> 코드 자체에 <code class=\"language-text\">Port가 하드코딩</code> 되어 있어<br>\n<code class=\"language-text\">헬스체크만</code> 되지 않을 뿐 실제 Pods, Replicaset등의 <code class=\"language-text\">동작에는 영향이 없습니다</code>  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90993350-859fac80-e5ef-11ea-9bf9-8d42a5cb7978.png\" alt=\"스크린샷, 2020-08-24 09-51-58\">  </p>\n<p>실제 서비스 포트는 <code class=\"language-text\">10259</code>이지만 <code class=\"language-text\">헬스체크는 10251,2 포트</code>로 연결하려고 함</p>\n</li>\n</ul>\n<br/>\n<h3 id=\"github-에서-코드-확인\" style=\"position:relative;\"><a href=\"#github-%EC%97%90%EC%84%9C-%EC%BD%94%EB%93%9C-%ED%99%95%EC%9D%B8\" aria-label=\"github 에서 코드 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>github 에서 코드 확인</h3>\n<p><code class=\"language-text\">하드코딩 코드 확인</code></p>\n<p>test/e2e/framework/ports.go  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90993931-da442700-e5f1-11ea-9804-ddc3bf45a233.png\" alt=\"스크린샷, 2020-08-24 10-09-04\">\n<img src=\"https://user-images.githubusercontent.com/69498804/90993943-eaf49d00-e5f1-11ea-870f-16e0652ab6a9.png\" alt=\"스크린샷, 2020-08-24 10-09-34\"></p>\n<p><a href=\"https://github.com/kubernetes/kubernetes/search?q=InsecureKubeControllerManagerPort&#x26;unscoped_q=InsecureKubeControllerManagerPort\">https://github.com/kubernetes/kubernetes/search?q=InsecureKubeControllerManagerPort&#x26;unscoped_q=InsecureKubeControllerManagerPort</a></p>\n<br/>\n<br/>\n<p><code class=\"language-text\">insecure</code> 일때랑 포트가 다르게 쓰이는 코드로 보인다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">/*\nCopyright 2014 The Kubernetes Authors.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/</span>\n\npackage <span class=\"token return-type class-name\">ports</span>\n\nimport <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"k8s.io/cloud-provider\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ProxyStatusPort is the default port for the proxy metrics server.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    ProxyStatusPort <span class=\"token operator\">=</span> <span class=\"token number\">10249</span>\n    <span class=\"token comment\">// KubeletPort is the default port for the kubelet server on each host machine.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    KubeletPort <span class=\"token operator\">=</span> <span class=\"token number\">10250</span>\n    <span class=\"token comment\">// InsecureKubeControllerManagerPort is the default port for the controller manager status server.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    <span class=\"token comment\">// Deprecated: use the secure KubeControllerManagerPort instead.</span>\n    InsecureKubeControllerManagerPort <span class=\"token operator\">=</span> <span class=\"token number\">10252</span>\n    <span class=\"token comment\">// KubeletReadOnlyPort exposes basic read-only services from the kubelet.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    <span class=\"token comment\">// This is necessary for heapster to collect monitoring stats from the kubelet</span>\n    <span class=\"token comment\">// until heapster can transition to using the SSL endpoint.</span>\n    <span class=\"token comment\">// TODO(roberthbailey): Remove this once we have a better solution for heapster.</span>\n    KubeletReadOnlyPort <span class=\"token operator\">=</span> <span class=\"token number\">10255</span>\n    <span class=\"token comment\">// ProxyHealthzPort is the default port for the proxy healthz server.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    ProxyHealthzPort <span class=\"token operator\">=</span> <span class=\"token number\">10256</span>\n    <span class=\"token comment\">// KubeControllerManagerPort is the default port for the controller manager status server.</span>\n    <span class=\"token comment\">// May be overridden by a flag at startup.</span>\n    KubeControllerManagerPort <span class=\"token operator\">=</span> <span class=\"token number\">10257</span>\n    <span class=\"token comment\">// CloudControllerManagerPort is the default port for the cloud controller manager server.</span>\n    <span class=\"token comment\">// This value may be overridden by a flag at startup.</span>\n    CloudControllerManagerPort <span class=\"token operator\">=</span> cloudprovider<span class=\"token punctuation\">.</span>CloudControllerManagerPort\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://github.com/kubernetes/kubernetes/blob/462742fcf6732abf0c630422320b3972575bae59/pkg/master/ports/ports.go\">https://github.com/kubernetes/kubernetes/blob/462742fcf6732abf0c630422320b3972575bae59/pkg/master/ports/ports.go</a></p>\n<br/>\n<h3 id=\"추가적으로-code-classlanguage-textakscode명령으로-해결했다는-리포트를-보아-시도해봤지만-해결되지-않았음\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80%EC%A0%81%EC%9C%BC%EB%A1%9C-code-classlanguage-textakscode%EB%AA%85%EB%A0%B9%EC%9C%BC%EB%A1%9C-%ED%95%B4%EA%B2%B0%ED%96%88%EB%8B%A4%EB%8A%94-%EB%A6%AC%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EB%B3%B4%EC%95%84-%EC%8B%9C%EB%8F%84%ED%95%B4%EB%B4%A4%EC%A7%80%EB%A7%8C-%ED%95%B4%EA%B2%B0%EB%90%98%EC%A7%80-%EC%95%8A%EC%95%98%EC%9D%8C\" aria-label=\"추가적으로 code classlanguage textakscode명령으로 해결했다는 리포트를 보아 시도해봤지만 해결되지 않았음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가적으로 <code class=\"language-text\">aks</code>명령으로 해결했다는 리포트를 보아 시도해봤지만 해결되지 않았음</h3>\n<ul>\n<li>\n<p>내용은 다음과 같다\n<img src=\"https://user-images.githubusercontent.com/69498804/90994011-2becb180-e5f2-11ea-9e7e-169a7a3cef4a.png\" alt=\"스크린샷, 2020-08-24 10-11-24\"></p>\n<p><a href=\"https://github.com/Azure/AKS/issues/173\">https://github.com/Azure/AKS/issues/173</a></p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95\">✔ 해결방법</a></li>\n<li>\n<p><a href=\"#-%EC%9D%B4%EC%8A%88-%EB%82%B4%EC%9A%A9\">✌ 이슈 내용</a></p>\n<ul>\n<li><a href=\"#%EC%97%90%EB%9F%AC\">에러</a></li>\n<li><a href=\"#%EB%B6%84%EC%84%9D-%EA%B2%B0%EA%B3%BC\">분석 결과</a></li>\n<li><a href=\"#github-%EC%97%90%EC%84%9C-%EC%BD%94%EB%93%9C-%ED%99%95%EC%9D%B8\">github 에서 코드 확인</a></li>\n<li><a href=\"#%EC%B6%94%EA%B0%80%EC%A0%81%EC%9C%BC%EB%A1%9C-aks%EB%AA%85%EB%A0%B9%EC%9C%BC%EB%A1%9C-%ED%95%B4%EA%B2%B0%ED%96%88%EB%8B%A4%EB%8A%94-%EB%A6%AC%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EB%B3%B4%EC%95%84-%EC%8B%9C%EB%8F%84%ED%95%B4%EB%B4%A4%EC%A7%80%EB%A7%8C-%ED%95%B4%EA%B2%B0%EB%90%98%EC%A7%80-%EC%95%8A%EC%95%98%EC%9D%8C\">추가적으로 <code class=\"language-text\">aks</code>명령으로 해결했다는 리포트를 보아 시도해봤지만 해결되지 않았음</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"이번 포스트는 이전 K8S 설치 및 구성 포스트에서 정상적으로 설치 뒤에 발견된 이슈에 대한 리포트 입니다. github, 영문 리포트 사이트에서 여러가지 글이 있지만 정확한 원인과 해결방법에 대한 댓글이 없어 리포트 합니다. ✔ 해결방법  이후에서만 발생하는 이슈입니다. 버전을 낮춰 설치를 진행, 혹은 버그가 릴리즈 될 때까지 기다리는 수 밖에 없을 것 같습니다.   저는 1.16 버전으로 설치 후 정상 구동을 확인 했습니다. 추가적으로 GCP같은 퍼블릭 클라우드의 환경에서만 발생하는건지 기존의 레거시 설치 환경에서도 발생하는 건지는 테스트가 필요합니다. ✌ 이슈 내용 에서 헬스체크 이슈 \n으로 기본 설치 이후 아래…","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 1.17버전 이상 헬스 체크 에러 리포트","categories":"DevOps Error-Report","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-error01/"}},"next":{"id":"624b3182-5fe2-5d6a-9dad-741527689b4e","html":"<p>머리말  </p>\n<p> 이번 포스트에서는 쿠버네틱스의 볼륨에 대해서 알아보자.</p>\n<hr>\n<h2 id=\"-쿠버네티스의-볼륨\" style=\"position:relative;\"><a href=\"#-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%9D%98-%EB%B3%BC%EB%A5%A8\" aria-label=\" 쿠버네티스의 볼륨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 쿠버네티스의 볼륨</h2>\n<p>파드의 컨테이너는 이미지로부터 파일시스템을 제공받는다.<br>\n그러나 파드가 종료되면 파드 내의 <code class=\"language-text\">데이터(파일)</code>은 더 이상 사용 할 수 없게 된다.  </p>\n<p>컨트롤러에 의해 새로운 파드가 생성이 되면 이미지로 부터 새로운 파일 시스템을 제공받는다.<br>\n즉 컨테이너는 기본적으로 데이터를 유지하지 않으며, 이런 형태를 <code class=\"language-text\">상태가 없다(Stateless)</code> 라고 한다.</p>\n<p>파드는 새로 생성된 데이터를 보존하기 위해 <code class=\"language-text\">외부 저장소 볼륨</code>을 생성하고 이런 볼륨을 컨테이너에 <code class=\"language-text\">마운트</code>해서 사용한다.<br>\n볼륨은 여러 파드에서 <code class=\"language-text\">동시</code>에 접근이 가능하다.</p>\n<p>기본적인 볼륨의 <code class=\"language-text\">라이프사이클</code>은 파드의 <code class=\"language-text\">라이프사이클</code>과 같다. 파드가 생성되고 삭제됨에 따라 볼륨도 같이 생성되고 삭제된다.<br>\n그러나 파드가 재 시작되면 볼륨의 데이터는 삭제되지 않고 유지되며, 재시작 된 파드에게 해당 볼륨의 데이터를 다시 제공해준다.  </p>\n<p>그러나 새로 도입된 <code class=\"language-text\">PersistentVolume</code>, <code class=\"language-text\">PersistentVloumeClaim</code>을 사용하며 볼륨만의 라이프 사이클은 분리 할 수 있게 되어<br>\n파드의 로직과 별도로 <code class=\"language-text\">볼륨(스토리지)</code>을 사용 할 수 있게 되었다.</p>\n<br/>\n<hr>\n<h2 id=\"-pv-pvc\" style=\"position:relative;\"><a href=\"#-pv-pvc\" aria-label=\" pv pvc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ PV, PVC</h2>\n<h3 id=\"persistentvolume-pv\" style=\"position:relative;\"><a href=\"#persistentvolume-pv\" aria-label=\"persistentvolume pv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(PersistentVolume, PV)</h3>\n<p>쿠버네티스에서 볼륨을 사용하는 구조는 2개로 분리되어 있습니다. PV는 볼륨 자체를 의미합니다.<br>\n클러스터내에서 리소스로 다뤄집니다. POD 하고는 별개로 관리되고 별도의 생명주기를 가지고 있습니다.  </p>\n<br/>\n<h3 id=\"persistentvolumeclaim-pvc\" style=\"position:relative;\"><a href=\"#persistentvolumeclaim-pvc\" aria-label=\"persistentvolumeclaim pvc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(PersistentVolumeClaim, PVC)</h3>\n<p>PVC는 사용자가 PV에 하는 요청입니다.<br>\n사용하고 싶은 용량은 얼마인지 읽기/쓰기는 어떤 모드로 설정하고 싶은지 등을 정해서 요청합니다.  </p>\n<br/>\n<h3 id=\"내용\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9A%A9\" aria-label=\"내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내용</h3>\n<p>쿠버네티스는 볼륨을 포드에 직접할당하는 방식이 아니라 이렇게 중간에 PVC를 둠으로써 POD와 스토리지를 분리했습니다.<br>\n이런 구조는 각자의 상황에 맞게 다양한 스토리지를 사용할 수 있게 해줍니다.<br>\n클라우드 서비스를 사용하는 경우에는 본인이 사용하는 클라우드 서비스에서 제공해주는 볼륨 서비스를 사용할 수도 있고,<br>\n사설로 직접 구축해서 사용중인 스토리지가 있다면 그걸 사용할 수도 있습니다.<br>\n이렇게 다양한 스토리지를 PV로 사용할 수 있지만 포드에 직접 연결하는게 아니라<br>\nPVC를 통해서 사용하기 때문에 포드는 자신이 어떤 스토리지를 사용하는지 신경쓰지 않아도 됩니다.</p>\n<br/>\n<hr>\n<h2 id=\"-pv-pvc-생명주기\" style=\"position:relative;\"><a href=\"#-pv-pvc-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\" aria-label=\" pv pvc 생명주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 PV, PVC 생명주기</h2>\n<p>PV-PVC의 로직은 다음 그림에서 보이는 것 같은 로직입니다.<br>\n<img src=\"https://user-images.githubusercontent.com/69498804/90230067-f4447380-de53-11ea-8205-814fa67be805.png\" alt=\"스크린샷, 2020-08-14 17-30-59\"></p>\n<br/>\n<p>PV와 PVC는 다음 그림에서 보이는 것 같은 생명주기를 가집니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90209833-5470f080-de27-11ea-813a-45442d6dd942.png\" alt=\"스크린샷, 2020-08-14 12-11-40\"></p>\n<h3 id=\"프로비저닝provisioning\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%8B%9Dprovisioning\" aria-label=\"프로비저닝provisioning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로비저닝(Provisioning)</h3>\n<p>PV를 사용하기 위해선 먼저 PV가 만들어져 있어야 합니다.<br>\n이 PV를 만드는 단계를 <code class=\"language-text\">프로비저닝</code>이라고 합니다.  </p>\n<p>PV 프로비저닝 방법에는 2가지가 있습니다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">정적(static)</code> : PV를 미리 만들어두고 사용한다.  </p>\n<p>정적으로 PV를 준비한다는건 클러스터 관리자가 미리 적정용량의 PV를 만들어 두고<br>\n사용자들의 요청이 있으면 미리 만들어둔 PV를 할당해 주는 방식입니다.<br>\n사용할 수 있는 스토리지 용량에 제한이 있을 때 유용하게 사용할 수 있는 방법입니다.<br>\n사용자들에게 미리 만들어둔 PV의 용량이 100기가라면 150기가를 사용요청들은 실패하게 됩니다.<br>\n큰 용량 스토리지를 사용한다고 해도 만들어둔 PV의 용량이 150기가이상 되는 것이 없다면 요청이 실패하게 됩니다.  </p>\n</li>\n<li>\n<p><code class=\"language-text\">동적(dynamic)</code> : 요청이 있을때마다 PV를 만드는 방법.</p>\n<p>동적으로 PV를 준비하는건 미리 PV를 준비해두는 것이 아니고<br>\n사용자가 PVC를 통해서 요청을 했을때 PV를 생성해서 제공해 주는 방식입니다.<br>\n쿠버네티스 클러스터를 위해 1테라짜리 스토리지를 준비해 뒀다고 하면<br>\n사용자가 필요할 때 원하는 용량만큼을 생성해서 사용할 수 있습니다.<br>\n정적 PV생성과 달리 한번에 200기가 짜리도 필요하면 만들어 쓸 수 있습니다.<br>\n동적 프로비저닝을 위해서 PVC는 <code class=\"language-text\">스토리지클래스(StorageClasses)</code>를 사용합니다.<br>\n스토리지클래스를 이용해서 원하는 스토리지에 PV를 생성합니다.</p>\n</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"바인딩binding\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EC%9D%B8%EB%94%A9binding\" aria-label=\"바인딩binding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바인딩(Binding)</h3>\n<ul>\n<li>PV를 PVC에 연결시키는 단계 입니다.  </li>\n<li>PVC는 사용자가 요청하는 볼륨을 PV에 요청하고 PV는 그에 맞는 볼륨이 있으면 할당해주게 됩니다.  </li>\n<li>만약 PVC가 요청하는 볼륨이 PV에 없다면 해당 요청은 무한정 남아있게 되고,<br>\nPVC가 요청하는 볼륨이 PV에 생성되면 그 요청은 받아들여져 할당해주게 됩니다.</li>\n<li>PVC와 PV는 ClaimRef를 사용하는 1:1 관계이며 바인딩이 정상적으로 완료될 경우 bound 상태가 됩니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"사용-using\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-using\" aria-label=\"사용 using permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 (using)</h3>\n<ul>\n<li>Pod는 PVC를 볼륨으로 사용 합니다.<br>\n클러스터는 PVC를 확인하여 바인딩된 PV를 찾고 해당 볼륨을 Pod에서 사용할 수 있도록 해줍니다.</li>\n<li>만약 Pod가 사용중인 PVC를 삭제하려고 하면 Storage Object in Use Protection에 의해 삭제되지 않습니다.<br>\n만약 삭제 요청을 하였다면 Pod가 PVC를 사용하지 않을때까지 삭제 요청은 연기 됩니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"회수-reclamiming\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EC%88%98-reclamiming\" aria-label=\"회수 reclamiming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회수 (Reclamiming)</h3>\n<ul>\n<li>\n<p>PV는 기존에 사용했던 PVC가 아니더라도 다른 PVC로 재활용이 가능 합니다.<br>\n때문에 사용이 종료된 PVC를 삭제할 때, 사용했던 PV의 데이터를 어떻게 처리할지에 대한 설정을 하게 됩니다.</p>\n<ul>\n<li><code class=\"language-text\">Retain</code> : PV의 데이터를 그대로 보존 합니다.</li>\n<li><code class=\"language-text\">Recycle</code> : 재사용하게될 경우 기존의 PV 데이터들을 모두 삭제 후 재사용 합니다.</li>\n<li><code class=\"language-text\">Delete</code> : 사용이 종료되면 해당 볼륨을 삭제 합니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-pv-pvc-생성\" style=\"position:relative;\"><a href=\"#-pv-pvc-%EC%83%9D%EC%84%B1\" aria-label=\" pv pvc 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐱‍🏍 PV, PVC 생성</h2>\n<h3 id=\"pv-생성\" style=\"position:relative;\"><a href=\"#pv-%EC%83%9D%EC%84%B1\" aria-label=\"pv 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PV 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolume</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> dev<span class=\"token operator\">-</span><span class=\"token class-name\">pv</span>\nspec<span class=\"token punctuation\">:</span>\ncapacity<span class=\"token punctuation\">:</span>\n    storage<span class=\"token punctuation\">:</span> 2Gi\nvolumeMode<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Filesystem</span>\naccessModes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteOnce</span>\nstorageClassName<span class=\"token punctuation\">:</span> <span class=\"token class-name\">manual</span>\npersistentVolumeReclaimPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Delete</span>\nhostPath<span class=\"token punctuation\">:</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>log_backup</code></pre></div>\n<ul>\n<li><code class=\"language-text\">path</code>: /tmp/log_backup</li>\n<li><code class=\"language-text\">spec.capacity.storage</code> → 사용할 용량을 2GB로 설정 합니다.</li>\n<li><code class=\"language-text\">spec.volumeMode</code> → 볼륨을 Filesystem으로 사용 합니다.</li>\n<li><code class=\"language-text\">spec.accessModes</code> → Pod의 접근 제어를 합니다.</li>\n<li><code class=\"language-text\">ReadWriteOnce</code> : 하나의 Pod에서만 읽고 쓸 수 있습니다.</li>\n<li><code class=\"language-text\">ReadOnlyMany</code> : 여러개의 Pod에서 읽을 수 있습니다.</li>\n<li><code class=\"language-text\">ReadWriteMany</code> : 여러개의 Pod에서 읽고 쓸 수 있습니다.</li>\n<li><code class=\"language-text\">spec.storageClassName</code> → 스토리지 클래스를 지정, 클래스에 맞는 PVC와 연결</li>\n<li><code class=\"language-text\">spec.persistentVolumeReclaimPolicy</code> → Delete는 볼륨의 사용이 종료되면 볼륨을 삭제 합니다. 회수 단계에서 설명한 필드</li>\n<li><code class=\"language-text\">hostPath</code> → 노드에 저장되는 디렉토리를 설정 합니다.</li>\n</ul>\n<br/>\n<p><code class=\"language-text\">accessModes</code>는 볼륨의 읽기/쓰기에 관한 옵션을 지정합니다.<br>\n볼륨은 한번에 하나의 accessModes만 설정할 수 있고 다음 3가지중 하나를 지정할 수 있습니다.  </p>\n<ul>\n<li><code class=\"language-text\">ReadWriteOnce</code> : 하나의 노드가 볼륨을 읽기/쓰기 가능하게 마운트할 수 있음.</li>\n<li><code class=\"language-text\">ReadOnlyMany</code> : 여러개의 노드가 읽기 전용으로 마운트할 수 있음.</li>\n<li><code class=\"language-text\">ReadWriteMany</code> : 여러개의 노드가 읽기/쓰기 가능할게 마운트할 수 있음</li>\n</ul>\n<br/>\n<br/>\n<p>해당 파일로 생성 후 정상 PV 확인  - 아직 PVC가 생성이 되지 않아 <code class=\"language-text\">STATUS</code>가 <code class=\"language-text\">Available</code>임.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90222701-914cdf80-de47-11ea-9243-f774920b9047.png\" alt=\"스크린샷, 2020-08-14 16-02-05\"></p>\n<p><code class=\"language-text\">pv</code>의 상태는 <code class=\"language-text\">Available</code>을 포함해서 다음 4가지가 있습니다.  </p>\n<ul>\n<li>Available : PVC에서 사용할 수 있게 준비된 상태</li>\n<li>Bound : 특정 PVC에 연결된 상태</li>\n<li>Released : PVC는 삭제된 상태이고 PV는 아직 초기화되지 않은 상태</li>\n<li>Failed : 자동 초기화가 실패한 상태</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"pvc-생성\" style=\"position:relative;\"><a href=\"#pvc-%EC%83%9D%EC%84%B1\" aria-label=\"pvc 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PVC 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolumeClaim</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> dev<span class=\"token operator\">-</span><span class=\"token class-name\">pvc</span>\nspec<span class=\"token punctuation\">:</span>\naccessModes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteOnce</span>\nvolumeMode<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Filesystem</span>\nresources<span class=\"token punctuation\">:</span>\n    requests<span class=\"token punctuation\">:</span>\n    storage<span class=\"token punctuation\">:</span> 1Gi\nstorageClassName<span class=\"token punctuation\">:</span> manual</code></pre></div>\n<ul>\n<li><code class=\"language-text\">accessModes</code>: (PV와 동일) 어떤 모드로 연결할지 지정합니다. [ReadWriteOnce, ReadOnlyMany, ReadWriteMany] 등</li>\n<li><code class=\"language-text\">volumeMode</code>: PV와 동일) 파일시스템인지 블록 디바이스인지를 filesystem, raw등을 통해 설정할 수 있습니다.  </li>\n<li><code class=\"language-text\">resources</code>: 얼만큼의 자원을 사용할 것인지에 대한 요청(request)을 입력합니다. (여기서는 1기가를 요청했습니다)<br>\n앞에서 만들어둔 PV의 용량이 2기가였기 때문에 현재 PVC에서 사용할 수 있습니다.<br>\n만약에 PVC가 requests의 storage에 2기가 이상의 용량을 입력했다면 거기에 맞는 PV가 없어 PVC는 Pending상태로 남습니다. </li>\n<li><code class=\"language-text\">storageClassName</code>: 사용할 스토리지클래스를 명시해 줍니다.</li>\n</ul>\n<br/>\n<br/>\n<p>*해당 파일로 생성 후 정상 PV,PVC 확인<br>\nPV &#x3C;-> PVC가 연결되어 <code class=\"language-text\">STATUS</code>가 <code class=\"language-text\">BOUND</code>로 바뀐 것을 확인.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90222946-07e9dd00-de48-11ea-8191-1df12fc5beae.png\" alt=\"스크린샷, 2020-08-14 16-05-48\"></p>\n<br/>\n<br/>\n<p><code class=\"language-text\">PVC 를 사용할 DEP 생성 후 확인</code></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Deployment</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span><span class=\"token class-name\">deployment</span>\nlabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span><span class=\"token class-name\">deployment</span>\nspec<span class=\"token punctuation\">:</span>\nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span><span class=\"token class-name\">deployment</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span><span class=\"token class-name\">deployment</span>\n    spec<span class=\"token punctuation\">:</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span><span class=\"token class-name\">deployment</span>\n        image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nginx</span>\n        ports<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n        volumeMounts<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/var/log/test.log\"</span>\n        name<span class=\"token punctuation\">:</span> dev<span class=\"token operator\">-</span><span class=\"token class-name\">volume</span>\n    volumes<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> dev<span class=\"token operator\">-</span><span class=\"token class-name\">volume</span>\n        persistentVolumeClaim<span class=\"token punctuation\">:</span>\n        claimName<span class=\"token punctuation\">:</span> dev<span class=\"token operator\">-</span>pvc    <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>pvc 의 이름을 입력</code></pre></div>\n<ul>\n<li><code class=\"language-text\">spec.template.spec.containers.volumeMounts</code>: 볼륨 마운트할 컨테이너 안의 경로를 작성하고<br>\n이 경로를 저장한 볼륨 마운트 정보를 dev-volume 이라는 이름으로 지정합니다.  </li>\n<li><code class=\"language-text\">spec.template.spec.volumes</code>: 위에 작성한 컨테이너에서 사용할 볼륨 마운트 이름(dev-volume)을 가져오고<br>\n이 정보와 연결 요청을 보낼 pvc를 2번에서 생성한 <code class=\"language-text\">dev-pvc</code>로 지정 합니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"파일-생성-테스트\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"파일 생성 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일 생성 테스트</h3>\n<p><code class=\"language-text\">MASTER</code> 서버의 PV-PATH 경로에 다음과 같은 파일을 만들었었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">vagrant@kube<span class=\"token operator\">-</span>master1<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>wonseok$ ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">-</span>test<span class=\"token punctuation\">.</span>txt\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root <span class=\"token number\">12</span> Aug <span class=\"token number\">14</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span> <span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">-</span>test<span class=\"token punctuation\">.</span>txt\nvagrant@kube<span class=\"token operator\">-</span>master1<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>wonseok$ cat <span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token operator\">-</span>test<span class=\"token punctuation\">.</span>txt \nPV<span class=\"token operator\">-</span>PVC<span class=\"token operator\">-</span>TEST\nvagrant@kube<span class=\"token operator\">-</span>master1<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>wonseok$ </code></pre></div>\n<br/>\n<br/>\n \n새로 만들어진 PODS에 ``/home/pv-pvs`` 디렉토리가 자동 생성되었고  \n    ``pv-pvc-txt`` 파일의 내용도 들어있는 것을 확인.\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">vagrant@kube<span class=\"token operator\">-</span>master1<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>wonseok$ kubectl exec <span class=\"token operator\">-</span>it pod<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">-</span>deployment<span class=\"token operator\">-</span>b664c7ff5<span class=\"token operator\">-</span>jh677 bas\n\nroot@nasa1515<span class=\"token operator\">-</span>deployment<span class=\"token operator\">-</span>b664c7ff5<span class=\"token operator\">-</span>jh677<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls <span class=\"token operator\">-</span>lart <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvs\ntotal <span class=\"token number\">12</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> Aug <span class=\"token number\">14</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span> <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root   <span class=\"token number\">12</span> Aug <span class=\"token number\">14</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span> pv<span class=\"token operator\">-</span>pvc<span class=\"token punctuation\">.</span>txt\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> Aug <span class=\"token number\">14</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">43</span> <span class=\"token range operator\">..</span>\nroot@nasa1515<span class=\"token operator\">-</span>deployment<span class=\"token operator\">-</span>b664c7ff5<span class=\"token operator\">-</span>jh677<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># \nroot@nasa1515<span class=\"token operator\">-</span>deployment<span class=\"token operator\">-</span>b664c7ff5<span class=\"token operator\">-</span>jh677<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># cat <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvs<span class=\"token operator\">/</span>pv<span class=\"token operator\">-</span>pvc<span class=\"token punctuation\">.</span>txt\nPV<span class=\"token operator\">-</span>PVC TEST</code></pre></div>\n<br/>\n<br/>\n<p>PV와 PVC는 파드와 서비스를 연결할 때처럼 레이블 / 셀렉터를 사용할 수도 있다.</p>\n<p>PV</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolume</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> pv<span class=\"token operator\">-</span>hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nlabels<span class=\"token punctuation\">:</span>\n    location<span class=\"token punctuation\">:</span> local             <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token class-name\">local</span>\nspec<span class=\"token punctuation\">:</span>\ncapacity<span class=\"token punctuation\">:</span>\n    storage<span class=\"token punctuation\">:</span> 2Gi\nvolumeMode<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Filesystem</span>\naccessModes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteOnce</span>\nstorageClassName<span class=\"token punctuation\">:</span> <span class=\"token class-name\">manual</span>\npersistentVolumeReclaimPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Delete</span>\nhostPath<span class=\"token punctuation\">:</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515</code></pre></div>\n<br/>\n<br/>\n<p>PVC</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolumeClaim</span>\napiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> pvc<span class=\"token operator\">-</span>hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nspec<span class=\"token punctuation\">:</span>\naccessModes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteOnce</span>\nvolumeMode<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Filesystem</span>\nresources<span class=\"token punctuation\">:</span>\n    requests<span class=\"token punctuation\">:</span>\n    storage<span class=\"token punctuation\">:</span> 1Gi\nstorageClassName<span class=\"token punctuation\">:</span> <span class=\"token class-name\">manual</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    location<span class=\"token punctuation\">:</span> local            <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>local</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-볼륨-플러그인\" style=\"position:relative;\"><a href=\"#-%EB%B3%BC%EB%A5%A8-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8\" aria-label=\" 볼륨 플러그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌹 볼륨 플러그인</h2>\n<p>쿠버네티스 에서 사용할 수 있는 볼륨 플러그인은 무수히 많다. </p>\n<p>[몇가지 예시]  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90215628-25627b00-de37-11ea-8d8e-98d0b2dfcfd2.png\" alt=\"스크린샷, 2020-08-14 14-04-52\"></p>\n<br/>\n<br/>\n<p>대표적인 3가지는 아래 가지가 있다.</p>\n<p>empty : 임시로 데이터를 저장하는 빈 볼륨  </p>\n<ul>\n<li>호스트의 디스크를 임시로 컨테이너 볼륨에 할당해서 사용한다.  </li>\n<li>파드가 사라지면 emprtDir 에 할당했던 컨테이너 볼륨의 데이터도 사라진다.</li>\n<li>단순히 컨테이너를 재시작 했을 때 데이터를 보존하는 역할이다.</li>\n<li>메모리와 디스크를 함께쓰는 대용량 데이터 계산을 하는 경우와 연산 결과를 중간 저장용 필요할 때 사용한다.</li>\n</ul>\n<br/>\n<br/>\n<p>[아래의 예시는 두 개의 컨테이너가 하나의 Pod에서 emptyDir을 공유하는 것을 보여준다]</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token number\">1</span> apiVersion<span class=\"token punctuation\">:</span> v1\n<span class=\"token number\">2</span> kind<span class=\"token punctuation\">:</span> Pod\n<span class=\"token number\">3</span> metadata<span class=\"token punctuation\">:</span>\n<span class=\"token number\">4</span> name<span class=\"token punctuation\">:</span> test<span class=\"token operator\">-</span>pod\n<span class=\"token number\">5</span> spec<span class=\"token punctuation\">:</span>\n<span class=\"token number\">6</span> containers<span class=\"token punctuation\">:</span>\n<span class=\"token number\">7</span>    <span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">14.04</span>\n<span class=\"token number\">8</span>    name<span class=\"token punctuation\">:</span> ubuntu<span class=\"token operator\">-</span>container              <span class=\"token operator\">--</span><span class=\"token operator\">-</span> 우분투라는 이름의 pods\n<span class=\"token number\">9</span>    command<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tail\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/null\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">10</span>    volumeMounts<span class=\"token punctuation\">:</span>\n<span class=\"token number\">11</span>        <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>data\n<span class=\"token number\">12</span>        name<span class=\"token punctuation\">:</span> my<span class=\"token operator\">-</span>empty<span class=\"token operator\">-</span>volume\n<span class=\"token number\">13</span>\n<span class=\"token number\">14</span>    <span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx                     <span class=\"token operator\">--</span><span class=\"token operator\">-</span> nginx라는 이름의 pods\n<span class=\"token number\">15</span>    name<span class=\"token punctuation\">:</span> nginx<span class=\"token operator\">-</span>containe\n<span class=\"token number\">16</span>    volumeMounts<span class=\"token punctuation\">:</span>\n<span class=\"token number\">17</span>        <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>data\n<span class=\"token number\">18</span>        name<span class=\"token punctuation\">:</span> my<span class=\"token operator\">-</span>empty<span class=\"token operator\">-</span>volume\n<span class=\"token number\">19</span>\n<span class=\"token number\">20</span> volumes<span class=\"token punctuation\">:</span>\n<span class=\"token number\">21</span>    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> my<span class=\"token operator\">-</span>empty<span class=\"token operator\">-</span>volume\n<span class=\"token number\">22</span>    emptyDir<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>                 <span class=\"token operator\">--</span><span class=\"token operator\">--</span>empty에 대한 설정</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">spec.containers.volumeMounts.mountPath</code>: 실행될 컨테이너 안에 마운트할 경로 입니다.<br>\n컨테이너 안에 해당 디렉토리가 없더라도 자동으로 생성 해줍니다</li>\n<li><code class=\"language-text\">spec.containers.volumeMounts.mountPath</code>: 마운트할 볼륨의 이름 입니다.  </li>\n<li><code class=\"language-text\">spec.voluems</code>: 위에 작성한 my-empty-volume을 사용하도록 지정 해줍니다.</li>\n</ul>\n<br/>\n<br/>\n<p>PODS 생성 후 정상 구동 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa1515<span class=\"token punctuation\">]</span># kubectl create <span class=\"token operator\">-</span>f emp<span class=\"token punctuation\">.</span>yaml\npod<span class=\"token operator\">/</span>emp<span class=\"token operator\">-</span>pod created\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n<span class=\"token punctuation\">[</span>root@nasa1515<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                                   READY     STATUS    RESTARTS   AGE\nemp<span class=\"token operator\">-</span>pod                                 <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>       Running   <span class=\"token number\">0</span>          39s</code></pre></div>\n<br/>\n<br/>\n<p>한 컨테이너에서 /data에 파일을 생성할 경우 다른 컨테이너에서도 해당 파일에서 접근할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa1515<span class=\"token punctuation\">]</span># docker ps <span class=\"token operator\">|</span> grep ubuntu\n78a266359307        ubuntu@nasa1515<span class=\"token punctuation\">:</span>885bb6705b0<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span> \n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n<span class=\"token punctuation\">[</span>root@nasa1515<span class=\"token punctuation\">]</span># docker exec <span class=\"token operator\">-</span>it <span class=\"token number\">78</span> bash\nroot@emp<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls\nbin  boot  data  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  <span class=\"token keyword\">var</span>\nroot@emp<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># cd data<span class=\"token operator\">/</span>\nroot@emp<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>data# echo test <span class=\"token operator\">>></span> Test\nroot@emp<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>data# exit\nexit\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n<span class=\"token punctuation\">[</span>root@nasa1515# docker ps <span class=\"token operator\">|</span> grep nginx\n7c72d8409845        nginx@nasa1515<span class=\"token punctuation\">:</span>d85914d547a6<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>root@nasa1515<span class=\"token punctuation\">]</span># docker exec <span class=\"token operator\">-</span>it 7c bash\nroot@test<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls data<span class=\"token operator\">/</span>\nTest</code></pre></div>\n<br/>\n<br/>\n<h3 id=\"hostpath--파드가-실행된-호스트의-파일이나-디렉토리를-파드에-마운트한다\" style=\"position:relative;\"><a href=\"#hostpath--%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%9C-%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%9D%98-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%82%98-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%EB%A5%BC-%ED%8C%8C%EB%93%9C%EC%97%90-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C%EB%8B%A4\" aria-label=\"hostpath  파드가 실행된 호스트의 파일이나 디렉토리를 파드에 마운트한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hostPath : 파드가 실행된 호스트의 파일이나 디렉토리를 파드에 마운트한다.</h3>\n<ul>\n<li>hostpath는 호스트의 디렉터리를 Pod와 공유해 사용하는 방식이다.</li>\n<li>컨테이너 재시작시 데이터를 보존하는 역할이다.</li>\n<li>도커 스웜 모드의 호스트 볼륨 마운트와 비슷한 방식이라고 생각하면 쉽다.  </li>\n<li>Pod가 삭제되어도 hostpath에 저장된 파일들은 호스트에 저장되어 남아있게 된다. </li>\n<li>그러나 당연하게도 컨테이너가 할당될 특정 호스트를 nodeSelector를 통해 지정해주지 않으면<br>\n매번 컨테이너가 다른 호스트에 할당되므로 이 방식은 persistent storage와는 거리가 있다고 볼 수 있다.</li>\n</ul>\n<br/>\n<br/>\n<p>hostpath는 아래와 같이 정의해 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span>hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span>hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\n    image<span class=\"token punctuation\">:</span> arisu1000<span class=\"token operator\">/</span>simple<span class=\"token operator\">-</span>container<span class=\"token operator\">-</span>app<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    volumeMounts<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>test<span class=\"token operator\">-</span><span class=\"token class-name\">volume</span>\n    name<span class=\"token punctuation\">:</span> hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\nvolumes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n    hostPath<span class=\"token punctuation\">:</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token class-name\">tmp</span>\n    type<span class=\"token punctuation\">:</span> Directory</code></pre></div>\n<ul>\n<li><code class=\"language-text\">spec.containers.volumeMounts.mountPath</code>: 실행된 컨테이너 안에 마운트할 경로 입니다.<br>\n컨테이너 안에 해당 디렉토리가 없더라도 자동으로 생성 해줍니다. </li>\n<li><code class=\"language-text\">spec.containers.volumeMounts.name</code>: 마운트할 볼륨의 이름 입니다.</li>\n<li><code class=\"language-text\">spec.voluems.name</code>: 위에 작성한 hostpath-volume을 사용하도록 지정 해줍니다.</li>\n<li><code class=\"language-text\">spec.voluems.hostPath</code>: 노드에 마운트할 경로를 정해주고 해당 경로는 Directory 라는것을 명시 합니다.<br>\n해당 디렉토리는 노드에 생성되어 있어야 하며, DirectoryOrCreate를 사용하면 디렉토리를 생성 해줍니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"nfs-서버\" style=\"position:relative;\"><a href=\"#nfs-%EC%84%9C%EB%B2%84\" aria-label=\"nfs 서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NFS 서버</h3>\n<p>호스트에 설정한 NFS 디렉토리를 공유하는 네트워크 볼륨 공유이다.</p>\n<ul>\n<li>NFS 볼륨은 기존에 사용하는 NFS 서버를 파드에 마운트한다.</li>\n<li><code class=\"language-text\">.spec.containers[].securityContext</code> 는 컨테이너의 보안 설정을 한다.</li>\n</ul>\n<br/>\n<br/>\n<p>컨테이너가 실행중인 호스트 장치의 접근권한을 설정하는 priviledged 필드값으로<br>\n모든 호스트 장치에 접근할 수 있도록 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Deployment</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nfs<span class=\"token operator\">-</span><span class=\"token class-name\">server</span>\nlabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nfs<span class=\"token operator\">-</span><span class=\"token class-name\">server</span>\nspec<span class=\"token punctuation\">:</span>\nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nfs<span class=\"token operator\">-</span><span class=\"token class-name\">server</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nfs<span class=\"token operator\">-</span><span class=\"token class-name\">server</span>\n    spec<span class=\"token punctuation\">:</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nfs<span class=\"token operator\">-</span><span class=\"token class-name\">server</span>\n        image<span class=\"token punctuation\">:</span> arisu1000<span class=\"token operator\">/</span>nfs<span class=\"token operator\">-</span>server<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n        ports<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nfs</span>\n        containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">2049</span>             <span class=\"token operator\">--</span>nfs 연결 Port\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mountd</span>\n        containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">20048</span>\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">rpcbind</span>\n        containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">111</span>\n        securityContext<span class=\"token punctuation\">:</span>\n        privileged<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\n        volumeMounts<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token class-name\">exports</span>\n        name<span class=\"token punctuation\">:</span> hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n    volumes<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> hostpath<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n        hostPath<span class=\"token punctuation\">:</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token class-name\">tmp</span>\n        type<span class=\"token punctuation\">:</span> Directory</code></pre></div>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%9D%98-%EB%B3%BC%EB%A5%A8\">✔ 쿠버네티스의 볼륨</a></li>\n<li>\n<p><a href=\"#-pv-pvc\">✌ PV, PVC</a></p>\n<ul>\n<li><a href=\"#persistentvolume-pv\">(PersistentVolume, PV)</a></li>\n<li><a href=\"#persistentvolumeclaim-pvc\">(PersistentVolumeClaim, PVC)</a></li>\n<li><a href=\"#%EB%82%B4%EC%9A%A9\">내용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-pv-pvc-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\">👍 PV, PVC 생명주기</a></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%8B%9Dprovisioning\">프로비저닝(Provisioning)</a></li>\n<li><a href=\"#%EB%B0%94%EC%9D%B8%EB%94%A9binding\">바인딩(Binding)</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9-using\">사용 (using)</a></li>\n<li><a href=\"#%ED%9A%8C%EC%88%98-reclamiming\">회수 (Reclamiming)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-pv-pvc-%EC%83%9D%EC%84%B1\">🐱‍🏍 PV, PVC 생성</a></p>\n<ul>\n<li><a href=\"#pv-%EC%83%9D%EC%84%B1\">PV 생성</a></li>\n<li><a href=\"#pvc-%EC%83%9D%EC%84%B1\">PVC 생성</a></li>\n<li><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8\">파일 생성 테스트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%B3%BC%EB%A5%A8-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8\">🌹 볼륨 플러그인</a></p>\n<ul>\n<li><a href=\"#hostpath--%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%9C-%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%9D%98-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%82%98-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%EB%A5%BC-%ED%8C%8C%EB%93%9C%EC%97%90-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C%EB%8B%A4\">hostPath : 파드가 실행된 호스트의 파일이나 디렉토리를 파드에 마운트한다.</a></li>\n<li><a href=\"#nfs-%EC%84%9C%EB%B2%84\">NFS 서버</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 Volume","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-volume/"}},"prev":{"id":"051d0e6a-30d8-5788-b7f5-73e9cb7bc4e1","html":"<br/>\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/69498804/105137748-2ced2500-5b37-11eb-8995-82ed28550833.JPG\" width=\"80%\" height=\"100%\">\n</p>\n<br/>\n<p>2021년을 맞이하는 주말이 끝나고 지난 월요일에 마이크로소프트의 Azure 자격증을   취득했습니다.<br>\n이전에 GCP, AWS로 개인, 팀 프로젝트를 진행했던 경험 덕분에 Cloud 개념들에 대해서 조금 더 쉽게 이해 할 수 있었던 것 같습니다.<br>\n그러나 AWS, GCP와는 구독(Subcription) 이라는 개념은 약간 생소했습니다.</p>\n<br/>\n<hr>\n<h2 id=\"공부방법\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EB%B6%80%EB%B0%A9%EB%B2%95\" aria-label=\"공부방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공부방법</h2>\n<br/>\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/learn/:\">Microsoft Learn</a></li>\n</ul>\n<p>사실 마이크로소프트 자체에서 만든 공식자료가 완벽합니다.<br>\nAWS와는 다르게 객관적으로 이해하지 쉽게 적혀있고<br>\n그림으로 설명도 첨부하여서 대부분을 공식 doc, learn으로 공부했던 것 같습니다.<br>\n그리고 case study도 읽으시는걸 추천합니다.<br>\n이유는 case study를 통해 어떻게 오류를 해결하는지 나오기도 하고 특정 기능을 어떤때에 사용해야되는지 알려주기 때문이지요.</p>\n<br/>\n<hr>\n<h2 id=\"시험-난이도\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%97%98-%EB%82%9C%EC%9D%B4%EB%8F%84\" aria-label=\"시험 난이도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시험 난이도</h2>\n<p>기본적으로 AWS,GCP 등의 Public CLOUD를 직접 사용해보신 분들은 쉬울겁니다.<br>\n왜냐면 기본적으로 모든 Public Cloud들은 컨셉이 비슷하거든요..<br>\n단지 기능 이름들이 다를뿐입니다…</p>\n<br/>\n \n<hr>\n<h2 id=\"온라인-시험\" style=\"position:relative;\"><a href=\"#%EC%98%A8%EB%9D%BC%EC%9D%B8-%EC%8B%9C%ED%97%98\" aria-label=\"온라인 시험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>온라인 시험</h2>\n<p>시국이 시국인지라 대부분의 자격증 시험이 온라인으로 바뀌었습니다.</p>\n<ul>\n<li>즉! Microsoft는 Online Proctoring, 즉 온라인 감독관 시험을 볼수있습니다!</li>\n<li>예약방법도 매우 간단합니다. 옆의 링크를 참조해주세요 <a href=\"https://docs.microsoft.com/en-us/learn/certifications/online-exams\">예약방법</a></li>\n<li>참고로 예약이 완료되면 나오는 사전 PC 테스트는 무조건 하시는 것이 좋습니다.</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"준비물\" style=\"position:relative;\"><a href=\"#%EC%A4%80%EB%B9%84%EB%AC%BC\" aria-label=\"준비물 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>준비물</h2>\n<p>온라인 시험이라 그런지 챙겨야 할 것들이 몇가지 있습니다.</p>\n<ul>\n<li>\n<ol>\n<li>운전면허증, 주민증 (영문) , 여권 중 1 - 얼굴이 나와야 합니다.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>핸드폰 (필수)</li>\n</ol>\n<p>시험 시작 전 핸드폰으로 시험자의 얼굴과 시험장소를 찍어서 보내야합니다.</p>\n</li>\n<li>\n<p>집에서 시험보시는경우, 감독관님 말씀에 따라 책상위에 있는 물건들 치우셔야됩니다.</p>\n<p>저는 턱에 손을 놓고 집중하는 버릇이 있는데 이것도 지적받았어요…</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"az-admin-104\" style=\"position:relative;\"><a href=\"#az-admin-104\" aria-label=\"az admin 104 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AZ-ADMIN 104</h2>\n<ul>\n<li>문제수 : 약 64문제</li>\n<li>700점 이상 합격</li>\n<li>시간 : 180분 (3시간)</li>\n<li>마지막에 나오는 yes/no 8문제는 정답을 바꿀 수 없습니다..</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>저는 총 시험시간이 50분정도 걸린 것 같습니다.\n이번 포스트를 한줄로 요약하자면, “이미 CLOUD를 아는 사람은 쉽다.” 입니다.</p>\n<hr>","frontmatter":{"date":"July 26, 2021","title":"[AZURE] AZ-104 [Microsoft Azure Administrator] 자격증 합격 후기","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-104/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/kubernetes-error01/","nextSlug":"/kubernetes-volume/","prevSlug":"/azure-104/"}},"staticQueryHashes":["1073350324","2938748437"]}