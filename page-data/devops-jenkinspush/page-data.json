{"componentChunkName":"component---src-templates-blog-template-js","path":"/devops-jenkinspush/","result":{"data":{"cur":{"id":"b022c64e-b03d-5890-807a-f79d479433c2","html":"<p>머리말  </p>\n<p>이전 포스트에서 간단하게 이미지를 빌드한 뒤 ArgoCD와 SYNC를 맞춰 배포를 자동화한 파이프 라인을 완성했습니다.<br>\n이번 포스트에서는 Jenkins에서 해당 이미지를 빌드하는 부분에 대해서 포스트 했습니다.</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>Jenkins</li>\n<li>maven</li>\n<li>github</li>\n<li>ArgoCD</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"-전체-jenkins-파이프라인\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EC%B2%B4-jenkins-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8\" aria-label=\" 전체 jenkins 파이프라인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 전체 Jenkins 파이프라인</h2>\n<ul>\n<li>\n<p>파이프라인 스크립트</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token function\">parameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'sonar<span class=\"token punctuation\">.</span>projectKey'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> 'com<span class=\"token punctuation\">.</span>appsecco<span class=\"token punctuation\">:</span>dvja'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'sonar<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">.</span>url'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> 'http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token punctuation\">:</span><span class=\"token number\">9000</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'sonar<span class=\"token punctuation\">.</span>login'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> '608cacd6bb83c50712ebb34c4cba377c841cdebb'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'ARGOCD_DOMAIN'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> '<span class=\"token number\">34.67</span><span class=\"token number\">.162</span><span class=\"token number\">.44</span><span class=\"token punctuation\">:</span><span class=\"token number\">30357</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'ARGOCD_PW'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> 'argo<span class=\"token operator\">-</span>cd<span class=\"token operator\">-</span>argocd<span class=\"token operator\">-</span>server<span class=\"token operator\">-</span>6d5f98cf57<span class=\"token operator\">-</span>wmf46'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'ARGOCD_APP_NAME'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> 'test'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">string</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">name</span><span class=\"token punctuation\">:</span> 'tag_num'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">defaultValue</span><span class=\"token punctuation\">:</span> ''<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\npipeline <span class=\"token punctuation\">{</span>\n    environment <span class=\"token punctuation\">{</span>\n        slack_channel <span class=\"token operator\">=</span> '#studying'\n        REGISTRY <span class=\"token operator\">=</span> 'cccr<span class=\"token operator\">/</span>jisun'\n        REGISTRY_IP <span class=\"token operator\">=</span> '<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>'\n        REGISTRYCREDENTIAL <span class=\"token operator\">=</span> 'harbor' \n        DOCKER_IMAGE <span class=\"token operator\">=</span> ''\n        TAG_NUM <span class=\"token operator\">=</span> ''\n    <span class=\"token punctuation\">}</span>\n    agent <span class=\"token return-type class-name\">any</span>\n    tools <span class=\"token punctuation\">{</span> \n        maven 'mvn' \n    <span class=\"token punctuation\">}</span>\n    stages <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Git clone'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                git 'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>JisunParkRea<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>dvwa<span class=\"token punctuation\">.</span>git'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Build Test'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                sh 'mvn clean package <span class=\"token operator\">-</span>Dcheckstyle<span class=\"token punctuation\">.</span>skip <span class=\"token operator\">-</span>Dspotbugs<span class=\"token punctuation\">.</span>skip <span class=\"token operator\">-</span>Dpmd<span class=\"token punctuation\">.</span>skip'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        stage <span class=\"token punctuation\">(</span>'Dependency<span class=\"token operator\">-</span>Check Analysis'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                sh '<span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jenkins<span class=\"token operator\">/</span>dependency<span class=\"token operator\">-</span>check<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>dependency<span class=\"token operator\">-</span>check<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">--</span>scan `pwd` <span class=\"token operator\">--</span>format XML <span class=\"token operator\">--</span><span class=\"token keyword\">out</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jenkins<span class=\"token operator\">/</span>workspace<span class=\"token operator\">/</span>ci<span class=\"token operator\">-</span>build<span class=\"token operator\">-</span>pipeline<span class=\"token operator\">/</span>dependency<span class=\"token operator\">-</span>check<span class=\"token operator\">-</span>report <span class=\"token operator\">--</span>prettyPrint'\n                \n                <span class=\"token class-name\">dependencyCheckPublisher</span> pattern<span class=\"token punctuation\">:</span> 'dependency<span class=\"token operator\">-</span>check<span class=\"token operator\">-</span>report<span class=\"token operator\">/</span>dependency<span class=\"token operator\">-</span>check<span class=\"token operator\">-</span>report<span class=\"token punctuation\">.</span>xml'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Sonarqube <span class=\"token keyword\">and</span> Quality gate'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            options <span class=\"token punctuation\">{</span>\n                timeout<span class=\"token return-type class-name\"><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">:</span> 5<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">:</span> 'MINUTES'<span class=\"token punctuation\">)</span></span>\n                <span class=\"token function\">retry</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            steps <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">withSonarQubeEnv</span><span class=\"token punctuation\">(</span>'SonarQube Server'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    sh <span class=\"token string\">\"mvn sonar:sonar\"</span>\n                <span class=\"token punctuation\">}</span>\n                script <span class=\"token punctuation\">{</span>\n                    qualitygate <span class=\"token operator\">=</span> <span class=\"token function\">waitForQualityGate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qualitygate<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!=</span> <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        currentBuild<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> <span class=\"token string\">\"FAILURE\"</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Docker image build'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n            steps<span class=\"token punctuation\">{</span>\n                script <span class=\"token punctuation\">{</span>\n                    DOCKER_IMAGE <span class=\"token operator\">=</span> docker<span class=\"token punctuation\">.</span>build registry\n                \n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> \n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Docker image push to Harbor'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps<span class=\"token punctuation\">{</span>\n                script <span class=\"token punctuation\">{</span>\n                    docker<span class=\"token punctuation\">.</span><span class=\"token function\">withRegistry</span><span class=\"token punctuation\">(</span>'http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$REGISTRY_IP'<span class=\"token punctuation\">,</span> REGISTRYCREDENTIAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        DOCKER_IMAGE<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>'$<span class=\"token punctuation\">{</span>BUILD_NUMBER<span class=\"token punctuation\">}</span>'<span class=\"token punctuation\">)</span>\n                        DOCKER_IMAGE<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                sh 'docker rmi $REGISTRY<span class=\"token punctuation\">:</span>latest'\n                sh 'docker rmi $REGISTRY_IP<span class=\"token operator\">/</span>$REGISTRY<span class=\"token punctuation\">:</span>$BUILD_NUMBER'\n                sh 'docker rmi $REGISTRY_IP<span class=\"token operator\">/</span>$REGISTRY<span class=\"token punctuation\">:</span>latest'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Anchore analyse'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            steps <span class=\"token punctuation\">{</span>  \n                <span class=\"token function\">catchError</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">buildResult</span><span class=\"token punctuation\">:</span> 'SUCCESS'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">stageResult</span><span class=\"token punctuation\">:</span> 'SUCCESS'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">writeFile</span> file<span class=\"token punctuation\">:</span> 'anchore_images'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">text</span><span class=\"token punctuation\">:</span> '<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>jisun'  \n                <span class=\"token class-name\">anchore</span> name<span class=\"token punctuation\">:</span> 'anchore_images'  \n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Push Yaml'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                script<span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token class-name\">git</span> url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://github.com/JisunParkRea/cccr-dvwa-helm\"</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">branch</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">credentialsId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"github\"</span>\n                        sh <span class=\"token string\">\"rm -rf /var/lib/jenkins/workspace/${env.JOB_NAME}/helm-service/values.yaml\"</span>\n                        sh <span class=\"token string\">\"\"</span>\"\n                        cd helm<span class=\"token operator\">-</span>service\n                        <span class=\"token preprocessor property\">#!/bin/bash</span>\n                        cat<span class=\"token operator\">></span>values<span class=\"token punctuation\">.</span>yaml<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">-</span>EOF\n<span class=\"token preprocessor property\"># Default values for ghost.</span>\n<span class=\"token preprocessor property\"># This is a YAML-formatted file.</span>\n<span class=\"token preprocessor property\"># Declare variables to be passed into your templates.</span>\n\nreplicaCount<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n\nimage<span class=\"token punctuation\">:</span>\nrepository<span class=\"token punctuation\">:</span> jisunpark<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>dvwa<span class=\"token operator\">-</span>java<span class=\"token operator\">-</span><span class=\"token class-name\">web</span>\ntag<span class=\"token punctuation\">:</span> $<span class=\"token class-name\">BUILD_NUMBER</span>\npullPolicy<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n\n\n<span class=\"token keyword\">value</span><span class=\"token punctuation\">:</span> ec95c258266b8e985848cae688effa2b\n\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> cd<span class=\"token operator\">-</span><span class=\"token class-name\">test</span>\n\nname<span class=\"token punctuation\">:</span> \napp<span class=\"token punctuation\">:</span> app\nEOF<span class=\"token string\">\"\"</span>\"\n                        sh <span class=\"token string\">\"cat /var/lib/jenkins/workspace/${env.JOB_NAME}/helm-service/values.yaml\"</span>\n                        <span class=\"token function\">withCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">usernamePassword</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">credentialsId</span><span class=\"token punctuation\">:</span> 'github'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">passwordVariable</span><span class=\"token punctuation\">:</span> 'GIT_PASSWORD'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">usernameVariable</span><span class=\"token punctuation\">:</span> 'GIT_USERNAME'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            sh <span class=\"token string\">\"\"</span>\"\n                            git <span class=\"token keyword\">add</span> <span class=\"token operator\">--</span>all <span class=\"token punctuation\">.</span>\n                            git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"Deploy ${env.JOB_NAME} ${env.BUILD_NUMBER}\"</span>\n                            git <span class=\"token class-name\">push</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$<span class=\"token punctuation\">{</span>GIT_USERNAME<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>GIT_PASSWORD<span class=\"token punctuation\">}</span>@github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>JisunParkRea<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>dvwa<span class=\"token operator\">-</span>helm\n                            <span class=\"token string\">\"\"</span>\"\n                        <span class=\"token punctuation\">}</span>                      \n                        env<span class=\"token punctuation\">.</span>pushYamlResult<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n                        echo 'Remove Deploy Files'\n                        <span class=\"token function\">withCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">usernamePassword</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">credentialsId</span><span class=\"token punctuation\">:</span> 'github'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">passwordVariable</span><span class=\"token punctuation\">:</span> 'GIT_PASSWORD'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">usernameVariable</span><span class=\"token punctuation\">:</span> 'GIT_USERNAME'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            sh <span class=\"token string\">\"\"</span>\"\n                            git reset <span class=\"token operator\">--</span>hard HEAD<span class=\"token operator\">^</span>\n                            git push <span class=\"token operator\">--</span><span class=\"token class-name\">force</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$<span class=\"token punctuation\">{</span>GIT_USERNAME<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>GIT_PASSWORD<span class=\"token punctuation\">}</span>@github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>JisunParkRea<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>dvwa<span class=\"token operator\">-</span>helm\n                            <span class=\"token string\">\"\"</span>\"\n                        <span class=\"token punctuation\">}</span>\n                        env<span class=\"token punctuation\">.</span>pushYamlResult<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\n                        currentBuild<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> 'FAILURE'\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Argo Deploy'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                script<span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">withEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"PATH=/usr/local/bin:$PATH\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            sh<span class=\"token string\">\"\"</span>\"\n<span class=\"token preprocessor property\">#!/bin/bash</span>\nexpect <span class=\"token operator\">&lt;&lt;</span> EOF\nspawn argocd login <span class=\"token operator\">--</span>grpc<span class=\"token operator\">-</span>web $ARGOCD_DOMAIN\n\nexpect <span class=\"token string\">\"WARNING: server certificate had error: x509: cannot validate certificate for 34.67.162.44 because it doesn't contain any IP SANs. Proceed insecurely (y/n)?\"</span>\nsend <span class=\"token string\">\"y\\r\"</span><span class=\"token punctuation\">;</span>\n\nexpect <span class=\"token string\">\"Username:\"</span>\nsend <span class=\"token string\">\"admin\\r\"</span><span class=\"token punctuation\">;</span>    \n\nexpect <span class=\"token string\">\"Password:\"</span>\nsend <span class=\"token string\">\"$ARGOCD_PW\\r\"</span><span class=\"token punctuation\">;</span>    \n                                \nexpect eof\nEOF\n                                argocd app <span class=\"token keyword\">get</span> $ARGOCD_APP_NAME\n                                argocd app sync $ARGOCD_APP_NAME\n                            <span class=\"token string\">\"\"</span>\"\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n                        currentBuild<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> 'FAILURE'\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n    post <span class=\"token punctuation\">{</span> \n    success <span class=\"token punctuation\">{</span> \n        slackSend <span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">channel</span><span class=\"token punctuation\">:</span> SLACK_CHANNEL<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">color</span><span class=\"token punctuation\">:</span> 'good'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})\"</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">}</span>\n    failure <span class=\"token punctuation\">{</span>\n        slackSend <span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">channel</span><span class=\"token punctuation\">:</span> SLACK_CHANNEL<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">color</span><span class=\"token punctuation\">:</span> 'bad'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"FAILURE: '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})\"</span><span class=\"token punctuation\">)</span>\t\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<h3 id=\"파이프라인의-프로세스\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%9D%98-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\" aria-label=\"파이프라인의 프로세스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프라인의 프로세스</h3>\n<ol>\n<li>소스코드를 Clone 해온 뒤 Build 테스트  </li>\n<li>Dependency-Check Analysis 로 코드 정적분석  </li>\n<li>Sonarqube and Quality gate 정적분석  </li>\n<li>위의 검사에서 에러가 없으면 Docker image build  </li>\n<li>빌드한 도커이미지를 HARBOR 저장소에 PUSH  </li>\n<li>HARBOR에 저장된 이미지의 에러 검사  </li>\n<li>새로운 빌드 넘버로 메니페스트 수정 후 GITOPS 저장소로 푸시  </li>\n<li>ArgoCD로 Sync 요청</li>\n</ol>\n<br/>\n<hr>\n<h3 id=\"dvwa-빌드-소스-저장소\" style=\"position:relative;\"><a href=\"#dvwa-%EB%B9%8C%EB%93%9C-%EC%86%8C%EC%8A%A4-%EC%A0%80%EC%9E%A5%EC%86%8C\" aria-label=\"dvwa 빌드 소스 저장소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DVWA! 빌드 소스 저장소!</h3>\n<br/>\n<ul>\n<li>\n<p>DVWA 빌드소스 저장소는 아래와 같이 구성했습니다.<br>\n<a href=\"https://github.com/nasa1515/cccr-dvwa\">저장소링크</a> </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/98904414-e3f86f00-24fc-11eb-8576-c3088ed9babd.png\" alt=\"스크린샷, 2020-11-12 15-36-51\"></p>\n<p>Jenkins 에서는 해당 저장소를 Clone 후 이미지를 빌드 할 예정입니다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"maven-빌드-전-사전작업\" style=\"position:relative;\"><a href=\"#maven-%EB%B9%8C%EB%93%9C-%EC%A0%84-%EC%82%AC%EC%A0%84%EC%9E%91%EC%97%85\" aria-label=\"maven 빌드 전 사전작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MAVEN 빌드 전 사전작업</h3>\n<br/>\n<p>아래 두 설정을 모두 만족해야 정상적인 빌드가 됩니다.</p>\n<ol>\n<li>\n<p>Jenkins에서 JDK 설정  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/102846942-b506de80-4454-11eb-8bb9-90cd582d3447.PNG\" alt=\"캡처\"></p>\n</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p>Jenkins에서 MAVEN 설정</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/102846986-cc45cc00-4454-11eb-89e4-28471be55ba7.PNG\" alt=\"캡처2\"></p>\n</li>\n</ol>\n<br/>\n<hr>\n<h3 id=\"빌드-파이프라인-스크립트\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"빌드 파이프라인 스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드 파이프라인 스크립트</h3>\n<br/>\n<ul>\n<li>\n<p>전체적인 파이프라인 스크립트에서 MAVEN 빌드 부분만 떼어냈습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">pipeline <span class=\"token punctuation\">{</span>\n    agent <span class=\"token return-type class-name\">any</span>\n    tools <span class=\"token punctuation\">{</span> \n        maven 'mvn' \n    <span class=\"token punctuation\">}</span>\n    stages <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Git clone'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n                git 'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>JisunParkRea<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>dvwa<span class=\"token punctuation\">.</span>git'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Build Test'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            steps <span class=\"token punctuation\">{</span>\n               sh 'mvn clean package <span class=\"token operator\">-</span>Dcheckstyle<span class=\"token punctuation\">.</span>skip <span class=\"token operator\">-</span>Dspotbugs<span class=\"token punctuation\">.</span>skip <span class=\"token operator\">-</span>Dpmd<span class=\"token punctuation\">.</span>skip'\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>스크립트에 대한 설명없이도 아마 대부분은 이해가 될 것입니다.<br>\n간단하게 설명하자면 Agent any로 jdk, mvn들의 툴을 선언해준 뒤<br>\n빌드 소스의 저장소를 clone 한 뒤 해당 소스들을 MVN으로 빌드하는 간단한 구문입니다<br>\n문법이 궁금하신분들은 <a href=\"https://jojoldu.tistory.com/355\">참고링크</a>를 읽어보시면 빠르게 이해 될 것입니다.<br>\n다음 포스트 부터는 전체적인 정적분석 툴의 스크립트에 대해서 간단하게 설명하겠습니다.</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>Jenkins를 만져본게 이번이 처음이었습니다.<br>\n문법부터 하나씩 차근차근 배워가며 하다보니 오히려 이 부분에서 시간이 많이 낭비된 것 같았습니다.<br>\n그렇지만 초반에 계획했던 프로젝트의 성격과 점점 맞아 떨어져가고 있다는 것에 너무 기쁩니다.  </p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%A0%84%EC%B2%B4-jenkins-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8\">✔ 전체 Jenkins 파이프라인</a></p>\n<ul>\n<li><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8%EC%9D%98-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">파이프라인의 프로세스</a></li>\n<li><a href=\"#dvwa-%EB%B9%8C%EB%93%9C-%EC%86%8C%EC%8A%A4-%EC%A0%80%EC%9E%A5%EC%86%8C\">DVWA! 빌드 소스 저장소!</a></li>\n<li><a href=\"#maven-%EB%B9%8C%EB%93%9C-%EC%A0%84-%EC%82%AC%EC%A0%84%EC%9E%91%EC%97%85\">MAVEN 빌드 전 사전작업</a></li>\n<li><a href=\"#%EB%B9%8C%EB%93%9C-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\">빌드 파이프라인 스크립트</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   이전 포스트에서 간단하게 이미지를 빌드한 뒤 ArgoCD와 SYNC를 맞춰 배포를 자동화한 파이프 라인을 완성했습니다. 이번 포스트에서는 Jenkins에서 해당 이미지를 빌드하는 부분에 대해서 포스트 했습니다. 사용 할 툴을 다음과 같습니다.   Jenkins maven github ArgoCD ✔ 전체 Jenkins 파이프라인 파이프라인 스크립트 파이프라인의 프로세스 소스코드를 Clone 해온 뒤 Build 테스트   Dependency-Check Analysis 로 코드 정적분석   Sonarqube and Quality gate 정적분석   위의 검사에서 에러가 없으면 Docker image build…","frontmatter":{"date":"August 08, 2021","title":"[DEVOPS] - Jenkins로 Dvmn 앱 이미지 자동 빌드 및 푸시하기","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-jenkinspush/"}},"next":{"id":"801845e2-ac0a-5de8-bf0a-12fd8d8036e2","html":"<p>머리말  </p>\n<p>이번 포스트에서는 앱 구동을 위한 MYSQL 이중화입니다 이전 포스트에서 앱 배포를 완료했지만<br>\nMYSQL pod의 경우 볼륨의 문제로 하나밖에 뜨지 않아 DB 데이터를 어떻게 저장할지에 대한 고민이 있었습니다.<br>\n고민해본 결과 NFS를 만들어서 그쪽에 데이터를 저장해놓고 POD가 실행될때마다 NFS를 읽어오자! 라는 결론이 나왔습니다<br>\n그래서 NFS 서버를 구축하려고 하려는 찰나 GCP에서 API 서비스로 제공한다는 소식을 듣고 바로 사용해 보았습니다</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>GCP FileStore</li>\n<li>k8s PV,PVC</li>\n<li>ArgoCD</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"-발생-이슈\" style=\"position:relative;\"><a href=\"#-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%8A%88\" aria-label=\" 발생 이슈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 발생 이슈</h2>\n<ul>\n<li>\n<p>MYSQL Pod를 두개 이상 띄우려고 할때 아래와 같은 문제가 발생했다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96840929-11b24100-1486-11eb-9157-145a7d03bf00.png\" alt=\"스크린샷, 2020-10-22 16-45-58\"></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">FailedAttachVolume\nMulti<span class=\"token operator\">-</span>Attach error <span class=\"token keyword\">for</span> volume <span class=\"token string\">\"pvc-73526617-313f-46f4-be6f-0776dcf151d3\"</span> Volume <span class=\"token keyword\">is</span> <span class=\"token class-name\">already</span> used <span class=\"token keyword\">by</span> <span class=\"token function\">pod</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> mysql<span class=\"token operator\">-</span><span class=\"token number\">6749799856</span><span class=\"token operator\">-</span>kb9mp\t<span class=\"token number\">6</span> minutes ago</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이유는 Google Persistent Disk의 경우 Block 스토리지의 Access Mode인 <code class=\"language-text\">ReadWriteMany</code> 옵션을 지원하지 않았습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96841616-f6940100-1486-11eb-8b22-406d019bcf8b.png\" alt=\"스크린샷, 2020-10-22 16-52-21\"></p>\n<p>그래서 GKE를 만들때 자동 생성되는 스토리지 클래스를 사용하지 않고 PV를 직접 만들어 연결해줘야 하는 상황이 되었습니다</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다행히 공식문서를 보니 GCP에서 NFS(Filestore)를 PV로 지원한다는 문서를 확인해서 NFS를 사용하기로 했습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96841887-4f639980-1487-11eb-9578-307b7b86267d.png\" alt=\"스크린샷, 2020-10-22 16-54-43\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>GCP에서는 기본적으로 Standard 형의 스토리지 클래스를 지원합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96842565-268fd400-1488-11eb-9d64-66a4b1fd41db.png\" alt=\"스크린샷, 2020-10-22 17-00-52\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><a href=\"https://kubernetes.io/ko/docs/concepts/storage/storage-classes/\">쿠버네티스 공식문서</a></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">스토리지클래스는 관리자가 제공하는 스토리지의 <span class=\"token string\">\"classes\"</span>를 설명할 수 있는 방법을 제공한다<span class=\"token punctuation\">.</span> \n다른 클래스는 서비스의 품질 수준 또는 백업 정책<span class=\"token punctuation\">,</span> 클러스터 관리자가 정한 임의의 정책에 매핑될 수 있다<span class=\"token punctuation\">.</span> \n쿠버네티스 자체는 클래스가 무엇을 나타내는지에 대해 상관하지 않는다<span class=\"token punctuation\">.</span> \n다른 스토리지 시스템에서는 이 개념을 <span class=\"token string\">\"프로파일\"</span>이라고도 한다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">스토리지클래스 리소스 \n각 스토리지클래스에는 해당 스토리지클래스에 속하는 퍼시스턴트볼륨을 동적으로 프로비저닝 할 때 사용되는 provisioner<span class=\"token punctuation\">,</span> parameters 와 reclaimPolicy 필드가 포함된다<span class=\"token punctuation\">.</span>\n\n스토리지클래스 오브젝트의 이름은 중요하며<span class=\"token punctuation\">,</span> 사용자가 특정 클래스를 요청할 수 있는 방법이다<span class=\"token punctuation\">.</span> \n관리자는 스토리지클래스 오브젝트를 처음 생성할 때 클래스의 이름과 기타 파라미터를 설정하며<span class=\"token punctuation\">,</span> 일단 생성된 오브젝트는 업데이트할 수 없다<span class=\"token punctuation\">.</span>\n\n관리자는 특정 클래스에 바인딩을 요청하지 않는 PVC에 대해서만 기본 스토리지클래스를 지정할 수 있다<span class=\"token punctuation\">.</span> </code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스에서는 아래와 같이 정의 할 수 있다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> storage<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">StorageClass</span>\n  metadata<span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">standard</span>\n    provisioner<span class=\"token punctuation\">:</span> kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>aws<span class=\"token operator\">-</span><span class=\"token class-name\">ebs</span>\n  parameters<span class=\"token punctuation\">:</span>\n  type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">gp2</span>\n  reclaimPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Retain</span>\n  allowVolumeExpansion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\n  mountOptions<span class=\"token punctuation\">:</span>\n   <span class=\"token operator\">-</span> <span class=\"token class-name\">debug</span>\n  volumeBindingMode<span class=\"token punctuation\">:</span> Immediate</code></pre></div>\n<ul>\n<li>즉 간단하게 말해서 PV를 미리 선언해주는 것이라고 이해하는게 편하다.</li>\n<li>보통 PV 선언 -> PVC 선언의 과정을 거쳐야 하지만 스토리지 클래스를 미리 정의해놓으면 PV선언 과정을 생략할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-이제-gcp의-nfsfilestore를-구성해보죠\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EC%A0%9C-gcp%EC%9D%98-nfsfilestore%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%B4%EB%B3%B4%EC%A3%A0\" aria-label=\" 이제 gcp의 nfsfilestore를 구성해보죠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 이제 GCP의 NFS(Filestore)를 구성해보죠</h2>\n<br/>\n<h3 id=\"gcp-nfs-설정\" style=\"position:relative;\"><a href=\"#gcp-nfs-%EC%84%A4%EC%A0%95\" aria-label=\"gcp nfs 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GCP NFS 설정</h3>\n<br/>\n<ul>\n<li>\n<p>우선 GCP Console에서 FILEStore API를 설치해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96854037-0404b780-1496-11eb-81c4-922d294a441d.png\" alt=\"스크린샷, 2020-10-22 18-39-50\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그 후 Console TAP의 Filestore 메뉴에서 인스턴스를 생성해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96854705-c3f20480-1496-11eb-89dc-3a46f4b99df6.png\" alt=\"스크린샷, 2020-10-22 18-45-28\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>생성이 완료되었다면 자동으로 NFS가 연동됩니다. 임시로 Jenkins 인스턴스에서 Showmount 명령으로 확인해봅시다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># showmount <span class=\"token operator\">-</span>e <span class=\"token number\">10.254</span><span class=\"token number\">.194</span><span class=\"token number\">.122</span>\nExport list <span class=\"token keyword\">for</span> <span class=\"token number\">10.254</span><span class=\"token number\">.194</span><span class=\"token number\">.122</span><span class=\"token punctuation\">:</span>\n<span class=\"token operator\">/</span>nfs_share <span class=\"token number\">192.168</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">172.16</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">8</span>\n<span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<p>NFS끼리 잘 연결되어있는걸 확인했습니다!!</p>\n</li>\n</ul>\n<br/>\n<p><code class=\"language-text\">FileStore를 이용한 NFS 구성은 정말 간단합니다. 비용만아니면 매일 쓰고 싶네요</code></p>\n<br/>\n<hr>\n<h3 id=\"nfs를-gke의-볼륨으로-사용\" style=\"position:relative;\"><a href=\"#nfs%EB%A5%BC-gke%EC%9D%98-%EB%B3%BC%EB%A5%A8%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"nfs를 gke의 볼륨으로 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NFS를 GKE의 볼륨으로 사용</h3>\n<p><a href=\"https://cloud.google.com/filestore/docs/accessing-fileshares?hl=ko\">공식 문서</a></p>\n<br/>\n<br/>\n<h3 id=\"pv-생성\" style=\"position:relative;\"><a href=\"#pv-%EC%83%9D%EC%84%B1\" aria-label=\"pv 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PV 생성</h3>\n<ul>\n<li>\n<p>NFS를 볼륨으로 이용하기 위해서 아래와 같은 메니페스트 파일을 작성했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolume</span>\nmetadata<span class=\"token punctuation\">:</span>\n    name<span class=\"token punctuation\">:</span> dbserver\n    <span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> cd<span class=\"token operator\">-</span><span class=\"token class-name\">test</span>\nspec<span class=\"token punctuation\">:</span>\n    capacity<span class=\"token punctuation\">:</span>\n    storage<span class=\"token punctuation\">:</span> 10Gi\nvolumeMode<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Filesystem</span>\naccessModes<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteMany</span>\npersistentVolumeReclaimPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Retain</span>\nstorageClassName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\nnfs<span class=\"token punctuation\">:</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token class-name\">nfs_share</span>\n    server<span class=\"token punctuation\">:</span> <span class=\"token number\">10.254</span><span class=\"token number\">.194</span><span class=\"token number\">.122</span></code></pre></div>\n<p>PV를 생성할때 NFS서버의 IP와 path를 제대로 설정해주지 않으면<br>\n아래와 같은 <code class=\"language-text\">NFS MOUNT ERROR</code>가 발생합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">Search\nWarning\tFailedMount\tUnable to attach <span class=\"token keyword\">or</span> <span class=\"token class-name\">mount</span> volumes<span class=\"token punctuation\">:</span> <span class=\"token class-name\">unmounted</span> volumes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>mysql<span class=\"token operator\">-</span>vol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">unattached</span> volumes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span>token<span class=\"token operator\">-</span>6778k mysql<span class=\"token operator\">-</span>vol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> timed <span class=\"token keyword\">out</span> waiting <span class=\"token keyword\">for</span> the condition\t<span class=\"token number\">2</span> minutes ago\nWarning\tFailedMount\tMountVolume<span class=\"token punctuation\">.</span>SetUp failed <span class=\"token keyword\">for</span> volume <span class=\"token string\">\"dbserver\"</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">mount</span> failed<span class=\"token punctuation\">:</span> exit status <span class=\"token number\">1</span> <span class=\"token class-name\">Mounting</span> command<span class=\"token punctuation\">:</span> systemd<span class=\"token operator\">-</span>run <span class=\"token class-name\">Mounting</span> arguments<span class=\"token punctuation\">:</span> <span class=\"token operator\">--</span>description<span class=\"token operator\">=</span>Kubernetes transient mount <span class=\"token keyword\">for</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>kubelet<span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>d28155b1<span class=\"token operator\">-</span>9c27<span class=\"token operator\">-</span>4f6e<span class=\"token operator\">-</span>b1b7<span class=\"token operator\">-</span>9169c926f784<span class=\"token operator\">/</span>volumes<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">~</span>nfs<span class=\"token operator\">/</span>dbserver <span class=\"token operator\">--</span>scope <span class=\"token operator\">--</span> <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>containerized_mounter<span class=\"token operator\">/</span>mounter mount <span class=\"token operator\">-</span>t nfs <span class=\"token operator\">-</span><span class=\"token class-name\">o</span> hard<span class=\"token punctuation\">,</span>nfsvers<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token number\">10.254</span><span class=\"token number\">.194</span><span class=\"token number\">.120</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>file<span class=\"token operator\">-</span>share <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>kubelet<span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>d28155b1<span class=\"token operator\">-</span>9c27<span class=\"token operator\">-</span>4f6e<span class=\"token operator\">-</span>b1b7<span class=\"token operator\">-</span>9169c926f784<span class=\"token operator\">/</span>volumes<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">~</span>nfs<span class=\"token operator\">/</span><span class=\"token class-name\">dbserver</span> Output<span class=\"token punctuation\">:</span> Running scope <span class=\"token keyword\">as</span> <span class=\"token class-name\">unit</span><span class=\"token punctuation\">:</span> run<span class=\"token operator\">-</span>r3af88159402a4b1ab6bc70512f1cbc1d<span class=\"token punctuation\">.</span>scope <span class=\"token class-name\">Mount</span> failed<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mount</span> failed<span class=\"token punctuation\">:</span> exit status <span class=\"token number\">32</span> <span class=\"token class-name\">Mounting</span> command<span class=\"token punctuation\">:</span> chroot <span class=\"token class-name\">Mounting</span> arguments<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>containerized_mounter<span class=\"token operator\">/</span>rootfs mount <span class=\"token operator\">-</span>t nfs <span class=\"token operator\">-</span><span class=\"token class-name\">o</span> hard<span class=\"token punctuation\">,</span>nfsvers<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token number\">10.254</span><span class=\"token number\">.194</span><span class=\"token number\">.120</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>file<span class=\"token operator\">-</span>share <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>kubelet<span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>d28155b1<span class=\"token operator\">-</span>9c27<span class=\"token operator\">-</span>4f6e<span class=\"token operator\">-</span>b1b7<span class=\"token operator\">-</span>9169c926f784<span class=\"token operator\">/</span>volumes<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">~</span>nfs<span class=\"token operator\">/</span>dbserver<span class=\"token punctuation\">]</span> Output<span class=\"token punctuation\">:</span> mount<span class=\"token punctuation\">.</span>nfs<span class=\"token punctuation\">:</span> Connection timed <span class=\"token keyword\">out</span>\t<span class=\"token number\">2</span> minutes ago</code></pre></div>\n<br/>\n</li>\n<li>추가적으로 storageClassName: \"\" 항목을 None으로 둬야만 합니다.<br>\n그래야 GKE 기본 스토리지 클래스인 GCP-PD 형식의 PV를 생성하지 않기 때문에<br>\nNONE이 필수적입니다! 이 항목도 NONE이 아닐 경우 위와 같은 에러가 발생합니다.</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"pvc-생성\" style=\"position:relative;\"><a href=\"#pvc-%EC%83%9D%EC%84%B1\" aria-label=\"pvc 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PVC 생성</h3>\n<ul>\n<li>\n<p>NFS를 볼륨으로 이용하기 위해서 아래와 같은 메니페스트 파일을 작성했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PersistentVolumeClaim</span>\nmetadata<span class=\"token punctuation\">:</span>\n    creationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n    labels<span class=\"token punctuation\">:</span>\n        io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\n    name<span class=\"token punctuation\">:</span> mysql<span class=\"token operator\">-</span>pvc\n    <span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> cd<span class=\"token operator\">-</span><span class=\"token class-name\">test</span>\nspec<span class=\"token punctuation\">:</span>\n  accessModes<span class=\"token punctuation\">:</span>\n  <span class=\"token operator\">-</span> <span class=\"token class-name\">ReadWriteMany</span>\n  storageClassName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n  volumeName<span class=\"token punctuation\">:</span> <span class=\"token class-name\">dbserver</span>\n  resources<span class=\"token punctuation\">:</span>\n    requests<span class=\"token punctuation\">:</span>\n      storage<span class=\"token punctuation\">:</span> 5Gi\nstatus<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>PVC의 경우 별로 바꿔줄 것이 없습니다. 다만 <code class=\"language-text\">storageClassName = NONE</code>이기 때문에<br>\n<code class=\"language-text\">volumeName: dbserver</code> 항목으로 PV를 잡아주어야 원할하게 바운딩 됩니다!</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 PVC를 생성했으니 PV &#x3C;-> PVC가 바운딩되었는지 확인해봅시다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">></span> kubectl <span class=\"token keyword\">get</span> pv <span class=\"token operator\">-</span>n cd<span class=\"token operator\">-</span>test\nNAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM               STORAGECLASS   REASON   AGE\ndbserver   10Gi       RWX            Retain           Bound    cd<span class=\"token operator\">-</span>test<span class=\"token operator\">/</span>mysql<span class=\"token operator\">-</span>pvc                           <span class=\"token number\">28m</span>\n<span class=\"token operator\">></span> kubectl <span class=\"token keyword\">get</span> pvc <span class=\"token operator\">-</span>n cd<span class=\"token operator\">-</span>test\nNAME        STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nmysql<span class=\"token operator\">-</span>pvc   Bound    dbserver   10Gi       RWX                           <span class=\"token number\">28m</span></code></pre></div>\n<p>너무 정상적입니다~ 이제 MYSQL POD를 배포해봅시다!</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"mysql-pod-배포\" style=\"position:relative;\"><a href=\"#mysql-pod-%EB%B0%B0%ED%8F%AC\" aria-label=\"mysql pod 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MYSQL POD 배포</h3>\n<br/>\n<ul>\n<li>\n<p>MYSQL 배포를 위해 아래와 같은 메니페스트 파일을 작성했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Deployment</span>\nmetadata<span class=\"token punctuation\">:</span>\nannotations<span class=\"token punctuation\">:</span>\n    kompose<span class=\"token punctuation\">.</span>cmd<span class=\"token punctuation\">:</span> kompose convert\n    kompose<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">:</span> <span class=\"token number\">1.21</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>992df58d8<span class=\"token punctuation\">)</span>\ncreationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\nlabels<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\nname<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\nspec<span class=\"token punctuation\">:</span>\nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\nstrategy<span class=\"token punctuation\">:</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Recreate</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    annotations<span class=\"token punctuation\">:</span>\n        kompose<span class=\"token punctuation\">.</span>cmd<span class=\"token punctuation\">:</span> kompose convert\n        kompose<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">:</span> <span class=\"token number\">1.21</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>992df58d8<span class=\"token punctuation\">)</span>\n    creationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n    labels<span class=\"token punctuation\">:</span>\n        io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\n    spec<span class=\"token punctuation\">:</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> env<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">MYSQL_ROOT_PASSWORD</span>\n        <span class=\"token keyword\">value</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>비번은 안댑니다<span class=\"token punctuation\">]</span>\n        image<span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.5</span>\n        imagePullPolicy<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">mysql</span>\n        resources<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        volumeMounts<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span><span class=\"token class-name\">mysql</span>\n        name<span class=\"token punctuation\">:</span> mysql<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n    restartPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Always</span>\n    serviceAccountName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    volumes<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> mysql<span class=\"token operator\">-</span><span class=\"token class-name\">vol</span>\n        persistentVolumeClaim<span class=\"token punctuation\">:</span>\n        claimName<span class=\"token punctuation\">:</span> mysql<span class=\"token operator\">-</span><span class=\"token class-name\">pvc</span>\n    status<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같은 배포 메니페스트로 배포를 하면! 아래와 같이 정상적으로 구동이 됩니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96962891-a7aba180-1542-11eb-9d2d-3eb34c814aed.png\" alt=\"스크린샷, 2020-10-23 15-15-52\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"에러-발생ㅠ\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%E3%85%A0\" aria-label=\"에러 발생ㅠ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생..ㅠ</h3>\n<p><code class=\"language-text\">MYSQL Unable to lock ./ib_logfile0, error: 11</code></p>\n<br/>\n<ul>\n<li>\n<p>MYSQL Deployment에 Replicas 를 2로 설정 후 이중화를 하려니깐 아래와 같은 ERROR가 발생하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>Note<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span>secure<span class=\"token operator\">-</span>file<span class=\"token operator\">-</span>priv <span class=\"token keyword\">is</span> <span class=\"token keyword\">set</span> to NULL<span class=\"token punctuation\">.</span> Operations related to importing <span class=\"token keyword\">and</span> exporting data are disabled\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>Note<span class=\"token punctuation\">]</span> mysqld <span class=\"token punctuation\">(</span>mysqld <span class=\"token number\">5.5</span><span class=\"token number\">.62</span><span class=\"token punctuation\">)</span> starting <span class=\"token keyword\">as</span> <span class=\"token class-name\">process</span> <span class=\"token number\">1</span> <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>Note<span class=\"token punctuation\">]</span> Plugin 'FEDERATED' <span class=\"token keyword\">is</span> <span class=\"token class-name\">disabled</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> The InnoDB memory heap <span class=\"token keyword\">is</span> <span class=\"token class-name\">disabled</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> Mutexes <span class=\"token keyword\">and</span> rw_locks use GCC atomic builtins\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> Compressed tables use zlib <span class=\"token number\">1.2</span><span class=\"token number\">.11</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> Using Linux native AIO\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> Initializing <span class=\"token class-name\">buffer</span> pool<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">128.0M</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> InnoDB<span class=\"token punctuation\">:</span> Completed initialization of buffer <span class=\"token class-name\">pool</span>\nInnoDB<span class=\"token punctuation\">:</span> Unable to <span class=\"token keyword\">lock</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>ib_logfile0<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">error</span><span class=\"token punctuation\">:</span> <span class=\"token number\">11</span>\nInnoDB<span class=\"token punctuation\">:</span> Check that you <span class=\"token keyword\">do</span> <span class=\"token keyword\">not</span> already have another mysqld <span class=\"token class-name\">process</span>\nInnoDB<span class=\"token punctuation\">:</span> <span class=\"token keyword\">using</span> the same InnoDB data <span class=\"token keyword\">or</span> log files<span class=\"token punctuation\">.</span>\nInnoDB<span class=\"token punctuation\">:</span> Error <span class=\"token keyword\">in</span> opening <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>ib_logfile0\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> Plugin 'InnoDB' init function returned error<span class=\"token punctuation\">.</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> Plugin 'InnoDB' registration <span class=\"token keyword\">as</span> <span class=\"token class-name\">a</span> STORAGE ENGINE failed<span class=\"token punctuation\">.</span>\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> Unknown<span class=\"token operator\">/</span>unsupported <span class=\"token class-name\">storage</span> engine<span class=\"token punctuation\">:</span> InnoDB\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> Aborting\n<span class=\"token number\">201023</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token punctuation\">[</span>Note<span class=\"token punctuation\">]</span> mysqld<span class=\"token punctuation\">:</span> Shutdown complete</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>검색을 쫌 해보니 내 환경은 NFS로 data파일을 받아오는 구조이다 보니 한쪽의 MYSQL Pod가 mysql을 실행시키면서<br>\n해당 데이터파일을 사용하고 있으면 다른쪽에서는 사용하지 못하는 이슈였다.</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Rancher UI에서 확인해보니 컨테이너가 계속 재시작 되고 있다 ㅠㅠ</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96963063-f35e4b00-1542-11eb-8671-2c25c1f6236d.png\" alt=\"스크린샷, 2020-10-23 14-15-19\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>머리말에서도 언급했듯이 이중화보다는 NFS로 DB 데이터를 받아오는 것과 별 차이가 없다고 생각을 했습니다.<br>\n그래서 위의 Mysql 배포 메니페스트 파일의 replicas를 1로 두는 것으로 마무리 했습니다</li>\n</ul>\n<hr>\n<h3 id=\"nfs---mysql-data-연동-확인\" style=\"position:relative;\"><a href=\"#nfs---mysql-data-%EC%97%B0%EB%8F%99-%ED%99%95%EC%9D%B8\" aria-label=\"nfs   mysql data 연동 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NFS &#x3C;-> Mysql Data 연동 확인</h3>\n<p>replicas를 1로 두어 NFS와 데이터파일을 연동한 POD에서 확인해봅시다!</p>\n<ul>\n<li>\n<p>우선 MYSQL과 연동한 취약점 검사 WEB에서 아이디를 하나 만들어보죠 해당 ID 데이터는 MYSQL DB에 저장됩니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96963398-8c8d6180-1543-11eb-8cb1-52c331066848.png\" alt=\"스크린샷, 2020-10-23 15-22-18\"></p>\n<p>test2라는 User를 만들었습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96963649-f148bc00-1543-11eb-9ff7-25c533985471.png\" alt=\"스크린샷, 2020-10-23 15-25-06\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>MYSQL POD로 가서 데이터를 확인해봅시다.</p>\n<p>아래와 같이 DB Table에 Account 정보가 잘 들어와 있네요</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">mysql<span class=\"token operator\">></span> \nmysql<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> users<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> name  <span class=\"token operator\">|</span> login <span class=\"token operator\">|</span> email           <span class=\"token operator\">|</span> password                         <span class=\"token operator\">|</span> created_at          <span class=\"token operator\">|</span> updated_at          <span class=\"token operator\">|</span> role <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> test  <span class=\"token operator\">|</span> test  <span class=\"token operator\">|</span> test@gmail<span class=\"token punctuation\">.</span>com  <span class=\"token operator\">|</span> 098f6bcd4621d373cade4e832627b4f6 <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">46</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">46</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">19</span> <span class=\"token operator\">|</span> test2 <span class=\"token operator\">|</span> test2 <span class=\"token operator\">|</span> test2@naver<span class=\"token punctuation\">.</span>com <span class=\"token operator\">|</span> ad0234829205b9033196ba818f7a872b <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">06</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">54</span> <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">06</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">54</span> <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token number\">2</span> rows <span class=\"token keyword\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"이제-mysql-pod를-강제로-죽인-뒤-다시-가동시켜서-db-data를-확인해보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-mysql-pod%EB%A5%BC-%EA%B0%95%EC%A0%9C%EB%A1%9C-%EC%A3%BD%EC%9D%B8-%EB%92%A4-%EB%8B%A4%EC%8B%9C-%EA%B0%80%EB%8F%99%EC%8B%9C%EC%BC%9C%EC%84%9C-db-data%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"이제 mysql pod를 강제로 죽인 뒤 다시 가동시켜서 db data를 확인해보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 MYSQL POD를 강제로 죽인 뒤 다시 가동시켜서 DB DATA를 확인해보겠습니다</h3>\n<br/>\n<ul>\n<li>\n<p>Rancher에서는 POD를 다음과 같이 간단하게 종료 시킬 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96963953-8ea3f000-1544-11eb-9963-c488299be958.png\" alt=\"스크린샷, 2020-10-23 15-29-29\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Deployement가 POD를 재시작 시켜 이전과 다른 이름으로 컨테이너가 가동 됐습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96964025-ad09eb80-1544-11eb-9bd6-0f30336e6e03.png\" alt=\"스크린샷, 2020-10-23 15-30-20\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>새로 생성된 컨테이너에 접속해서 DB 데이터를 보면 기존에 추가했던 test2 user 정보가 남아있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">mysql<span class=\"token operator\">></span> use dvja\nReading table information <span class=\"token keyword\">for</span> completion of table <span class=\"token keyword\">and</span> column names\nYou can turn off <span class=\"token keyword\">this</span> feature to <span class=\"token keyword\">get</span> a quicker startup with <span class=\"token operator\">-</span>A\n\nDatabase changed\nmysql<span class=\"token operator\">></span> <span class=\"token class-name\">show</span> tables<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> Tables_in_dvja <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> products       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> users          <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token number\">2</span> rows <span class=\"token keyword\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> \nmysql<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> users<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> id <span class=\"token operator\">|</span> name  <span class=\"token operator\">|</span> login <span class=\"token operator\">|</span> email           <span class=\"token operator\">|</span> password                         <span class=\"token operator\">|</span> created_at          <span class=\"token operator\">|</span> updated_at          <span class=\"token operator\">|</span> role <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">18</span> <span class=\"token operator\">|</span> test  <span class=\"token operator\">|</span> test  <span class=\"token operator\">|</span> test@gmail<span class=\"token punctuation\">.</span>com  <span class=\"token operator\">|</span> 098f6bcd4621d373cade4e832627b4f6 <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">46</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">46</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">19</span> <span class=\"token operator\">|</span> test2 <span class=\"token operator\">|</span> test2 <span class=\"token operator\">|</span> test2@naver<span class=\"token punctuation\">.</span>com <span class=\"token operator\">|</span> ad0234829205b9033196ba818f7a872b <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">06</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">54</span> <span class=\"token operator\">|</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">23</span> <span class=\"token number\">06</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">54</span> <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token number\">2</span> rows <span class=\"token keyword\">in</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> </code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>물론 웹페이지에서도 접속이 원활합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96964242-17229080-1545-11eb-8632-0a6251fc34d8.png\" alt=\"스크린샷, 2020-10-23 15-33-20\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>이번에 새롭게 FileStore라는 GCP의 기능을 사용해봤습니다.<br>\n진짜 이전에 노가다식으로 했었던 NFS 서버 구성이 너무 무의미해지는 서비스입니다<br>\n이번 실습은 왜 클라우드 서비스 하는지 알 것같은 실습이었습니다<br>\n비록 기존에 생각하던 MYSQL POD의 Active/slave,Heartbeat 방식의 이중화는 못했지만 nfs에서 데이터를 받아오는 것도 만족한 서비스 인 것 같습니다.\n이번 포스트까지 이제 전반적인 서비스 구성을 마무리 지은 것 같습니다.<br>\n이제는 보안툴과 취약점 검사, ARgo-cd 자동화 등을 진행해야겠죠…</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%B0%9C%EC%83%9D-%EC%9D%B4%EC%8A%88\">✔ 발생 이슈</a></li>\n<li>\n<p><a href=\"#-%EC%9D%B4%EC%A0%9C-gcp%EC%9D%98-nfsfilestore%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%B4%EB%B3%B4%EC%A3%A0\">✌ 이제 GCP의 NFS(Filestore)를 구성해보죠</a></p>\n<ul>\n<li><a href=\"#gcp-nfs-%EC%84%A4%EC%A0%95\">GCP NFS 설정</a></li>\n<li><a href=\"#nfs%EB%A5%BC-gke%EC%9D%98-%EB%B3%BC%EB%A5%A8%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9\">NFS를 GKE의 볼륨으로 사용</a></li>\n<li><a href=\"#pv-%EC%83%9D%EC%84%B1\">PV 생성</a></li>\n<li><a href=\"#pvc-%EC%83%9D%EC%84%B1\">PVC 생성</a></li>\n<li><a href=\"#mysql-pod-%EB%B0%B0%ED%8F%AC\">MYSQL POD 배포</a></li>\n<li><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%E3%85%A0\">에러 발생..ㅠ</a></li>\n<li><a href=\"#nfs---mysql-data-%EC%97%B0%EB%8F%99-%ED%99%95%EC%9D%B8\">NFS &#x3C;-> Mysql Data 연동 확인</a></li>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-mysql-pod%EB%A5%BC-%EA%B0%95%EC%A0%9C%EB%A1%9C-%EC%A3%BD%EC%9D%B8-%EB%92%A4-%EB%8B%A4%EC%8B%9C-%EA%B0%80%EB%8F%99%EC%8B%9C%EC%BC%9C%EC%84%9C-db-data%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">이제 MYSQL POD를 강제로 죽인 뒤 다시 가동시켜서 DB DATA를 확인해보겠습니다</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 07, 2021","title":"[DEVOPS] - GCP의 FileStore (NFS) 를 PV로 사용해보자","categories":"DevOps CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-gcpfilestore/"}},"prev":{"id":"08b7b481-d22d-5769-b198-a051e19e0c19","html":"<p>머리말  </p>\n<p>이번 포스트에서는 구축된 DevSecOps 파이프라인에서 보안쪽을 강화하기 위해서 OWASP ZAP을 도입한 도입기 포스트입니다.<br>\n보통 외부 서버로 두고 서비스의 Port나 IP등을 스캔하지만 저희는 k8s 클러스터에 직접 올려 pod들을 스캐닝 하려고 했습니다.</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>Jenkins</li>\n<li>OWASP ZAP</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-gcp의-lb-ip를-고정\" style=\"position:relative;\"><a href=\"#-gcp%EC%9D%98-lb-ip%EB%A5%BC-%EA%B3%A0%EC%A0%95\" aria-label=\" gcp의 lb ip를 고정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ GCP의 LB IP를 고정</h2>\n<ul>\n<li>\n<p>저는 gcloud-sdk를 이용하여 Cloud Shell에서 작업을 진행했습니다</p>\n<p>아래와 같이 CLoud Shell에 원격 접속 후 GKE 클러스터에 대한 권한을 받아옵니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud config <span class=\"token keyword\">set</span> compute<span class=\"token operator\">/</span>zone us<span class=\"token operator\">-</span>central1<span class=\"token operator\">-</span>f\nUpdated property <span class=\"token punctuation\">[</span>compute<span class=\"token operator\">/</span>zone<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ \nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud container clusters <span class=\"token keyword\">get</span><span class=\"token operator\">-</span>credentials c<span class=\"token operator\">-</span>dcn6h\nFetching cluster endpoint <span class=\"token keyword\">and</span> auth data<span class=\"token punctuation\">.</span>\nkubeconfig entry generated <span class=\"token keyword\">for</span> c<span class=\"token operator\">-</span>dcn6h<span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ kubectl <span class=\"token keyword\">get</span> nodes\nNAME                                  STATUS   ROLES    AGE     VERSION\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>b3hf   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   2d21h   v1<span class=\"token punctuation\">.</span><span class=\"token number\">17.12</span><span class=\"token operator\">-</span>gke<span class=\"token punctuation\">.</span><span class=\"token number\">1501</span>\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   2d21h   v1<span class=\"token punctuation\">.</span><span class=\"token number\">17.12</span><span class=\"token operator\">-</span>gke<span class=\"token punctuation\">.</span><span class=\"token number\">1501</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그 후 아래 명령어로 외부 고정 IP를 생성해줍니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses create app<span class=\"token operator\">-</span>lb\nFor the <span class=\"token class-name\">following</span> address<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>test<span class=\"token operator\">-</span>lb<span class=\"token operator\">-</span>ip<span class=\"token punctuation\">]</span>\nchoose a region <span class=\"token keyword\">or</span> <span class=\"token keyword\">global</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">global</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>east2\n<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast2\n<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast3\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>south1\n<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>southeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>southeast2\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> australia<span class=\"token operator\">-</span>southeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>north1\n<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west1\n<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west2\n<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west3\n<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west4\n<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west6\n<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> northamerica<span class=\"token operator\">-</span>northeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> southamerica<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>central1\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>east4\n<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west1\n<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west2\n<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west3\n<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west4\nPlease enter your <span class=\"token class-name\">numeric</span> choice<span class=\"token punctuation\">:</span>  <span class=\"token number\">19</span>         \n\nCreated <span class=\"token punctuation\">[</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>googleapis<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>compute<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>projects<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token operator\">/</span>regions<span class=\"token operator\">/</span>us<span class=\"token operator\">-</span>central1<span class=\"token operator\">/</span>addresses<span class=\"token operator\">/</span>app<span class=\"token operator\">-</span>lb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses list\nNAME                 ADDRESS<span class=\"token operator\">/</span>RANGE   TYPE      PURPOSE  NETWORK  REGION           SUBNET  STATUS\napp<span class=\"token operator\">-</span>lb               <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>    EXTERNAL                    us<span class=\"token operator\">-</span>central1              RESERVED\njenkins<span class=\"token operator\">-</span>external<span class=\"token operator\">-</span>ip  <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>   EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE\nrancher              <span class=\"token number\">34.64</span><span class=\"token number\">.228</span><span class=\"token number\">.193</span>   EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후에 배포 할 서비스의 메니페스트 파일에 <code class=\"language-text\">spec.loadBalancerIP</code>항목을 정의하여 LB IP를 고정하여 넣어주어야 합니다.</p>\n<p>GCP의 경우 LoadBalancerIP 항목을 명시해주면 자동으로 매칭되어 서비스가 올라옵니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nannotations<span class=\"token punctuation\">:</span>\n    cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>neg<span class=\"token punctuation\">:</span> '<span class=\"token punctuation\">{</span><span class=\"token string\">\"ingress\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>'\n    field<span class=\"token punctuation\">.</span>cattle<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>publicEndpoints<span class=\"token punctuation\">:</span> '<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"addresses\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"35.223.27.28\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"protocol\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"TCP\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"serviceName\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"cd-test:app\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"allNodes\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>'\n    kompose<span class=\"token punctuation\">.</span>cmd<span class=\"token punctuation\">:</span> kompose convert\n    kompose<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">:</span> <span class=\"token number\">1.21</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>992df58d8<span class=\"token punctuation\">)</span>\nlabels<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nname<span class=\"token punctuation\">:</span> app<span class=\"token operator\">-</span>lb\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nspec<span class=\"token punctuation\">:</span>\nexternalTrafficPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Cluster</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"8080\"</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\nselector<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nsessionAffinity<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ClientIP</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LoadBalancer</span>\nloadBalancerIP<span class=\"token punctuation\">:</span> <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>    <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span>이부분<span class=\"token operator\">>></span><span class=\"token operator\">>></span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Service의 배포가 완료되면 아래와 같이 <code class=\"language-text\">App-lb</code>가 <code class=\"language-text\">IN_USE</code>로 바뀐 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses list\nNAME                 ADDRESS<span class=\"token operator\">/</span>RANGE  TYPE      PURPOSE  NETWORK  REGION           SUBNET  STATUS\napp<span class=\"token operator\">-</span>lb               <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>   EXTERNAL                    us<span class=\"token operator\">-</span>central1              IN_USE\njenkins<span class=\"token operator\">-</span>external<span class=\"token operator\">-</span>ip  <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>  EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE\nrancher              <span class=\"token number\">34.64</span><span class=\"token number\">.228</span><span class=\"token number\">.193</span>  EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE</code></pre></div>\n<br/>\n</li>\n<li>\n<p>또한 k8s 클러스터에서도 해당 LB IP로 서비스가 정상적으로 생성됨을 확인!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ kubectl <span class=\"token keyword\">get</span> svc <span class=\"token operator\">-</span>n cd<span class=\"token operator\">-</span>test\nNAME     TYPE           CLUSTER<span class=\"token operator\">-</span>IP    EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>    <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>          AGE\napp<span class=\"token operator\">-</span>lb   LoadBalancer   <span class=\"token number\">10.0</span><span class=\"token number\">.30</span><span class=\"token number\">.127</span>   <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>   <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">32530</span><span class=\"token operator\">/</span>TCP   9m2s\nmysql    ClusterIP      <span class=\"token number\">10.0</span><span class=\"token number\">.24</span><span class=\"token number\">.243</span>   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>         <span class=\"token number\">3306</span><span class=\"token operator\">/</span>TCP         18h</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-jenkins에-owasp-zap-설치\" style=\"position:relative;\"><a href=\"#-jenkins%EC%97%90-owasp-zap-%EC%84%A4%EC%B9%98\" aria-label=\" jenkins에 owasp zap 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Jenkins에 OWASP ZAP 설치</h2>\n<p>처음에는 Kubernetes의 Helm으로 ZAP을 배포하려고 했었지만<br>\nURL을 읽어오는 SPIDER등의 설정 가이드가 많이 부족해서 Jnekins와 연동하기로 했습니다</p>\n<br/>\n<ul>\n<li>\n<p>제일 처음으로 가장 최신 릴리즈 버전의 ZAPPROXY를 다운받습니다.</p>\n<ul>\n<li><a href=\"https://github.com/zaproxy/zaproxy/releases\">링크</a></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97682414-78b1a480-1adb-11eb-958b-0e649ab8c4b3.png\" alt=\"스크린샷, 2020-10-30 18-12-23\"></p>\n<br/>\n<ul>\n<li>이후 다운받은 Zip파일을 Jenkins 인스턴스에 <code class=\"language-text\">복사</code>합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root<span class=\"token class-name\">@jenkins</span> bin<span class=\"token punctuation\">]</span># pwd\n<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin\n<span class=\"token punctuation\">[</span>root<span class=\"token class-name\">@jenkins</span> bin<span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt ZAP_D<span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">26</span><span class=\"token operator\">/</span>\ntotal <span class=\"token number\">5472</span>\n<span class=\"token operator\">-</span>rwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins    <span class=\"token number\">4187</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins  <span class=\"token number\">123778</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>ico\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins <span class=\"token number\">5440213</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token operator\">-</span>D<span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">26</span><span class=\"token punctuation\">.</span>jar\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins     <span class=\"token number\">206</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>bat\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">161</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> xml\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">3</span> jenkins jenkins      <span class=\"token number\">23</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> scripts\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins    <span class=\"token number\">2157</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> README\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> plugin\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">265</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> license\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> lib\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> lang\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">140</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> db\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">3</span> root    root         <span class=\"token number\">86</span> Oct <span class=\"token number\">28</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">09</span> <span class=\"token range operator\">..</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">9</span> jenkins jenkins     <span class=\"token number\">180</span> Oct <span class=\"token number\">29</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span> <span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>복사가 끝났다면 Jenkins에 OWASP ZAP 관련 Plugin 들을 모두 설치합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674610-279cb300-1ad1-11eb-9494-067695600318.png\" alt=\"스크린샷, 2020-10-30 16-58-32\"></p>\n<ul>\n<li>Official OWASP ZAP Jenkins Plugin</li>\n<li>OWASP Dependency-Check Plugin</li>\n<li>OWASP Dependency-Track Plugin</li>\n<li>OWASP Markup Formatter Plugin</li>\n<li>JDK</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>플러그인이 설치가 완료되었다면 ZAP의 환경변수 설정을 합니다.</p>\n<ul>\n<li>Manage Jenkins -> configure System 탭에서 설정</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>미리 Jenkins 인스턴스 내에 Clone 해놓았던 zap.sh 스크립트가 존재하는 위치 지정  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97678244-d7c0ea80-1ad6-11eb-8024-da31b3d943ee.png\" alt=\"스크린샷, 2020-10-30 17-39-16\"></p>\n<ul>\n<li>Environment variables : 체크</li>\n<li>List of variables.name : ZAPROXY_HOME -> 나중에 프로젝트에서 설정할 위치</li>\n<li>List of variables.Value : 실제 Jenkins 서버의 zap.sh 스크립트 위치.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>ZAP PROXY 설정  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97678185-c4ae1a80-1ad6-11eb-8db4-eda98456b84b.png\" alt=\"스크린샷, 2020-10-30 17-38-45\"></p>\n<ul>\n<li>Default Host : Jenkins 서버의 로컬로 돌리기 위한 값.</li>\n<li>Default Port : Jenkins 서버에서 동작할 Port 번호</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>환경변수 설정 후 freestyle의 프로젝트를 생성합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674823-83673c00-1ad1-11eb-99ed-53a6f5531b41.png\" alt=\"스크린샷, 2020-10-30 16-57-15\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후 Build tab에서 <code class=\"language-text\">Excute ZAP</code>을 추가해 Zap PROXY의 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674988-ccb78b80-1ad1-11eb-9f85-b09ca675f922.png\" alt=\"스크린샷, 2020-10-30 17-03-11\"></p>\n<ul>\n<li>localhost : Jenkins 서버의 로컬에서 동작.</li>\n<li>override Port : Jenkins 서버에서 동작할 Zap의 사용포트</li>\n<li>JAVA : OWASP ZAP은 JAVA기반으로 돌기때문에 JDK 플러그인의 추가 설치가 필요합니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 ZAP의 실행 Method의 관련 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97675101-0ab4af80-1ad2-11eb-8ca4-a1d424602fb4.png\" alt=\"스크린샷, 2020-10-30 17-04-54\"></p>\n<ul>\n<li>Environment Variable : 이전에 설정했던 OWASP ZAP의 환경변수 값 기입</li>\n<li>ZAP Home Directory : Jenkins 서버에 미리 Clone 해놓은 Zap.sh 파일의 위치 기입</li>\n<li>Filename : job-seesion으로 default 잡아주면 됩니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 Session Properties 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97675273-5ebf9400-1ad2-11eb-962e-d710a3dc9968.png\" alt=\"스크린샷, 2020-10-30 17-07-17\"></p>\n<ul>\n<li>Context Name : default로 컨택스트를 잡아주면 됩니다.</li>\n<li>Include in Context : 검사할 URL의 주소를 넣어주면 됩니다</li>\n<li>Username : 실제 사이트에 들어가기 위한 Account User 정보</li>\n<li>Password : Account User의 PASSWORD 정보</li>\n<li>Logged in Indicator\t: 스캔을 마치고 나올 메세지를 적으면 됩니다 <code class=\"language-text\">\\QLogout\\E</code></li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>바로 아래에 있는 Form-based Authentication 설정도 추가해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677213-469d4400-1ad5-11eb-93c7-7c2bdd55344c.png\" alt=\"스크린샷, 2020-10-30 17-28-05\"></p>\n<ul>\n<li>Login Form Target URL : 로그인 Parameter를 기입할 URL 주소를 기입</li>\n<li>Username Parameter : Username Parameter 값을 기입해줍니다.</li>\n<li>Password Parameter : Password Parameter 값을 기입해줍니다.  </li>\n<li>Attack Mode.Starting Point\t: 스캔할 URL의 가장 초기 URL을 적어줍니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>바로 아래에 있는 Spider Scan 설정도 추가해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677451-9b40bf00-1ad5-11eb-93a2-87d01ae6fe77.png\" alt=\"스크린샷, 2020-10-30 17-30-26\"></p>\n<ul>\n<li>Spider Scan : 체크</li>\n<li>Recurse : 체크</li>\n<li>Subtree Only : 체크</li>\n<li>Active Scan : 체크</li>\n<li>Policy : default Policy 로 설정</li>\n<li>Recurse : 체크</li>\n</ul>\n</li>\n<li>\n<p>스캔 결과의 리포트 파일을 남기기 위해서 Generate Reports 설정을 추가합니다.</p>\n<ul>\n<li>Generate Reports : 체크</li>\n<li>Clean Workspace Reports : 체크</li>\n<li>Filename : ~ {BUILD_ID} 빌드 넘버로 남기기 위한 설정</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Report 파일의 형식이 다음과 같음을 확인합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677724-11452600-1ad6-11eb-9a15-0b11ac43f947.png\" alt=\"스크린샷, 2020-10-30 17-33-45\"></p>\n<ul>\n<li>Generate Report : xml, html 설정 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>POST Build ACTION을 설정해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677797-2de15e00-1ad6-11eb-9611-b0d58fd7988c.png\" alt=\"스크린샷, 2020-10-30 17-34-32\"></p>\n<ul>\n<li>Files to archive : 결과 파일로 띄워줄 로그와 리포트 파일의 위치.</li>\n<li>HTML directory to archive : Report 파일의 디렉토리 기입</li>\n<li>Index page[s] : 위에서 생성해줬던 <code class=\"language-text\">[REPORT 파일명].html</code> 기입.</li>\n<li>Report title : html로 띄워줄 리포트 결과의 제목</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-빌드-테스트\" style=\"position:relative;\"><a href=\"#-%EB%B9%8C%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 빌드 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 빌드 테스트!</h2>\n<ul>\n<li>\n<p>Jenkins의 OWASP ZAP 프로젝트에서 빌드!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97683734-d34b0080-1adb-11eb-9785-af9b9eb6d381.png\" alt=\"스크린샷, 2020-10-30 18-14-55\"></p>\n<ul>\n<li>빌드가 완료되면 위의 그림과 같이 html,xml 로그가 생성됩니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 해당 Report 파일에 접속하면 아래와 같은 형식으로 리포트 해주는 것을 확인가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684035-f5dd1980-1adb-11eb-8207-790e2b143e8b.png\" alt=\"스크린샷, 2020-10-30 18-15-54\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>리포트 파일을 확인해보면 홈페이지의 A1,A2등의 취약점 검사를 자동으로 한 것이 확인가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684390-17d69c00-1adc-11eb-8c1e-9c0dd0cd26c2.png\" alt=\"스크린샷, 2020-10-30 18-16-51\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 동작은 해당 웹페이지에 user, password를 자동으로 기입해주고</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684956-3fc5ff80-1adc-11eb-8c9f-be7222b8a14b.png\" alt=\"스크린샷, 2020-10-30 18-17-57\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>메인 페이지에 연결되어있는 1~10까지의 보안취약점에 대해 자동으로 스캔을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97685276-58361a00-1adc-11eb-8b96-c86e60d393e4.png\" alt=\"스크린샷, 2020-10-30 18-18-39\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 보안툴의 자동화는 물론이고 보안툴을 올려보는 것 조차 이번이 처음이었습니다.<br>\n처음엔 Helm으로 k8s 클러스터에 배포하려는 시행착오를 3일정도 겪고, 실패하고, Docker 컨테이너 기반으로 올리고, 실패하고를 반복하면서 5일정도를 날렸던 것 같습니다.<br>\n결국 Jenkins로 파이프라인에 자동적으로 스캔하도록 설정함으로 마무리를 지었지만 아직 미련은 조금 남아있는 상태입니다.<br>\n프로젝트가 끝나고 개인적으로 Helm을 이용해 클러스터에 직접 배포하는 것도 성공해봐야겠습니다<br>\n이번 OWASP ZAP 도입기를 작성하면서 DevSecOps 파이프라인의 보안에 대해서 조금의 감은 잡은 것 같습니다.<br>\n실제로 OWASP ZAP 관련해서 한글문서나 정확한 설정 가이드가 미흡하다 보니<br>\n이번 포스트가 많은 사람들에게 도움이 되었으면 좋겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-gcp%EC%9D%98-lb-ip%EB%A5%BC-%EA%B3%A0%EC%A0%95\">✔ GCP의 LB IP를 고정</a></li>\n<li><a href=\"#-jenkins%EC%97%90-owasp-zap-%EC%84%A4%EC%B9%98\">✌ Jenkins에 OWASP ZAP 설치</a></li>\n<li><a href=\"#-%EB%B9%8C%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\">🙌 빌드 테스트!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 09, 2021","title":"[DEVOPS] - Jenkins Pipeline에 OWASP ZAP 도입기","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-owaspzap/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/devops-jenkinspush/","nextSlug":"/devops-gcpfilestore/","prevSlug":"/devops-owaspzap/"}},"staticQueryHashes":["1073350324","2938748437"]}