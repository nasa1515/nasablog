{"componentChunkName":"component---src-templates-blog-template-js","path":"/azure-blob/","result":{"data":{"cur":{"id":"8a05a396-fc68-5762-a348-1f0fb07f765d","html":"<p>머리말  </p>\n<p>스토리지에 대한 내용은 앞에서 간단하게 다뤘지만\n세부적인 내용들이 많이 부족합니다, 더 구체화 한 포스트를 이번에 작성했습니다. </p>\n<hr>\n<h2 id=\"-스토리지storage\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80storage\" aria-label=\" 스토리지storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 스토리지(STORAGE)</h2>\n<br/>\n<p>모든 데이터는 비정형데이터, 반정형데이터, 정형 데이터라는 3가지 유형으로 나눌 수 있습니다.</p>\n<br/>\n<p>데이터 유형</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">유형</th>\n<th align=\"left\">설명</th>\n<th align=\"left\">예</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">비정형 데이터</td>\n<td align=\"left\">데이터가 개체로 존재, 구조화 되지 않아 연산이 불가능</td>\n<td align=\"left\">문서, 동영상, 이미지 등 이진 파일</td>\n</tr>\n<tr>\n<td align=\"left\">반정형 데이터</td>\n<td align=\"left\">스키마에 해당하는 메타데이터가 데이터 내부에 있으며 연산 불가능</td>\n<td align=\"left\">HTML, XML, JSON, YAML 형식 데이터</td>\n</tr>\n<tr>\n<td align=\"left\">정형 데이터</td>\n<td align=\"left\">고정된 칼럼에 저장되거나 행과 열에 의해 데이터 속성이 구분 되는 데이터, 연산가능</td>\n<td align=\"left\">RDBMS 테이블, 스프레드시트</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<br/>\n<p>Azure 스토리지는 위 3가지 유형 뿐 아니라 빅데이터 등의 시나리오도 지원합니다.</p>\n<ul>\n<li>가상 컴퓨터의 디스크와 공유 폴더용 스토리지</li>\n<li>정의된 데이터 모델을 가지고 있지 않은 비정형 데이터(Blob 데이터)용 스토리지</li>\n<li>관계형 DB 데이터, 스트레드시트처럼 스키마 구조를 따르는 구조화 데이터 스토리지</li>\n<li>반 구조화된 데이터 (반정형)용 스토리지</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-계정storage-account\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account\" aria-label=\" 스토리지 계정storage account permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 스토리지 계정(Storage Account)</h2>\n<p>Azure 스토리지 서비스는 Storage Account를 통해 관리합니다.<br>\n즉 스토리지 계정이 Storage 서비스의 최상위 NameSpace이며 하위의 스토리지를 사용할 수 있게 권한을 부여합니다.<br>\n그래서 스토리지 서비스를 사용하기 위한 첫 번째 작업이 Storage Account를 만드는 것입니다.<br>\n이제 스토리지 계정을 생성하며 세부 옵션들에 대해 알아봅시다</p>\n<br/>\n<ul>\n<li>\n<p>스토리지 계정 생성 Tab</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107182135-8acaa980-6a1f-11eb-9cc4-a74f1e67bb5f.JPG\" alt=\"캡처4444\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Storage Account Name : 아래 3가지 조건을 만족해야 합니다.</p>\n<ul>\n<li>Azure 전체에서 고유한 이름</li>\n<li>이름의 길이는 3~24자</li>\n<li>소문자 및 숫자(소문자로 시작해야 함)  </li>\n</ul>\n<br>\n</li>\n<li>\n<p>Performance : Perfomance는 생성 후 변경 할 수 없습니다.   </p>\n<p>Performance에 따라 선택할 수 있는 Account Kind가 달라 집니다.</p>\n<ul>\n<li>Storage(범용 v1) : Blob 및 파일, 큐, 테이블을 지원하는 레거시 계정</li>\n<li>StorageV2(범용 v2) : 기본 스토리지 계정 v1과 동일 기능 지원</li>\n<li>BlobStorage : Blob 전용 레거시 스토리지 계정</li>\n<li>FileStorage : 프리미엄 성능 계층에서 사용, 파일 공유 전용 스토리지 계정입니다. (SQL 등)</li>\n<li>BlockblobStorage : 프리미엄 계층에서 사용, 개체 데이터를 저장하는 Blob과 추가 Blob 전용 스토리지 계정</li>\n</ul>\n</li>\n</ul>\n <br/>\n<ul>\n<li>\n<p>Replication : 일시적인 하드웨어 오류, 네트워크 이슈에 데이터를 보호하기 위한 복제 옵션</p>\n<p> <img src=\"https://user-images.githubusercontent.com/69498804/107182831-d3369700-6a20-11eb-9842-f450e61e6689.JPG\" alt=\"캡처66666\"></p>\n</li>\n</ul>\n<br/>\n<h3 id=\"기본-지역-내-redundancy-옵션\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\" aria-label=\"기본 지역 내 redundancy 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 지역 내 Redundancy 옵션</h3>\n<br/>\n<p>Azure Storage 계정은 기본 지역으로 설정한 곳에서(예: 한국 중부) 항상 세 차례 복제됩니다.<br>\n기본 지역에서 데이터가 복제되는 옵션은 두 가지 중에서 선택이 가능합니다.</p>\n<br/>\n<ul>\n<li>\n<h3 id=\"lrslocally-redundant-storage\" style=\"position:relative;\"><a href=\"#lrslocally-redundant-storage\" aria-label=\"lrslocally redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LRS(Locally Redundant Storage)</h3>\n<p>-> 물리적으로 동일한 지역 내에 데이터를 세 번 복제하는 방식\n저렴한 방법이지만 해당 데이터센터에 장애가 발생한 경우에는 데이터를 복구할 수 없어 가용성이 떨어집니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183136-8dc69980-6a21-11eb-8ea3-f63e76ad1eee.png\" alt=\"다운로드\"></p>\n<p>data가 세개의 복제본에 완전히 동기화되어야 하기 때문에 쓰기 작업의 경우 세 개의 복제본에 작업이 마쳐야 완료 됩니다.</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"zrszone-redundant-storage\" style=\"position:relative;\"><a href=\"#zrszone-redundant-storage\" aria-label=\"zrszone redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZRS(Zone Redundant Storage)</h3>\n<p>-> 기본 지역 내의 세 개의 다른 가용성 영역에 데이터를 복제하는 방식입니다. (LRS 방식보다 높은 가용성을 제공합니다.)<br>\n한 장소에 세 개의 복제를 모두 저장하는 LRS 방식에 비해서는 더 안전할 수 있지만<br>\nRegion 자체에 문제가 발생하게 되는 경우에는 복구할 수 없습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183291-e5fd9b80-6a21-11eb-8f55-1a43bf7765f5.png\" alt=\"다운로드\"></p>\n<ul>\n<li>현재 한국 Region에서는 사용할 수 없는 옵션입니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"보조-지역-내-redundancy-옵션\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\" aria-label=\"보조 지역 내 redundancy 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조 지역 내 Redundancy 옵션</h3>\n<br/>\n<p>고가용성을 필요로 하는 프로그램의 경우 기본 지역 이외에 보조 지역에 복제해서 보관이 가능합니다.<br>\n단 보조 지역을 선택할 수 없고, 주 지역의 리전 쌍(Paired Region)으로 자동 지정됩니다.<br>\n주의 사항은 보조 지역에 저장되어 있는 데이터는 동기화 되어 있지 않아, 주 지역과 싱크가 정확히 맞지 않을 수 있습니다.  </p>\n<br/>\n<ul>\n<li>\n<h3 id=\"grsgeo-redundant-storage\" style=\"position:relative;\"><a href=\"#grsgeo-redundant-storage\" aria-label=\"grsgeo redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GRS(Geo Redundant Storage)</h3>\n<p>-> LRS 방식으로 기본 지역내에 데이터를 동기화해 보조 지역에 싱크</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183700-9ec3da80-6a22-11eb-917b-85b79f88b697.png\" alt=\"다운로드 (2)\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"gzrsgeo-zone-redundant-storage\" style=\"position:relative;\"><a href=\"#gzrsgeo-zone-redundant-storage\" aria-label=\"gzrsgeo zone redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GZRS(Geo Zone Redundant Storage)</h3>\n<p>-> ZRS 방식으로 기본 지역 내 세곳의 가용성 영역에 동기화,복사.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183813-cb77f200-6a22-11eb-9b32-a73b5f92a697.png\" alt=\"다운로드 (3)\"></p>\n<ul>\n<li>스토리지 계정 종류가 범용 v2의 경우에만 GZRS 혹은 RA-GZRS를 설정할 수 있습니다. 단, 현재 한국 지역에는 지원되지 않습니다.</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>위의 Storage Account 별 Redundancy 방식을 정리하면 아래와 같습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107184065-388b8780-6a23-11eb-8cbd-aa13e27d47de.JPG\" alt=\"캡처11221122\"></p>\n<ul>\n<li>GRS,GZRS의 경우 보조 지역의 데이터의 복제 데이터에 대한 읽기/쓰기 접근이 안됩니다.</li>\n<li>읽기 접근이 가능하기 위해선 표에 있는 RA-GRS,RA-GZRS를 사용해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>더 간단하게 스토리지 별 Account 기능 비교를 정리해봤습니다.</p>\n<table>\n<thead>\n<tr>\n<th>계정종류</th>\n<th>지원 서비스</th>\n<th>성능</th>\n<th>엑세스 계층</th>\n<th>복제 옵션</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Storage</td>\n<td>Blob,File Storage,큐,Table,Disk</td>\n<td>표준 프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS,RA-GRS</td>\n</tr>\n<tr>\n<td>StorageV2</td>\n<td>Blob,File Storage,큐,Table,Disk</td>\n<td>표준 프리미엄</td>\n<td>HOT,COLL</td>\n<td>LRS,ZRS,GRS,RA-GRS,RA-GZRS</td>\n</tr>\n<tr>\n<td>BlobStorage</td>\n<td>블록 Blob,추가 Blob</td>\n<td>표준</td>\n<td>HOT,COLL</td>\n<td>LRS,ZRS,RA-GRS</td>\n</tr>\n<tr>\n<td>BlockBlobStarage</td>\n<td>블록 Blob,추가 Blob</td>\n<td>프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS</td>\n</tr>\n<tr>\n<td>FileStorage</td>\n<td>파일 공유</td>\n<td>프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>Networking : 네트워크 연결 방법과 네트워크 라우팅 기본 설정이 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107185013-f82d0900-6a24-11eb-91ba-21acaec8d43a.JPG\" alt=\"캡처666666\"></p>\n<ul>\n<li>Public Endpoint(All Network) : 기본적인 공용 공유입니다.</li>\n<li>Public Endpoint (Selected Network) : 특정 네트워크에만 엑세스</li>\n<li>Pricate Endpoint : Vnet에서 사설 IP를 할당해 프라이빗 하게 엑세스</li>\n</ul>\n</li>\n</ul>\n<br>\n<br>\n<ul>\n<li>\n<p>엑세스 계층</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107185211-5b1ea000-6a25-11eb-8564-bed7c94fdd1e.JPG\" alt=\"캡처777676\"></p>\n<p>스토리지 계정을 생성할때 Blob 데이터의 엑세스 계층을 지정합니다.  </p>\n<ul>\n<li>HOT : 일반적인 시나리오, 자주 엑세스해야 하는 데이터에 적합</li>\n<li>Cool : HOT에 비해 저장소 비용은 낮고 엑세스 비용은 높다, 30일 동안 저장하는 데이터에 적합</li>\n<li>보관(Archive) : 저장소 비용은 가장 낮으나 검색 비용은 높습니다, 최소 180일 장기 보관 용입니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-계정storage-account-생성\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account-%EC%83%9D%EC%84%B1\" aria-label=\" 스토리지 계정storage account 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 스토리지 계정(Storage Account) 생성</h2>\n<p>위에 설명한 세부 설정 Tab들을 모두 Default로 놓고 간단하게 생성해보겠습니다.  </p>\n<ul>\n<li>\n<p>배포가 정상적으로 이뤄지면 다음과 같이 생성됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107186139-0ed45f80-6a27-11eb-9f9a-fb62b1eafa1d.JPG\" alt=\"캡처988989898\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Access Key Tab에서 발급된 Access Key를 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107186271-46430c00-6a27-11eb-898c-645317dcdb56.JPG\" alt=\"캡처6656656565\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-service\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-service\" aria-label=\" 스토리지 service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌹 스토리지 Service</h2>\n<br/>\n<p>위에서 StorageV2 범용 계정을 생성했다면 기본적으로 모든 스토리지 서비스를 제공합니다.<br>\n각 스토리지 서비스는 HTTP/HTTPS를 통해 어디서나 엑세스 할 수 있습니다.<br>\n따라서 스토리지 서비스 마다 고유한 엑세스 URL을 제공합니다. </p>\n<ul>\n<li>컨테이너(Blob)스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).blob.core.windows.net/</li>\n<li>파일 공유 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).file.core.windows.net/</li>\n<li>큐 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).queue.core.windows.net/</li>\n<li>테이블 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).table.core.windows.net/</li>\n</ul>\n<br/>\n<p>이제 각 스토리지 서비스에 대해 살펴보겠습니다.</p>\n<br/>\n<h3 id=\"blob-컨테이너-storage-service\" style=\"position:relative;\"><a href=\"#blob-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-storage-service\" aria-label=\"blob 컨테이너 storage service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blob (컨테이너) Storage Service</h3>\n<br/>\n<p>구조화되지 않은 대량의 비정형 데이터를 저장하기 위한 개체 스토리지 솔루션입니다.<br>\n원래는 Blob이란 이름을 사용했으나 최근에 컨테이너로 변경되었습니다.<br>\n컨테이너 스토리지는 브라우저를 통해 이미지, 문서 파일에 직접 엑세스 하거나 저장할 경우<br>\n동영상, 오디오 스트리밍, 로그파일 등을 분석하기 위한 데이터 저장 시나리오에 적합합니다.</p>\n<br/>\n<ul>\n<li>\n<p>컨테이너 스토리지의 리소스 관계</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189039-06325800-6a2c-11eb-9105-45da19b6f7fc.png\" alt=\"blob1\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-컨테이너blob-스토리지-생성\" style=\"position:relative;\"><a href=\"#-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88blob-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\" aria-label=\" 컨테이너blob 스토리지 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 컨테이너(Blob) 스토리지 생성</h2>\n<br/>\n<p>컨테이너 스토리지에 Blob 데이터를 저장하기 위해선 우선 컨테이너를 만들어야 합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189266-717c2a00-6a2c-11eb-806c-7f633f01bf7c.JPG\" alt=\"캡처767676767\"></p>\n<br/>\n<p>여기서 컨테이너는 Blob들을 그룹화 하는 논리적인 개념입니다.<br>\n간단히 Blob 집합을 모아 놓은 논리적 개념으로 생각해야 합니다.  </p>\n<br/>\n<p>컨테이너 생성 Option 설명</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189434-b902b600-6a2c-11eb-9fd6-f2ae73e54ff5.JPG\" alt=\"캡처89797898798798\"></p>\n<ul>\n<li>Name : 소문자, 문자와 ”-“만 포함, 길이는 3~64자</li>\n<li>\n<p>Public access level : 컨테이너와 Blob에 익명 엑세스를 관리</p>\n<ul>\n<li>Private : 기본, 익명 엑세스 제공 X</li>\n<li>Blob : 인증 없이 읽을 수 있지만, Blob 목록 나열 x</li>\n<li>Container : Blob을 읽을 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<p>컨테이너를 생성하더라도 스토리지 계정의 다음 부분이 허용되어야 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189964-84432e80-6a2d-11eb-96da-9b43345a8440.JPG\" alt=\"캡처89898898989\"></p>\n<br/>\n<p>Blob 데이터 관리  </p>\n<p>컨테이너를 만들고 나면 2가지 방법으로 데이터를 관리 할 수 있습니다.</p>\n<ul>\n<li>루트에 파일을 저장</li>\n<li>폴더를 생성해 폴더 내에 파일을 저장</li>\n</ul>\n<br/>\n<br/>\n<p>Blob 업로드 Blade의 Option을 살펴봅시다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107190238-eac84c80-6a2d-11eb-9c19-91ce0b488720.JPG\" alt=\"캡처899898989898989\"></p>\n<ul>\n<li>File : 하나 이상의 파일 선택 가능</li>\n<li>Authentication Type : Azure AD, Account Key 방식 제공  </li>\n<li>\n<p>Blob Type : 3가지 유형 존재, 변경 불가능</p>\n<ul>\n<li>블록 blob : 텍스트나 이진 데이터 최대 4.75TiB</li>\n<li>페이지 blob : 임의 엑세스 파일 VHD 파일, 최대 8TiB</li>\n<li>추가 blob : 로그 파일 처럼 데이터를 추가</li>\n</ul>\n</li>\n<li>\n<p>Block Size : 최대 50,000개의 블록을 지원, 기본 값은 4MB</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107190749-8d80cb00-6a2e-11eb-8688-a816293b477c.JPG\" alt=\"987978987987978978\"></p>\n<br/>\n</li>\n<li>Access tier : HOT,CooL을 선택 가능</li>\n<li>Upload to folder : 폴더에 업로드</li>\n<li>Encryption scope : Blob을 만들때 암호화 범위 지정</li>\n</ul>\n<br/>\n<br/>\n<p>이제 컨테이너를 생성하고 임의의 텍스트 파일을 컨테이너에 업로드 해보겠습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191268-434c1980-6a2f-11eb-8e47-bba9999d3e2e.JPG\" alt=\"캡처\"></p>\n<br/>\n<br/>\n<p>저는 NASA1515라는 폴더 안에 업로드 했습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191330-57901680-6a2f-11eb-9dbe-f471f683fa89.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<p>업로드 한 파일의 Overview Tab에서 정보들과, URL을 확인 가능 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191414-78f10280-6a2f-11eb-8f21-04048ff63ff8.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>URL로 접속 해보면 다음과 같이 임시 내용이 표시 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191640-cbcaba00-6a2f-11eb-98fe-69e526bbfcb8.JPG\" alt=\"44\"></p>\n<br/>\n<hr>\n<h2 id=\"-file-share-스토리지-생성\" style=\"position:relative;\"><a href=\"#-file-share-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\" aria-label=\" file share 스토리지 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 File Share 스토리지 생성</h2>\n<p>File Share는 아주 간단합니다. 이름, 할당량만 지정하면 됩니다.<br>\nFile Share는 윈도우, 리눅스, 맥OS에서 연결 할 수 있습니다. 기본적으로 SMB 445 Port를 사용합니다.!!</p>\n<br/>\n<ul>\n<li>\n<p>저는 간단하게 Linux용 Windows Server용 2개를 만들었습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107192630-33cdd000-6a31-11eb-8b9f-fd7df573eb41.JPG\" alt=\"캡처4444\"></p>\n</li>\n</ul>\n<br/>\n<h2 id=\"🤳-windows-server-연결\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%B3-windows-server-%EC%97%B0%EA%B2%B0\" aria-label=\"🤳 windows server 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤳 Windows Server 연결</h2>\n<br/>\n<p>그럼 만들어져 있는 Windows Server에 연결 한뒤 Windows PowerShell ISE를 실행합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107193671-6cba7480-6a32-11eb-9f8a-a0d8ab32dd69.JPG\" alt=\"캡처222\"></p>\n<br/>\n<br/>\n<p>이제 연결 할 Fileshare의 Overview에서 Connect tab의 스크립트를 복사합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107193807-983d5f00-6a32-11eb-8d57-78def2a4eb43.JPG\" alt=\"캡처22313\"></p>\n<br/>\n<br/>\n<p>Windows Service PowerShell에 스크립트를 입력하면 다음과 같이 연결됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107194037-e3f00880-6a32-11eb-812c-b906e847e461.JPG\" alt=\"캡처4444\"></p>\n<br/>\n<br/>\n<p>정상적으로 연결이 되었다면 다음과 같이 탐색기에서 확인이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107194195-139f1080-6a33-11eb-8393-1a3b781d9856.JPG\" alt=\"캡처55555\"></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80storage\">✔ 스토리지(STORAGE)</a></li>\n<li>\n<p><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account\">✌ 스토리지 계정(Storage Account)</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\">기본 지역 내 Redundancy 옵션</a></li>\n<li><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\">보조 지역 내 Redundancy 옵션</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account-%EC%83%9D%EC%84%B1\">👍 스토리지 계정(Storage Account) 생성</a></li>\n<li>\n<p><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-service\">🌹 스토리지 Service</a></p>\n<ul>\n<li><a href=\"#blob-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-storage-service\">Blob (컨테이너) Storage Service</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88blob-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\">🙌 컨테이너(Blob) 스토리지 생성</a></li>\n<li><a href=\"#-file-share-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\">👏 File Share 스토리지 생성</a></li>\n<li><a href=\"#%F0%9F%A4%B3-windows-server-%EC%97%B0%EA%B2%B0\">🤳 Windows Server 연결</a></li>\n</ul>\n</div>","excerpt":"머리말   스토리지에 대한 내용은 앞에서 간단하게 다뤘지만\n세부적인 내용들이 많이 부족합니다, 더 구체화 한 포스트를 이번에 작성했습니다.  ✔ 스토리지(STORAGE) 모든 데이터는 비정형데이터, 반정형데이터, 정형 데이터라는 3가지 유형으로 나눌 수 있습니다. 데이터 유형 유형 설명 예 비정형 데이터 데이터가 개체로 존재, 구조화 되지 않아 연산이 불가능 문서, 동영상, 이미지 등 이진 파일 반정형 데이터 스키마에 해당하는 메타데이터가 데이터 내부에 있으며 연산 불가능 HTML, XML, JSON, YAML 형식 데이터 정형 데이터 고정된 칼럼에 저장되거나 행과 열에 의해 데이터 속성이 구분 되는 데이터, 연산가능…","frontmatter":{"date":"July 30, 2021","title":"[AZURE] Storage Account, Azure BLOG!","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-blob/"}},"next":{"id":"fce848a7-253c-55d6-b796-830043777662","html":"<p>머리말  </p>\n<p>사실 이론적인 내용을 모두 다루고 난 다음에 실습으로 넘어가려고 했지만<br>\n빠른 이해를 위해서는 실습과 이론이 병행되어야 할 것 같아서<br>\nAzure Potal 실습과 병행하여 포스트 하겠습니다.<br>\n이번 포스트는 리소스 태그, 리소스 이동하기 등 리소스에 관련된 실습 내용입니다.  </p>\n<hr>\n<h2 id=\"-azure-resoureces-group-생성\" style=\"position:relative;\"><a href=\"#-azure-resoureces-group-%EC%83%9D%EC%84%B1\" aria-label=\" azure resoureces group 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Azure Resoureces Group 생성</h2>\n<br/>\n<p>Azure의 모든 리소스를 생성한거나 사용하기 위해서는 리소스를 관리하는 RG가 먼저 필요합니다.<br>\n이론적인 내용은 Azure 시리즈의 <a href=\"https://nasa1515.tech/azure-subscriptions\">Resource, Resource Manager</a> 포스트를 확인해주세요  </p>\n<br/>\n<ul>\n<li>\n<p>Azure Portal에서 아래 보이는 Resources Group 메뉴로 접속합니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106970420-23e39100-6790-11eb-962e-9d2fabc5b02c.JPG\" alt=\"RERR\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Resources Group Tab에서 만들기를 선택합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106970741-e16e8400-6790-11eb-80a0-076406482b89.JPG\" alt=\"2\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>아래와 같이 RG Create TAB에서 구독, 그룹명, Regions 을 선택해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106970860-1da1e480-6791-11eb-8167-cbc96b2aeb54.JPG\" alt=\"3\"></p>\n<p>저는 NASA-RG01 이라는 그룹명으로 RG를 생성하겠습니다.</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 NASA-RG01이라는 이름으로 미국동부지역에 생성이 되었습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106971109-93a64b80-6791-11eb-8e6e-060377bf8228.JPG\" alt=\"44\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-resource-생성\" style=\"position:relative;\"><a href=\"#-resource-%EC%83%9D%EC%84%B1\" aria-label=\" resource 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Resource 생성</h2>\n<br/>\n<p>이제 Resource를 관리하기 위한 RG의 생성이 완료되었으니 Resource를 생성해보겠습니다.<br>\n간단하게 Public IP Address 를 하나 생성해보겠습니다.  </p>\n<br/>\n<ul>\n<li>\n<p>Azure의 왼쪽 메뉴 페이지에서 리소스 만들기 탭을 선택합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106971581-8a69ae80-6792-11eb-96bc-516c83e1a560.JPG\" alt=\"5\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>해당 탭으로 이동하면 Azure Market Place로 이동되고 필요한 리소스를 검색해서 만들 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106971953-3c08df80-6793-11eb-8a30-6e593350c237.JPG\" alt=\"6\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Public IP Address를 검색해서 생성해보겠습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106972085-85592f00-6793-11eb-8075-ff5e120abd46.JPG\" alt=\"7\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Create Tab에서 이름, 구독, RG를 선택해서 만들어 줍시다! 방금전에 생성한 RG : NASA-RG01에 속하게 만듭니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106973288-ef72d380-6795-11eb-85b0-01f08d29b614.JPG\" alt=\"41\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 NASA-RG01 RG에 배포가 완료 되었습니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106973511-50021080-6796-11eb-8c06-514dc7f03dbf.JPG\" alt=\"22\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"🤞-resource-tag-생성\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%9E-resource-tag-%EC%83%9D%EC%84%B1\" aria-label=\"🤞 resource tag 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤞 Resource TAG 생성</h2>\n<p>지금은 하나의 리소스만 존재하지만 실제로 서비스 중인 리소스들은 무수히 많은 것이 보통입니다.<br>\n그래서 리소스 그룹을 계획할때 어떤 접근 방식을 사용하던 논리적으로 분류 체계를 구성해야합니다.<br>\n예를 들면 리소스 이름만으로는 확인 할 수 없는 메타데이터들  </p>\n<ul>\n<li>워크로드</li>\n<li>어플리케이션</li>\n<li>기능</li>\n<li>환경(TEST) 등  </li>\n</ul>\n<p>효과적인 분류를 위해 Azure는 TAGS라는 Metadata 요소를 제공합니다.  </p>\n<br/>\n<p>태그는 이름과 값의 문자열 쌍으로 구성되고, 몇가지 제한사항이 있습니다.  </p>\n<ul>\n<li>태그 이름/값의 쌍은 최대 50개</li>\n<li>태그 이름의 길이는 최대 512자, 값은 256자</li>\n<li>특수 문자 포함 불가 - , . 등은 가능</li>\n</ul>\n<br/>\n<h3 id=\"이제-방금전에-생성했던-pip에-tags를-부여해보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-%EB%B0%A9%EA%B8%88%EC%A0%84%EC%97%90-%EC%83%9D%EC%84%B1%ED%96%88%EB%8D%98-pip%EC%97%90-tags%EB%A5%BC-%EB%B6%80%EC%97%AC%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"이제 방금전에 생성했던 pip에 tags를 부여해보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 방금전에 생성했던 PIP에 TAGS를 부여해보겠습니다.</h3>\n<br/>\n<ul>\n<li>\n<p>RG 관리 탭에서 옆의 MENU Bar에서 TAGS를 선택해줍니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106974792-a53f2180-6798-11eb-8b25-f4010588f8bd.JPG\" alt=\"4444\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 2가지 TAGS를 이름/값을 입력한 뒤 저장합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106975075-2f878580-6799-11eb-9548-7df1b053fb5c.JPG\" alt=\"5555\"></p>\n<ul>\n<li>이름 : ApplicationName, 값 : NASAPIP</li>\n<li>이름 : Owner , 값 : NASA1515</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>RG 개요 TAB으로 이동 한 뒤 새로 추가된 TAGS를 확인 후 PIP에 지정해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106975315-a9b80a00-6799-11eb-86c9-50d7b8647a92.JPG\" alt=\"123123\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후 <code class=\"language-text\">태그지정</code> 블레이드에서 PIP에 부여 할 새로운 TAGS를 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106975656-41b5f380-679a-11eb-9ed2-829d95836f3c.JPG\" alt=\"444342423423\"></p>\n<ul>\n<li>ApplicationName/NASAPIP</li>\n<li>Env/Production</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>TAGS 생성이 완료되었으면, TAGS 메뉴에서 확인이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106975942-d882b000-679a-11eb-864b-b326090642c6.JPG\" alt=\"4444443214332423423432\"></p>\n<ul>\n<li>제가 생성했던 3개의 태그가 정리되어있습니다. </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Env/Production TAGS를 선택하면 다음과 같이 연결된 Resources가 보여집니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106976065-14b61080-679b-11eb-86b0-d89576d8ed5d.JPG\" alt=\"DFDFDSFSDFDS\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-resoures-이동\" style=\"position:relative;\"><a href=\"#-resoures-%EC%9D%B4%EB%8F%99\" aria-label=\" resoures 이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👌 Resoures 이동</h2>\n<p>리소스 그룹의 리소스는 필요에 따라 다른 리소스 그룹, 다른 구독, 다른 지역으로 이동할 수 있습니다.<br>\n가장 빈번한 예로는 리소스 그룹의 이름을 변경해야 할 때 이름을 변경할 수 없으므로<br>\n원하는 이름의 리소스 그룹을 새로 생성해 기존 리소스를 이동해야 합니다.<br>\n또는 특정 구독에서 더 이상 비용을 지불할 수 없는 경우에도 이동이 불가피 합니다.  </p>\n<br/>\n<h3 id=\"리소스-이동-시-주의사항\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%9D%B4%EB%8F%99-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"리소스 이동 시 주의사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리소스 이동 시 주의사항</h3>\n<br/>\n<ul>\n<li>구독 간 이동은 양쪽 구독이 동일한 AAD(Azure Active Directory) Tenant에 연결된 경우만 가능</li>\n<li>리소스 이동 중에는 원본 RG, 대상 RG는 잠금 상태가 되어 해당 리소스의 Read &#x26; Write는 차단됩니다.  </li>\n<li>이동하는 리소스와 종속성이 있는 리소스가 있다면 함께 이동해야합니다. EX) VM - DISK - Vnet</li>\n<li>다른 구독으로 이동하려는 리소스와 종속 리소스의 RG가 다르면 하나의 RG로 모은 뒤 이동합니다.  </li>\n<li>AAD(Azure Active Directory), ExpressRoute 같이 이동할 수 없는 리소스도 존재합니다.  </li>\n<li>이동하는 리소스에 대한 Resources provider를 다른 구독에서도 사용할 수 있어야 합니다.</li>\n<li>이동 대상 리소스를 배포했던 위치는 바꿀 수 없습니다.  </li>\n</ul>\n<br/>\n<h3 id=\"리소스-이동-실습\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%9D%B4%EB%8F%99-%EC%8B%A4%EC%8A%B5\" aria-label=\"리소스 이동 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리소스 이동 실습</h3>\n<br/>\n<p>리소스를 이동하는 실습을 위해서 NASA-RG02라는 RG를 하나 더 생성했습니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106978582-db33d400-679f-11eb-989f-884dc7b63d2b.JPG\" alt=\"2222\"></p>\n<br/>\n<ul>\n<li>\n<p>기존 RG 페이지의 명령 바의 <code class=\"language-text\">이동</code> 버튼을 사용합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106978756-3ebe0180-67a0-11eb-80a6-f10dd1f7d8f2.JPG\" alt=\"111111\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><code class=\"language-text\">리소스 이동</code> 블레이드에서 이동할 RG를 선택하고 이동합니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106978880-83499d00-67a0-11eb-802f-37cd3ae1ca82.JPG\" alt=\"333333\"></p>\n<ul>\n<li>저처럼 미리 이동 할 RG를 만들어도 되지만 해당 블레이드에서 생성해도 됩니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이동 시 약간의 시간이 소요되고 다음과 같은 NOTI를 띄워줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106979232-44681700-67a1-11eb-9171-788ba9a9a5ef.JPG\" alt=\"캡처\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이동이 완료되고, 다음과 같이 NASA-RG02 RG에서 PIP를 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/106979590-ff90b000-67a1-11eb-9a4c-7fad79dbe6d8.JPG\" alt=\"캡처\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>이번 포스트에서는 Azure Portal로 기본적인 RG ~ 이동 까지의 실습을 진행했습니다.<br>\n지금은 초보자이기 때문에 Portal로 진행하지만 전체적인 프로세스를 한번 훑고 난 다음에는<br>\n본격적으로 CLI, PowerShell로 진행 할 예정입니다.  </p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-azure-resoureces-group-%EC%83%9D%EC%84%B1\">✔ Azure Resoureces Group 생성</a></li>\n<li><a href=\"#-resource-%EC%83%9D%EC%84%B1\">✌ Resource 생성</a></li>\n<li>\n<p><a href=\"#%F0%9F%A4%9E-resource-tag-%EC%83%9D%EC%84%B1\">🤞 Resource TAG 생성</a></p>\n<ul>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-%EB%B0%A9%EA%B8%88%EC%A0%84%EC%97%90-%EC%83%9D%EC%84%B1%ED%96%88%EB%8D%98-pip%EC%97%90-tags%EB%A5%BC-%EB%B6%80%EC%97%AC%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">이제 방금전에 생성했던 PIP에 TAGS를 부여해보겠습니다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-resoures-%EC%9D%B4%EB%8F%99\">👌 Resoures 이동</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%9D%B4%EB%8F%99-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\">리소스 이동 시 주의사항</a></li>\n<li><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%9D%B4%EB%8F%99-%EC%8B%A4%EC%8A%B5\">리소스 이동 실습</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"July 30, 2021","title":"[AZURE] RG 생성, Resource 생성, TAGING, Resoureces 이동하기","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-resource2/"}},"prev":{"id":"89037838-0ae9-5f0b-980b-071e6772142f","html":"<p>머리말  </p>\n<p>아마 클라우드나 IDC나 어떠한 서비스를 운영하는데 가장 중요한건 부하분산이라고 생각합니다.<br>\n어떤 서비스든 전체적인 서비스에 대한 안정성이 가져야 하는 가장 중요한 것이기 때문이죠<br>\n그래서 이번 포스트에서는 AZURE에서 제공하는 L7 LB Application GateWay에 대해서 포스트 했습니다.  </p>\n<hr>\n<h2 id=\"-application-gateway\" style=\"position:relative;\"><a href=\"#-application-gateway\" aria-label=\" application gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Application GateWay</h2>\n<p>Application GateWay는 웹 트래픽 부하 분산 장치, 즉 L7 LB 입니다.<br>\n요청 URL이나 호스트 헤더등의 HTTP 특성을 기반으로 트래픽을 웹 서버 풀로 보내 부하 분산합니다.  </p>\n<br/>\n<h3 id=\"구성요소\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성요소</h3>\n<p>APPlication GateWay의 구성요소는 다음과 같습니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107314961-1ce2b880-6ad9-11eb-9909-88b48e5f4627.png\" alt=\"how-application-gateway-works\"></p>\n<ul>\n<li>Front-end IP Address : 공용 IP(필수), 개인 IP(선택)모두 할당 가능합니다. AG위치와 Vnet,PIP의 위치는 같아야 합니다.  </li>\n<li>HTTP/HTTPS 수신기 : 들어오는 요청을 받기 위해 하나 이상을 추가합니다.  </li>\n<li>Routing rules : Rules을 사용해 허용 트래픽을 다른위치로 리디렉션 합니다.  </li>\n<li>HTTP 설정 :AG와 Back-end pool 간의 암호화 여부를 설정합니다.  </li>\n<li>상태 프로브 :Back-end pool에서 부하를 받아 줄 서버를 결정합니다. (정상 반환 코드 : 200~399)    </li>\n<li>Back-end Pool : NIC, PIP,INP,FQDN,VM set을 포함해 요청을 백 엔드 서버로 라우팅합니다.  </li>\n<li>WAF(Web Application Firewall) : 수신기가 요청을 받기 전 공격을 감지합니다. </li>\n</ul>\n<br/>\n<p>이론적으로 나열해봤자 이해하는 시간만 길어지니깐 일단 만들어봅시다</p>\n<br/>\n<hr>\n<h2 id=\"-application-gateway-생성\" style=\"position:relative;\"><a href=\"#-application-gateway-%EC%83%9D%EC%84%B1\" aria-label=\" application gateway 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Application GateWay 생성</h2>\n<br/>\n<p>[Create a Resoure] -> [Network] -> [Application Gateway] Tab 으로 이동해 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107316549-320d1680-6adc-11eb-9903-bec6f8ba89f0.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>AG에서는 2개의 Subnet이 필요합니다. 저는 아래처럼 SubNet을 새로 생성했습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107316957-122a2280-6add-11eb-954d-6489f59367c6.JPG\" alt=\"캡처4\"></p>\n<ul>\n<li>1.AG01-Subnet-nasa1515 : AG 용 Subnet</li>\n<li>2.BE-Subnet-nasa1q515 : Back-end Server 용 Subnet</li>\n</ul>\n<br/>\n<br/>\n<p>🤳 SubNet 설정까지 완료되었으면 Front-end 설정을 진행합니다.</p>\n<br/>\n<br/>\n<p>Front-end Tab에서 새로운 PIP를 생성, 설정 후 Back-end 설정으로 넘어갑니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317214-9381b500-6add-11eb-92fe-c26ff8e8ac39.JPG\" alt=\"캡처5\"></p>\n<br/>\n<br/>\n<h3 id=\"back-end-pool-설정\" style=\"position:relative;\"><a href=\"#back-end-pool-%EC%84%A4%EC%A0%95\" aria-label=\"back end pool 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back-end PooL 설정</h3>\n<br/>\n<p>Back-end Pool 설정에서 아래와 같이 새로운 PooL을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317506-23276380-6ade-11eb-85cc-59e25319d952.JPG\" alt=\"캡처6\"></p>\n<ul>\n<li>Add backend pool without targets : AG를 생성 후에 타겟을 추가 합니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"configuration-tab\" style=\"position:relative;\"><a href=\"#configuration-tab\" aria-label=\"configuration tab permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration Tab</h3>\n<br/>\n<p>Configuration Tab에서 Routing Rules을 추가 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317722-8c0edb80-6ade-11eb-9c1c-1ae01682d9e8.JPG\" alt=\"캡처22\"></p>\n<br/>\n<br/>\n<p>Listener (수신기) 설정에서 Frontend IP 설정을 Public으로 설정합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317928-f162cc80-6ade-11eb-9c1b-a53fb6d2668d.JPG\" alt=\"캡처33\"></p>\n<br/>\n<br/>\n<p>Backend Targets 설정에서 이전에 설정했던 Backend 설정을 추가하고, HTTP 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318067-3ab31c00-6adf-11eb-9393-8827126b2011.JPG\" alt=\"캡처44\"></p>\n<br/>\n<br/>\n<p>다음과 같이 HTTP 설정을 추가하고 Routing Rules을 저장합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318128-66360680-6adf-11eb-9717-e2ca76d16ec4.JPG\" alt=\"캡처444\"></p>\n<br/>\n<br/>\n<p>다음과 같이 ReView Tab을 확인하고 AG를 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318410-0f7cfc80-6ae0-11eb-8cc6-7b0d67d60823.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>🤳 AGW는 생성하는데 5~8분정도 소요됩니다. </p>\n<br/>\n<hr>\n<h3 id=\"ag-생성-후-back-end-target-생성-및-추가\" style=\"position:relative;\"><a href=\"#ag-%EC%83%9D%EC%84%B1-%ED%9B%84-back-end-target-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%B6%94%EA%B0%80\" aria-label=\"ag 생성 후 back end target 생성 및 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AG 생성 후 Back-end Target 생성 및 추가</h3>\n<p>아까 Back-end를 생성할때 Target이 없이 생성했기에 Target을 만들어 추가해줍시다.  </p>\n<br/>\n<ol>\n<li>VM2개 생성, (VM 생성 시 Networking Tab의 SubNet이 AG와 겹치지 않게 해야함)</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318926-25d78800-6ae1-11eb-8509-f26dcc6fe2e5.JPG\" alt=\"캡처4\"></p>\n<br/>\n<br/>\n<ol start=\"2\">\n<li>테스트를 위한 IIS 설치하기 위해 Power Shell을 엽니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107319469-3dfbd700-6ae2-11eb-83a5-a893e8e42b09.JPG\" alt=\"캡처6\"></p>\n<br/>\n<br/>\n<p>다음 스크립트를 실행하여 VM에 IIS를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-AzVMExtension `\n-ResourceGroupName AG01-NASA1515 `\n-ExtensionName IIS `\n-VMName VM01-NASA1515 `\n-Publisher Microsoft.Compute `\n-ExtensionType CustomScriptExtension `\n-TypeHandlerVersion 1.4 `\n-SettingString '{\"commandToExecute\":\"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \\\"C:\\\\inetpub\\\\wwwroot\\\\Default.htm\\\" -Value ($env:computername)\"}' `\n-Location EastUS</code></pre></div>\n<br/>\n<br/>\n<p>설치가 완료되었습니다. (두 개의 VM에 모두 진행해야 합니다.)</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320011-35f06700-6ae3-11eb-904e-beb6f3c2b38b.JPG\" alt=\"캡처5\"></p>\n<br/>\n<br/>\n<ol start=\"3\">\n<li>AG의 Blade를 접속 후 생성한 백 엔드 서버 Pool에 접속합니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320567-4b19c580-6ae4-11eb-99aa-d3ae437cf3a3.JPG\" alt=\"캡처444324\"></p>\n<br/>\n<br/>\n<p>다음과 같이 VM 2개를 추가하고 저장합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320518-2e7d8d80-6ae4-11eb-929a-dd40490068af.JPG\" alt=\"캡처44434343\"></p>\n<br/>\n<br/>\n<hr>\n<h2 id=\"-ag-test\" style=\"position:relative;\"><a href=\"#-ag-test\" aria-label=\" ag test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 AG TEST!!</h2>\n<p>AG가 제대로 구성되었는지 확인하기 위해 VM내에 IIS를 설치했으니 이제 테스트 해봅시다.  </p>\n<br/>\n<p>설정한 AG의 OverView Tab에서 PIP 정보를 확인하고 해당 PIP로 접속해봅시다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320724-9fbd4080-6ae4-11eb-99af-3e54455d822b.JPG\" alt=\"캡처5544554\"></p>\n<br/>\n<br/>\n<p>다음과 같이 IIS 페이지가 정상적으로 구동되고 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320859-e14deb80-6ae4-11eb-92fd-481735c929b5.JPG\" alt=\"vm1\"></p>\n<br/>\n<br/>\n<p>물론 AG이기 때문에 F5(새로고침)을 여러번 하면 다음과 같이 VM2로 트래픽이 분산됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320906-fa569c80-6ae4-11eb-9d1d-18f5e57417e2.JPG\" alt=\"vm2\"></p>\n<br/>\n<h3 id=\"테스트-완료\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%99%84%EB%A3%8C\" aria-label=\"테스트 완료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 완료!</h3>\n<hr>\n<h2 id=\"-loadbalancer\" style=\"position:relative;\"><a href=\"#-loadbalancer\" aria-label=\" loadbalancer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ LoadBalancer</h2>\n<p>기본적으로 Front-end로 들어오는 Inbound Traffic을 Backend-PooL로 분산하는 동작방식은<br>\n이전 포스트에서 다뤘던 L7 LB인 Application Gateway와 동일합니다.  </p>\n<p>다만 LoadBalancer의 알고리즘은 배포 모드에 따라 결정됩니다. 기본 값은 아래 그림처럼 튜플 해시로 동작합니다  </p>\n<br/>\n<p>Azure LoadBalancer의 동작</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107323107-0cd2d500-6ae9-11eb-8513-8a934c22f6f0.png\" alt=\"load-balancer-distribution\"></p>\n<br/>\n<br/>\n<p>L4 LB는 아래와 같이 Public, Internal 두가지로 설정 할 수 있습니다.    </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107323867-64257500-6aea-11eb-9891-5232c5802636.JPG\" alt=\"캡처2\"></p>\n<p>Public LB : 외부의 트래픽을 내부로 분산시키는 역할<br>\nInternal LB : 대표 Private IP를 가지고 내부 VM의 트래픽을 분산시키는 역할  </p>\n<ul>\n<li>예를 들면 Public LB단에 연결된 VM은 Web으로만 사용하고</li>\n<li>Internal LB단은 DB 연결로만 사용해서 Private하게 설정이 가능합니다.  </li>\n</ul>\n<br/>\n<br/>\n<p>이제 LB를 생성해보면서 자세한 Option들에 대해서 설명하겠습니다!!.</p>\n<br/>\n<hr>\n<h2 id=\"🤞-loadbalancer-생성\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%9E-loadbalancer-%EC%83%9D%EC%84%B1\" aria-label=\"🤞 loadbalancer 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤞 LoadBalancer 생성</h2>\n<br/>\n<p>Create a Resource Tab에서 LoadBalancer를 만들어 줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107325659-7ce35a00-6aed-11eb-87e6-d11e40c90b46.JPG\" alt=\"캡처3333\"></p>\n<ul>\n<li>TYPE : 위에서 설명한 Internal, Public 두가지를 선택할 수 있습니다.</li>\n<li>\n<p>SKU (가격 계층) : Basic, Standard 두가지를 선택 할 수 있습니다. </p>\n<ul>\n<li>Basic : SLA를 지원하지 않습니다</li>\n<li>Standard : SLA : 99.99%, 만약 AZ를 사용한다면 사용해야함.</li>\n</ul>\n</li>\n<li>PIP의 경우 새롭게 만들었습니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"back-end-pool-생성하기\" style=\"position:relative;\"><a href=\"#back-end-pool-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"back end pool 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back-end PooL 생성하기</h3>\n<br/>\n<p>LB의 설정 Tab에서 Back-end PooL을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107451079-e31dba80-6b89-11eb-8dda-0d27e4c7f556.JPG\" alt=\"캡처555\"></p>\n<ul>\n<li>저는 미리 생성해놨던 VM 3를 PooL에 추가했습니다.</li>\n</ul>\n<br/>\n<br/>\n<p>추가된 backend-PooL 확인</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107325960-0004b000-6aee-11eb-9e72-d27855a22a1c.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<hr>\n<h3 id=\"healthprobe-상태-프로브-생성하기\" style=\"position:relative;\"><a href=\"#healthprobe-%EC%83%81%ED%83%9C-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"healthprobe 상태 프로브 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HealthProbe [상태 프로브] 생성하기</h3>\n<p>HealthProbe는 Back-end PooL의 VM 상태를 모니터링 하는 기능입니다.  </p>\n<br/>\n<p>동일하게 LB의 Configure Tab에서 HealthProbe 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107326110-40fcc480-6aee-11eb-9539-7c9f93c3e3f6.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>해당 설정은 VM에게 2번 (Interbal 15초)간 응답이 없으면 Traffic을 분산하지 않습니다.</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"load-balancer-rule-부하-분산-규칙-생성\" style=\"position:relative;\"><a href=\"#load-balancer-rule-%EB%B6%80%ED%95%98-%EB%B6%84%EC%82%B0-%EA%B7%9C%EC%B9%99-%EC%83%9D%EC%84%B1\" aria-label=\"load balancer rule 부하 분산 규칙 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>load balancer rule [부하 분산 규칙] 생성</h3>\n<p>Back-end PooL의 VM에 Traffice을 분산 시키는 방법을 정의합니다.</p>\n<br/>\n<p>동일하게 LB의 Configure Tab에서 load balancer rule 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107452641-ed8d8380-6b8c-11eb-8493-a504ddd28f25.JPG\" alt=\"캡처\"></p>\n<ul>\n<li>Port : LB에서 Traffic을 받을 Port</li>\n<li>Backend Port : Backend-PooL에 연결된 VM들이 사용할 Port</li>\n<li>Session persitence : 부하분산 하는 규칙을 3가지 정할 수 있음</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-lb-test\" style=\"position:relative;\"><a href=\"#-lb-test\" aria-label=\" lb test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 LB TEST</h2>\n<p>위에서 LB에 필요한 Backend-Pool, HealthProbe, LB Rule을 모두 설정했으니 테스트를 해보겠습니다.<br>\n간단하게 TEST를 하기 위해 VM들에 IIS를 설치를 진행하겠습니다.</p>\n<br/>\n<p>VM 1,2,3에 Bastion으로 접속해 Windows PowerShell을 실행합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107330024-5ffe5500-6af4-11eb-8282-411e322441b2.JPG\" alt=\"캡처333\"></p>\n<br/>\n<br/>\n<p>PowerShell 창에서 아래 명령을 실행하여 다음을 수행합니다.</p>\n<ul>\n<li>IIS 서버를 설치합니다.</li>\n<li>기본 iisstart.htm 파일을 제거합니다.</li>\n<li>VM 이름을 표시하는 새 iisstart.htm 파일을 추가합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"># install IIS server role\nInstall-WindowsFeature -name Web-Server -IncludeManagementTools\n\n# remove default htm file\nremove-item  <span class=\"token property\">C</span><span class=\"token punctuation\">:</span>\\inetpub\\wwwroot\\iisstart.htm\n\n# Add a new htm file that displays server name\nAdd-Content -Path <span class=\"token string\">\"C:\\inetpub\\wwwroot\\iisstart.htm\"</span> -Value $<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World from \"</span> + $<span class=\"token property\">env</span><span class=\"token punctuation\">:</span>computername<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107333027-3fd09500-6af8-11eb-886e-30d324850e10.JPG\" alt=\"4444\"></p>\n<br/>\n<br/>\n<p>이후 LB의 PIP로 접속하면 정상적으로 WEB Page가 접속됩니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107337984-609be900-6afe-11eb-9855-82cc54be5673.JPG\" alt=\"캡처333444\"></p>\n<br/>\n<hr>\n<h3 id=\"추가--inbound-nat-설정\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80--inbound-nat-%EC%84%A4%EC%A0%95\" aria-label=\"추가  inbound nat 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 : Inbound NAT 설정</h3>\n<br/>\n<p>LB에서 Inbound NAT를 설정하면 PIP를 통해 특정 VM에 접속이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107454011-8b824d80-6b8f-11eb-83ea-45d7fa71554d.JPG\" alt=\"캡처2\"></p>\n<p>SSH 연결을 위한 Inbound NAT를 설정했습니다.</p>\n<ul>\n<li>Port : Port Mapping을 위해 임의의 포트로 지정합니다.</li>\n<li>Target VM : 연결할 VM을 설정합니다.  </li>\n<li>Target Port : VM과 연결할 Port를 지정합니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"추가-정보-사항\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-%EC%82%AC%ED%95%AD\" aria-label=\"추가 정보 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 정보 사항</h3>\n<p>Azure의 L4 LoadBalancer는 RR(Round-robin) 방식의 Routing이 지원되지 않습니다.<br>\n기본 방식이 HASH 이고 ClientIP, ClientIP &#x26; Protocol로 총 3가지 방식이 있습니다.<br>\n위의 3가지 방식에서 HASH를 제외하고는 Client &#x3C;-> Server 매칭의 방식이기 때문에<br>\n제대로된 LoadBalancing이 되지 않을 수 있습니다.<br>\n따라서 RR 방식의 Routing 방식을 사용하고 싶으면 Application Gateway나 Traffic Manager를 사용해야합니다.</p>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 모든 기능들이 줄줄이 이론을 써놓으니깐 어려워보이는 거지<br>\n실제로 동작원리와 설정방법은 그렇게 어렵지 않다는 것을 계속 깨닫고 있습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-application-gateway\">✔ Application GateWay</a></p>\n<ul>\n<li><a href=\"#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">구성요소</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-application-gateway-%EC%83%9D%EC%84%B1\">✌ Application GateWay 생성</a></p>\n<ul>\n<li><a href=\"#back-end-pool-%EC%84%A4%EC%A0%95\">Back-end PooL 설정</a></li>\n<li><a href=\"#configuration-tab\">Configuration Tab</a></li>\n<li><a href=\"#ag-%EC%83%9D%EC%84%B1-%ED%9B%84-back-end-target-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%B6%94%EA%B0%80\">AG 생성 후 Back-end Target 생성 및 추가</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-ag-test\">👏 AG TEST!!</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%99%84%EB%A3%8C\">테스트 완료!</a></li>\n</ul>\n</li>\n<li><a href=\"#-loadbalancer\">✔ LoadBalancer</a></li>\n<li>\n<p><a href=\"#%F0%9F%A4%9E-loadbalancer-%EC%83%9D%EC%84%B1\">🤞 LoadBalancer 생성</a></p>\n<ul>\n<li><a href=\"#back-end-pool-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">Back-end PooL 생성하기</a></li>\n<li><a href=\"#healthprobe-%EC%83%81%ED%83%9C-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">HealthProbe 상태 프로브 생성하기</a></li>\n<li><a href=\"#load-balancer-rule-%EB%B6%80%ED%95%98-%EB%B6%84%EC%82%B0-%EA%B7%9C%EC%B9%99-%EC%83%9D%EC%84%B1\">load balancer rule 부하 분산 규칙 생성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-lb-test\">🙌 LB TEST</a></p>\n<ul>\n<li><a href=\"#%EC%B6%94%EA%B0%80--inbound-nat-%EC%84%A4%EC%A0%95\">추가 : Inbound NAT 설정</a></li>\n<li><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-%EC%82%AC%ED%95%AD\">추가 정보 사항</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 01, 2021","title":"[AZURE] Application GateWay, LoadBalancer","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-lb/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/azure-blob/","nextSlug":"/azure-resource2/","prevSlug":"/azure-lb/"}},"staticQueryHashes":["1073350324","2938748437"]}