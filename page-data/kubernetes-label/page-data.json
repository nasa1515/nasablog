{"componentChunkName":"component---src-templates-blog-template-js","path":"/kubernetes-label/","result":{"data":{"cur":{"id":"3e819d0c-cf4a-5cab-84f4-1a08c1b7532d","html":"<p>머리말  </p>\n<p>이전 포스트에서는 기본적인 POD의 정의 및 생성에 대해서 알아봤다<br>\n이번 포스트에서는 POD를 더 효율적으로 관리하기 위한 레이블과 셀렉터에 대해서 알아보자</p>\n<hr>\n<h2 id=\"-레이블\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94\" aria-label=\" 레이블 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 레이블</h2>\n<p>레이블 은 파드와 같은 오브젝트에 첨부된 키와 값의 쌍이다.<br>\n레이블은 오브젝트의 특성을 식별하는 데 사용되어 사용자에게 중요하지만, 코어 시스템에 직접적인 의미는 없다.<br>\n레이블로 오브젝트의 하위 집합을 선택하고, 구성하는데 사용할 수 있다.<br>\n레이블은 오브젝트를 생성할 때에 붙이거나 생성 이후에 붙이거나 언제든지 수정이 가능하다.<br>\n오브젝트마다 키와 값으로 레이블을 정의할 수 있다. 오브젝트의 키는 고유한 값이어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"key1\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"key2\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value2\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>레이블은 UI와 CLI에서 효율적인 쿼리를 사용하고 검색에 사용하기에 적합하다.<br>\n식별되지 않는 정보는 <code class=\"language-text\">어노테이션</code>으로 기록해야 한다.</p>\n<ul>\n<li>\n<p>사용 동기  </p>\n<p>레이블을 이용하면 사용자가 느슨하게 결합한 방식으로 조직 구조와 시스템 오브젝트를 매핑할 수 있으며,<br>\n클라이언트에 매핑 정보를 저장할 필요가 없다.</p>\n</li>\n<li>\n<p>레이블 예시 :</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">-</span> <span class=\"token string\">\"release\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"stable\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"release\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"canary\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"qa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"production\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"frontend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"backend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"cache\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"partition\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"customerA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"partition\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"customerB\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"track\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"daily\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"track\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"weekly\"</span></code></pre></div>\n<p>일반적으로 사용하는 예시들의 종류이다.<br>\n사용자가 원하는 규약에 따라 자유롭게 사용 할 수 있지만, 오브젝트에 붙여진 레이블 키는 고유해야 한다.</p>\n</li>\n</ul>\n<br/>\n<h3 id=\"레이블을-이용한-파드-정의\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8C%8C%EB%93%9C-%EC%A0%95%EC%9D%98\" aria-label=\"레이블을 이용한 파드 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레이블을 이용한 파드 정의</h3>\n<br/>\n<p>nasa-label.yml 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nlabels<span class=\"token punctuation\">:</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token class-name\">dev</span>\n    tier<span class=\"token punctuation\">:</span> <span class=\"token class-name\">frontend</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<br/>\n<p>yml 파일 기반의 파드 생성 및 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>lebel<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7s</code></pre></div>\n<br/>\n<br/>\n<p>레이블 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          68s   env<span class=\"token operator\">=</span>dev<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<br/>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \nName<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       env<span class=\"token operator\">=</span><span class=\"token class-name\">dev</span>\n            tier<span class=\"token operator\">=</span><span class=\"token class-name\">frontend</span>\nAnnotations<span class=\"token punctuation\">:</span>  kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span>\"d\nev<span class=\"token string\">\",\"</span>tier<span class=\"token string\">\":\"</span>frontend<span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span>\"<span class=\"token punctuation\">:</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p><code class=\"language-text\">-L 옵션</code>을 사용해 특정 label을 지정하여 표시 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">L</span> env<span class=\"token punctuation\">,</span>tier\nNAME             READY   STATUS    RESTARTS   AGE   ENV   TIER\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">15m</span>   dev   frontend</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"파드-레이블-수정\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%88%98%EC%A0%95\" aria-label=\"파드 레이블 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드 레이블 수정</h3>\n<p>현재 존재하는 POD에 레이블을 추가하거나, 이미 존재하는 레이블을 수정 할 수 있다.<br>\n이미 레이블을 가지고 있는 POD에 레이블을 추가하면 아래와 같은 이슈가 발생한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> env<span class=\"token operator\">=</span><span class=\"token class-name\">test</span>\nerror<span class=\"token punctuation\">:</span> 'env' already has a <span class=\"token keyword\">value</span> <span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">--</span>overwrite <span class=\"token keyword\">is</span> <span class=\"token class-name\">false</span></code></pre></div>\n<br/>\n<br/>\n<p>이 경우 <code class=\"language-text\">-overwrite</code> 옵션을 추가로 정의하면 된다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> env<span class=\"token operator\">=</span>test <span class=\"token operator\">--</span>overwrite\npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label labeled\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">20m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<p>다음과 같이 <code class=\"language-text\">env=test</code> 값이 변경 됨을 확인!</p>\n<br/>\n<hr>\n<h2 id=\"-레이블-셀렉터\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0\" aria-label=\" 레이블 셀렉터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 레이블 셀렉터</h2>\n<p>특별한 개념은 아니고, 오브젝트에 부여된 레이블을 기반으로 검색할 수 있는 개념이다.<br>\n레이블은 고유하지 않다. 많은 오브젝트에 다양한 레이블을 부여할 수 있다.<br>\n사용자는 레이블 셀렉터를 이용하여 오브젝트를 식별할 수 있으며 레이블 셀렉터는 쿠버네티스 코어 그룹에 속한다.</p>\n<p>모든 컨트롤러가 같은 특징을 가지는데<br>\n예를 들어 레플리케이션 컨트롤러가 따로 존재하고 컨트롤러는 replica=3을 만들어달라고 요청받는다.<br>\n이 때 a=123이라는 label을 파드에 지정하면 마찬가지로 컨트롤러는 a=123 레이블셀렉터를 갖게된다.<br>\n그리고 컨트롤러는 이 레이블이 달린 파드를 자신이 관리한다는 사실을 인지한다.</p>\n<ul>\n<li>\n<p>레이블 셀렉터를 이용해서 검색하는 방법은 두 가지가 있다.</p>\n<ul>\n<li>특정 키의 유무로 레이블 검색</li>\n<li>특정 키와 값의 유무로 레이블 검색</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"균등-기반-레이블-셀렉터--\" style=\"position:relative;\"><a href=\"#%EA%B7%A0%EB%93%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0--\" aria-label=\"균등 기반 레이블 셀렉터   permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>균등 기반 레이블 셀렉터(=, !, !=)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">## tier키가 포함된 레이블</span>\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l tier\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">26m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## tier키를 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l '<span class=\"token operator\">!</span>tier'\nNAME         READY   STATUS    RESTARTS   AGE    LABELS\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">101m</span>   env<span class=\"token operator\">=</span>dev\n\n<span class=\"token preprocessor property\">## env키에 test값이 있는 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">28m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## env키는 있지만 dev값은 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l env<span class=\"token operator\">!=</span>dev\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">29m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<br/>\n<h3 id=\"집합성-기반-레이블-셀렉터in-notin\" style=\"position:relative;\"><a href=\"#%EC%A7%91%ED%95%A9%EC%84%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0in-notin\" aria-label=\"집합성 기반 레이블 셀렉터in notin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>집합성 기반 레이블 셀렉터(in, notin)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">## env키에 debug나 dev값이 포함된 레이블</span>\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l 'env <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span>dev<span class=\"token punctuation\">)</span>'\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">31m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## tier키에 frontend값은 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l '<span class=\"token return-type class-name\">tier</span> notin <span class=\"token punctuation\">(</span>frontend<span class=\"token punctuation\">)</span>'\nNAME         READY   STATUS    RESTARTS   AGE    LABELS\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">103m</span>   env<span class=\"token operator\">=</span>dev</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-어노테이션\" style=\"position:relative;\"><a href=\"#-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\" 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 어노테이션</h2>\n<p>어노테이션이란?</p>\n<p>오브젝트에 메타데이터를 할당할 수 있는 주석과 같은 개념이다.<br>\n레이블과 같이 key-value 구조를 띄지만 차이가 있다. 레이블은 레이블 셀렉터를 이용해서 검색과 식별이 가능하나,<br>\n어노테이션은 메타데이터의 입력만 가능할 뿐 주석과 같으므로 검색이 되지 않는다.<br>\n쿠버네티스 클러스터의 API 서버가 어노테이션에 지정된 메타데이터를 참조해서<br>\n동작한다는 점에서 우리가 기존에 알고 있는 주석처럼 완전 투명한 상태는 아니다.</p>\n<p><br/>​</p>\n<p>어노테이션은 다음과 같은 메타데이터를 기록할 수 있다.</p>\n<ul>\n<li>필드</li>\n<li>이미지 정보(타임 스탬프, 릴리즈 ID, 빌드 버전, git 브랜치, 이미지 해시, 레지스트리 주소 등)</li>\n<li>로깅, 모니터링 정보</li>\n<li>디버깅에 필요한 정보(이름,버전,빌드정보)</li>\n<li>책임자 연락처</li>\n<li>사용자 지시 사항</li>\n</ul>\n<p>​<br/></p>\n<p>파일을 만들어 예시를 들어보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nannotations<span class=\"token punctuation\">:</span>\n    imageregistry<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://hub.docker.com/\"</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nginx</span>\n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<br/>\n<p>해당 파일로 POD 생성!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f ano<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>annotations<span class=\"token operator\">-</span>nasa created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME               READY   STATUS    RESTARTS   AGE\nannotations<span class=\"token operator\">-</span>nasa   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label     <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">38m</span></code></pre></div>\n<br/>\n<br/>\n<p>어노테이션은 <code class=\"language-text\">describe</code>옵션으로 확인이 가능하다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods <span class=\"token class-name\">annot</span>\nName<span class=\"token punctuation\">:</span>         annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  imageregistry<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>         <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span>######<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n            kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"imageregistry\"</span><span class=\"token punctuation\">:</span>\"<span class=\"token class-name\">htt</span>\nps<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>annotations<span class=\"token operator\">-</span>nasa<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nStatus<span class=\"token punctuation\">:</span>       <span class=\"token class-name\">Running</span>\nIP<span class=\"token punctuation\">:</span>           <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이 외에 <code class=\"language-text\">annotate</code> 명령을 이용해 변경도 가능하다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl annotate pods annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> mynameis<span class=\"token operator\">=</span><span class=\"token string\">\"John Smith\"</span>\npod<span class=\"token operator\">/</span>annotations<span class=\"token operator\">-</span>nasa annotated\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods <span class=\"token class-name\">annot</span>\nName<span class=\"token punctuation\">:</span>         annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  imageregistry<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>\n            kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"imageregistry\"</span><span class=\"token punctuation\">:</span>\"<span class=\"token class-name\">htt</span>\nps<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>annotations<span class=\"token operator\">-</span>nasa<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n            mynameis<span class=\"token punctuation\">:</span> John Smith         <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>#######</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-네임스페이스\" style=\"position:relative;\"><a href=\"#-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\" 네임스페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 네임스페이스</h2>\n<p>네임스페이스란?</p>\n<p>쿠버네티스는 동일한 물리 클러스터를 기반으로 하는 여러 개의 가상 클러스터를 지원한다.<br>\n이러한 가상 클러스터 단위를 네임스페이스라고 한다.<br>\n네임스페이스는 여러 개의 팀이나 프로젝트에 걸쳐 다수의 사용자가 존재하는 경우에<br>\n사용하도록 고안된 개념이다. 공식 문서에서는 사용자가 수 십명 정도에 불과한 경우는<br>\n네임스페이스를 고려할 필요가 <code class=\"language-text\">'전혀'</code>없다고 하고 있다.</p>\n<p>네임스페이스는 이름의 범위를 제공한다.<br>\n이게 무슨 말이냐 하면, 리소스의 이름은 네임스페이스 내에서 유일해야 하지만<br>\n서로 다른 네임스페이스 안에서는 같은 이름을 가진 리소스가 존재할 수도 있다는 뜻이다.<br>\n단, <code class=\"language-text\">kube-</code> 로 시작하는 네임스페이스는 이미 쿠버네티스 시스템 네임스페이스로 예약되어있으므로 사용하지 않는다.</p>\n<br/>\n<p>네임스페이스 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> namespaces \nNAME              STATUS   AGE\n<span class=\"token keyword\">default</span>           Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>lease   Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span><span class=\"token keyword\">public</span>       Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>system       Active   <span class=\"token number\">23d</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">default</code> :  오브젝트 생성 시 따로 지정하지 않으면 default 네임스페이스를 사용하게 되어있다.  </li>\n<li><code class=\"language-text\">kube-system</code> : 쿠버네티스 시스템에서 생성한 오브젝트를 위한 네임스페이스  </li>\n<li><code class=\"language-text\">kube-public</code> : 전체 클러스터에서 공개되어 예약된 네임스페이스. 모든 사용자가 읽기 권한으로 접근 가능하다.  </li>\n<li><code class=\"language-text\">kube-node-lease</code> : 클러스터가 스케일링될 때 노드 health check 성능을 향상시키는 lease 오브젝트에 대한 네임스페이스  </li>\n</ul>\n<br/>\n<br/>\n<p>네임스페이스 상의 오브젝트 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system\nNAME                                    READY   STATUS    RESTARTS   AGE\ncoredns<span class=\"token operator\">-</span>5c98db65d4<span class=\"token operator\">-</span>8cg79                <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">2</span>          <span class=\"token number\">23d</span>\ncoredns<span class=\"token operator\">-</span>5c98db65d4<span class=\"token operator\">-</span>zbvbn                <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\netcd<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>controller<span class=\"token operator\">-</span>manager<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master     <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>6w9dk                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>jqks7                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>kr9sb                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>lxn6d                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>scheduler<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkubernetes<span class=\"token operator\">-</span>dashboard<span class=\"token operator\">-</span>6b8c96cf8c<span class=\"token operator\">-</span>g985n   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>dd6f2                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>k2jc9                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>k2tcb                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>v7bff                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span></code></pre></div>\n<p>네임스페이스를 지정할 때는 -n 또는 —namespace 옵션을 사용하며 지정하지 않으면 default 네임스페이스 기준이다.</p>\n<br/>\n<br/>\n<p>네임스페이스 생성 및 조회</p>\n<p>yaml 파일로도 가능하지만 커맨드로도 간단히 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl create <span class=\"token keyword\">namespace</span> nasa\n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>nasa created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> <span class=\"token keyword\">namespace</span> nasa\nNAME   STATUS   AGE\nnasa   Active   28s</code></pre></div>\n<br/>\n<br/>\n<p>yaml파일로 네임스페이스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Namespace</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f name<span class=\"token punctuation\">.</span>yml \n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span> created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> <span class=\"token keyword\">namespace</span> nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             STATUS   AGE\nnasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>   Active   19s</code></pre></div>\n<br/>\n<br/>\n<p>특정 네임스페이스에 파드 오브젝트 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             READY   STATUS              RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     ContainerCreating   <span class=\"token number\">0</span>          17s</code></pre></div>\n<br/>\n<br/>\n<p>이 작업도 yaml 파일로 작성해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n        protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasaname<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa\nNAME       READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          12s</code></pre></div>\n<br/>\n<br/>\n<p>리소스 삭제 : 리소스는 세 가지 방법으로 가능하다.</p>\n<p>오브젝트 이름으로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete pod nasa<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>n nasa \npod <span class=\"token string\">\"nasa-pod\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>오브젝트 정의파일(yaml 및 json파일)로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             READY   STATUS             RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     CrashLoopBackOff   <span class=\"token number\">6</span>          9m57s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete <span class=\"token operator\">-</span>f name<span class=\"token punctuation\">.</span>yml \n<span class=\"token keyword\">namespace</span> <span class=\"token string\">\"nasa-namespace\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>오브젝트 레이블로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">68m</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\npod <span class=\"token string\">\"nasa-pod-label\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<p>파드에 이어 네임스페이스도 제거한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94\">✔ 레이블</a></p>\n<ul>\n<li><a href=\"#%EB%A0%88%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8C%8C%EB%93%9C-%EC%A0%95%EC%9D%98\">레이블을 이용한 파드 정의</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%88%98%EC%A0%95\">파드 레이블 수정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0\">✌ 레이블 셀렉터</a></p>\n<ul>\n<li><a href=\"#%EA%B7%A0%EB%93%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0--\">균등 기반 레이블 셀렉터(=, !, !=)</a></li>\n<li><a href=\"#%EC%A7%91%ED%95%A9%EC%84%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0in-notin\">집합성 기반 레이블 셀렉터(in, notin)</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">👏 어노테이션</a></li>\n<li><a href=\"#-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4\">👍 네임스페이스</a></li>\n</ul>\n</div>\n<hr>","excerpt":"머리말   이전 포스트에서는 기본적인 POD의 정의 및 생성에 대해서 알아봤다 이번 포스트에서는 POD를 더 효율적으로 관리하기 위한 레이블과 셀렉터에 대해서 알아보자 ✔ 레이블 레이블 은 파드와 같은 오브젝트에 첨부된 키와 값의 쌍이다. 레이블은 오브젝트의 특성을 식별하는 데 사용되어 사용자에게 중요하지만, 코어 시스템에 직접적인 의미는 없다. 레이블로 오브젝트의 하위 집합을 선택하고, 구성하는데 사용할 수 있다. 레이블은 오브젝트를 생성할 때에 붙이거나 생성 이후에 붙이거나 언제든지 수정이 가능하다. 오브젝트마다 키와 값으로 레이블을 정의할 수 있다. 오브젝트의 키는 고유한 값이어야 한다. 레이블은 UI와 CLI에…","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 레이블 및 셀렉터","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-label/"}},"next":{"id":"64fbddd3-aaf7-50d0-a98f-5a7dff2bb244","html":"<p>머리말  </p>\n<p>이제 기본적인 개념과 kubectl 명령어까지 모두 알아봤다!! 이번 포스트부터는 진짜 실습을 들어가보자!!<br>\n우선 컨포넌트 포스트에서 설명했던 것들부터 시작하겠습니다!!</p>\n<hr>\n<h2 id=\"-pod\" style=\"position:relative;\"><a href=\"#-pod\" aria-label=\" pod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ POD?!</h2>\n<p><code class=\"language-text\">Pod</code>은 쿠버네티스 APP의 기본 실행 단위인데 쉽게 말해 쿠버네티스 워크로드에서 관리할 수 있는 가장 작은 단위가 파드입니다.<br>\n또한 배포 시 배포의 단위가 되기도 합니다. 파드는 하나 이상의 ‘동작중인’ 컨테이너를 포함하고 있는 오브젝트이고<br>\n하나의 파드에는 하나의 컨테이너를 배치하는 것이 기본입니다. 쿠버네티스 클러스터 내에서 파드는 주로 두 가지 방법으로 사용되죠.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93300290-78ae5b80-f831-11ea-8075-020c2856cdec.png\" alt=\"스크린샷, 2020-09-16 15-29-48\"></p>\n<h3 id=\"pod-모델-종류\" style=\"position:relative;\"><a href=\"#pod-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\" aria-label=\"pod 모델 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod 모델 종류</h3>\n<ol>\n<li><code class=\"language-text\">1개 컨테이너</code> - 1개 POD 모델<br>\n“one-container-per-Pod”은 쿠버네티스에서 가장 널리 쓰이는 케이스.<br>\n한개의 pod이 1개의 container을 감싸고 있으며, 쿠버네티스가 pod을 관리.</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p><code class=\"language-text\">2개 이상 컨테이너</code> - 1개 POD 모델</p>\n<p>2개 이상의 container가 리소스를 밀접하게 공유해야하는 상황에 쓰인다.<br>\n하나의 컨테이너가 file을 제공해주면 “sidecar” 역할을 하는 컨테이너가 해당 file에 접근하는 개념이다.<br>\n이러한 방식으로 추상화, 캡슐화 된 pod은 reliable한 application동작으로 이끌거나<br>\nrobust system으로 만드는 등 장점으로 승화시킨다.<br>\n즉 쉽게 말해 서로 의존성이 있는 다중 컨테이너가 동작중인 파드. 리소스 공유가 필요한 결합 서비스 단위인 경우일 것이다.</p>\n</li>\n</ol>\n<br/>\n<p>부가 설명</p>\n<p>기본적으로 하나의 컨테이너에는 최소한의 필요한 기능 즉 하나의 컨테이너는 하나의 기능만 하는 것이 기본이다.<br>\n그런데 VM에 익숙해지면 착각하는 것이 하나의 컨테이너에 여러 개의 어플리케이션을 돌리면 효율적이지 않겠냐는 의문이 있을 수 있다.<br>\n하지만 Dockerfile의 메커니즘 자체가 그렇듯 하나의 컨테이너는 하나의 어플리케이션만 띄울 수 있도록 설계되어 있다.<br>\n쉘 스크립트나 docker-compose를 이용해서 동시에 여러 동작을 유발할 수는 있지만 원칙은 그렇다<br>\n컨테이너는 유연하게 확장/축소가 가능하다는 것이 장점이다.<br>\n만약 하나의 컨테이너에 웹, DB, APP을 다 박아두는 것은 컨테이너를 쓰는 가장 기본적인 목적인 <code class=\"language-text\">'APP 격리'</code>를 져버리는 것이다.<br>\n쉽게 설명하면, 파드가 사용되는 방식 중 하나인 <code class=\"language-text\">'다중 컨테이너의 동작'</code>은 <code class=\"language-text\">'멀티 컨테이너'</code>이지 마구잡이로 여러개를 돌리는 것과는 다르다.</p>\n<p>또한 파트에 하나 이상의 컨테이너가 있다고 하더라도, 파드의 컨테이너는 같은 노드에서만 동작하고,<br>\n하나의 파드에 있는 다중 컨테이너는 저장소, 네트워크 IP 등을 공유한다!!</p>\n<br/>\n<hr>\n<h3 id=\"파드는-어떻게-다중-컨테이너를-관리할까\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8B%A4%EC%A4%91-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%A0%EA%B9%8C\" aria-label=\"파드는 어떻게 다중 컨테이너를 관리할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드는 어떻게 다중 컨테이너를 관리할까?</h3>\n<p>파드는 애초에 결합성이 있는 서비스를 위해 다중 컨테이너를 지원하도록 디자인 되었다.<br>\n예를 들어, 공유 볼륨 내부 파일의 웹 서버 역할을 하는 컨테이너와<br>\n원격 소스로부터 그 파일들을 업데이트하는 분리된 “사이드카” 컨테이너가 있는 경우 아래 다이어그램의 모습일 것이다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93302001-3a666b80-f834-11ea-9021-efe70f1ac329.png\" alt=\"스크린샷, 2020-09-16 15-49-34\">  </p>\n<p>위의 그림에서 web server가 추가로 필요하게 되면 file puller도 같이 하나가 파드단위로 증가하게 된다.<br>\n이러한 패턴을 <code class=\"language-text\">'사이드 카'</code> 패턴이라고 한다.<br>\n단, 쿠버네티스 공식문서에서는 결합성이 강해 어쩔 수 없는 경우만 사용하도록 권고하고 있다.<br>\n이 때, 파드는 파드 안에 속해 있는 컨테이너들 사이에 두 가지의 공유 리소스를 제공한다.  </p>\n<p>바로 <code class=\"language-text\">네트워킹</code>과 <code class=\"language-text\">저장소</code>이다.</p>\n<p>​</p>\n<h3 id=\"네트워킹\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\" aria-label=\"네트워킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워킹</h3>\n<p>각 파드는 고유한 IP를 할당받는다.<br>\n한 파드 안에 있는 모든 컨테이너는 네트워크 네임스페이스와 IP주소와 포트를 공유한다.<br>\n파드 안의 컨테이너끼리는 localhost를 이용해서 통신할 수 있다.<br>\n파드 밖의 요소와 파드 안의 컨테이너가 통신하기 위해서는 포트 정보와 같은 네트워크 리소스 사용 상태를 서로 공유하고 있어야 한다.</p>\n<p>​</p>\n<h3 id=\"저장소\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9E%A5%EC%86%8C\" aria-label=\"저장소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저장소</h3>\n<p>파드 내부의 모든 컨테이너는 공유 볼륨에 접근할 수 있고<br>\n그 컨테이너끼리 데이터를 공유할 수 있다. 또한 볼륨은 컨테이너가 재시작 되더라도 파드 안의 데이터를 영구적으로 유지할 수 있게 한다.</p>\n<p>​</p>\n<h3 id=\"파드의-lifecycle\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-lifecycle\" aria-label=\"파드의 lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 Lifecycle</h3>\n<p>일단 파드가 생성되면 파드에는 고유한 ID가 할당되고, 노드에 스케줄링 된다.<br>\n해당 노드가 종료되면 해당 노드에 스케줄링 되어있던 파드는 일정 시간이 지난 후 삭제된다.<br>\n노드가 삭제된다고 해서 소속되어있던 파드가 리스케줄링 되지 않으며 필요시 완전히 새로운 파드를 다시 생성하는 방식이다.  </p>\n<p>같은 이유로 파드는 문제가 발생하더라도 자가 복구하지 않는다. 만약 파드의 동작이 실패하는 경우, 파드는 삭제되어버린다.<br>\n이와 같은 파드 인스턴스를 관리하는 동작을 컨트롤러가 한다.</p>\n<p>즉, 파드는 사용자나 컨트롤러가 명시적으로 삭제하기 전까지는 남아 있게 된다.</p>\n<p>​</p>\n<h3 id=\"파드의-의미\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%9D%98%EB%AF%B8\" aria-label=\"파드의 의미 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 의미</h3>\n<p>파드는 응집력 있는 서비스 단위를 형성하는 여러 개의 협력 프로세스를 모델로 한다.<br>\n파드는 그 구성 요소 집합보다 높은 수준의 추상화를 제공함으로써 애플리케이션 배포 및 관리를 단순화한다.<br>\n파드는 전개 단위, 수평 확장 및 복제를 한다. 공동 스케줄링, 공유된 생애주기 (예: 종료), 조정된 복제, 자원 공유 및 종속성 관리는 파드의 컨테이너에 대해 자동으로 처리된다.</p>\n<p>​</p>\n<h3 id=\"파드의-종료\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%A2%85%EB%A3%8C\" aria-label=\"파드의 종료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 종료</h3>\n<ul>\n<li>\n<p>절차</p>\n<p>파드는 쿠버네티스 클러스터의 노드에서 실행 중인 프로세스이다.<br>\n이러한 프로세스가 더이상 필요하지 않을 때는 정상 종료시켜야 한다. 사용자가 삭제를 요청할 수 있어야 하고,<br>\n프로세스가 종료되는 것을 알 수 있어야 하며, 삭제가 완료된 것을 확인할 수 있어야 한다.<br>\n사용자가 파드 삭제 요청을 하면 시스템은 파드가 종료되기 전에 정리를 위한 유예 기간을 두었다가,<br>\nKILL 시그널이 해당 프로세스로 전송되면 파드가 API 서버에서 삭제된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">-</span> 사용자의 삭제 명령<span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span> 유예기간<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>초<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span> 유예기간이 지난 파드 정보가 갱신\n<span class=\"token operator\">-</span> 이 파드는 조회시 Terminating이라는 문구 출력\n<span class=\"token operator\">-</span> Terminating으로 표시되는 것을 확인하면 kubelet은 종료 작업 시작\n<span class=\"token operator\">-</span> 종료한 파드는 엔드포인트 리스트에서 제거되며<span class=\"token punctuation\">,</span> 레플리케이션 컨트롤러의 관리 대상에서 제외\n<span class=\"token operator\">-</span> 만약 도중에 유예 기간이 만료되면 파드에서 실행중이던 모든 프로세스에 SIGKILL이 떨어짐\n<span class=\"token operator\">-</span> kubelet은 유예기간을 <span class=\"token number\">0</span>으로 세팅해서 API 서버로부터 파드를 즉시 삭제할 수 있음<span class=\"token punctuation\">.</span> 이제 파드는 더이상 보이지 않음<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>강제 삭제</p>\n<p>기본적으로 삭제 작업은 30초 이내에 끝이 난다. kubectl delete 명령은 —grace-period={second} 옵션을 지원하는데,<br>\n이 옵션은 기본 설정된 값을 사용자가 정의할 수 있도록 하는 옵션으로, 0이 되면 파드는 즉시 삭제된다.<br>\nkubectl 1.5버전 이상에서는 강제 삭제를 위해서 반드시 <code class=\"language-text\">--grace-period=&lt;second></code>와 함께 <code class=\"language-text\">--force</code>를 같이 사용해야 한다.  </p>\n<p>파드를 강제 삭제하면 API서버는 kubelet으로부터 실행중이던 파드가 종료되었다는 통지를 기다리지 않는다.<br>\nAPI단에서 파드를 즉시 제거해버리기 때문에 동일한 이름으로 새 파드를 만들 수도 있다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-파드-생성-실습\" style=\"position:relative;\"><a href=\"#-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1-%EC%8B%A4%EC%8A%B5\" aria-label=\" 파드 생성 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 파드 생성 실습</h2>\n<br/>\n<p> <code class=\"language-text\">kubectl explain</code> 명령으로 파드 리소스의 필드를 확인 해보자!.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl explain <span class=\"token class-name\">pod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers</span>\nKIND<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">Pod</span>\nVERSION<span class=\"token punctuation\">:</span>  <span class=\"token class-name\">v1</span>\n\nRESOURCE<span class=\"token punctuation\">:</span> <span class=\"token class-name\">containers <span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Object<span class=\"token punctuation\">></span></span>\n\nDESCRIPTION<span class=\"token punctuation\">:</span>\n    List of containers belonging to the pod<span class=\"token punctuation\">.</span> Containers cannot currently be\n    added <span class=\"token keyword\">or</span> removed<span class=\"token punctuation\">.</span> There must be at least <span class=\"token class-name\">one</span> container <span class=\"token keyword\">in</span> a Pod<span class=\"token punctuation\">.</span> Cannot be\n    updated<span class=\"token punctuation\">.</span>\n\n    A single application container that you want to run within a pod<span class=\"token punctuation\">.</span>\n\nFIELDS<span class=\"token punctuation\">:</span>\nimage\t<span class=\"token operator\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token operator\">></span>\n    Docker image <span class=\"token class-name\">name<span class=\"token punctuation\">.</span> More</span> info<span class=\"token punctuation\">:</span>\n    https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>concepts<span class=\"token operator\">/</span>containers<span class=\"token operator\">/</span>images This field <span class=\"token keyword\">is</span>\n    <span class=\"token class-name\">optional</span> to allow higher level config management to <span class=\"token keyword\">default</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">override</span>\n    <span class=\"token class-name\">container</span> images <span class=\"token keyword\">in</span> workload controllers like Deployments <span class=\"token keyword\">and</span> StatefulSets<span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 연습삼아 POD를 정의하는 <code class=\"language-text\">yaml</code>파일을 만들어보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span> \nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \nspec<span class=\"token punctuation\">:</span> \ncontainers<span class=\"token punctuation\">:</span> \n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span> \n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n    ports<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n        protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<p>위 yaml 파일을 세부적으로 설명해봅시다!</p>\n<ul>\n<li><code class=\"language-text\">apiVersion</code> : YAML 파일에서 정의한 오브젝트의 API 버전을 나타냅니다.</li>\n<li><code class=\"language-text\">kind</code> : 이 리소스의 종류를 나타냅니다. 위에선 pod로 생성하기 때문에 pod<br>\n다른 오브젝트의 종류는 kubectl api-resources 명령어를 통해 확인할 수 있습니다.</li>\n<li><code class=\"language-text\">metadata</code>: 라벨, 주석, 이름과 같은 리소스의 부가 정보들을 입력합니다. </li>\n<li><code class=\"language-text\">spec</code>: 리소스를 생성하기 위한 자세한 정보를 입력합니다. 생성되는 container의 이름, 이미지, 포트 등을 설정할 수 있습니다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">pod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers <span class=\"token punctuation\">:</span> 컨테이너 정의\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">:</span> 컨테이너에 사용할 이미지\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> 컨테이너 이름\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">:</span> 노출할 포트 정의\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>containerPort<span class=\"token punctuation\">:</span> 노출할 컨테이너 포트번호\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">:</span> 노출할 컨테이너 포트의 기본 프로토콜</code></pre></div>\n<br/>\n<br/>\n<p>작성한 <code class=\"language-text\">YAML</code>파일을 기반으로 POD를 생성해보겠습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl apply <span class=\"token operator\">-</span>f yaml 파일이름</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod created</code></pre></div>\n<br/>\n<br/>\n<p>파드 동작상태 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          64s</code></pre></div>\n<br/>\n<br/>\n<p>실행중인 파드 정의 확인   </p>\n<p><code class=\"language-text\">-o</code>옵션에는 yaml과 json 중 하나를 선택할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>o <span class=\"token class-name\">yaml</span>\napiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nannotations<span class=\"token punctuation\">:</span>\n    kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span> <span class=\"token operator\">|</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"nasa-nginx-pod\"</span><span class=\"token punctuation\">,</span>\"nam\nespace<span class=\"token string\">\":\"</span><span class=\"token keyword\">default</span><span class=\"token string\">\"},\"</span>spec<span class=\"token string\">\":{\"</span>containers<span class=\"token string\">\":[{\"</span>image<span class=\"token string\">\":\"</span>nginx<span class=\"token punctuation\">:</span>latest<span class=\"token string\">\",\"</span>name<span class=\"token string\">\":\"</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>container\"<span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"ports\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"containerPort\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"protocol\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"TCP\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\ncreationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2020-09-16T07:26:45Z\"</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nresourceVersion<span class=\"token punctuation\">:</span> <span class=\"token string\">\"39554\"</span>\nselfLink<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>namespaces<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nuid<span class=\"token punctuation\">:</span> 148bfb1a<span class=\"token operator\">-</span>73ad<span class=\"token operator\">-</span>4c44<span class=\"token operator\">-</span><span class=\"token number\">805d</span><span class=\"token operator\">-</span>300cb5be8af8\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    imagePullPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Always</span>\n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    resources<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    terminationMessagePath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>termination<span class=\"token operator\">-</span><span class=\"token class-name\">log</span>\n    terminationMessagePolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">File</span>\n    volumeMounts<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>secrets<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">serviceaccount</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span><span class=\"token operator\">-</span>token<span class=\"token operator\">-</span>556xc\n    readOnly<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\ndnsPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ClusterFirst</span>\nenableServiceLinks<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\nnodeName<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node3</span>\npriority<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\nrestartPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Always</span>\nschedulerName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token class-name\">scheduler</span>\nsecurityContext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nserviceAccount<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nserviceAccountName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nterminationGracePeriodSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\ntolerations<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> effect<span class=\"token punctuation\">:</span> <span class=\"token class-name\">NoExecute</span>\n    key<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token keyword\">not</span><span class=\"token operator\">-</span>ready\n    <span class=\"token keyword\">operator</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Exists</span>\n    tolerationSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span></code></pre></div>\n<br/>\n<br/>\n<p>파드의 describe 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nName<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">:</span><span class=\"token number\">45</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>\"nasa<span class=\"token operator\">-</span>nginx\n<span class=\"token operator\">-</span>pod<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token string\">\":\"</span><span class=\"token keyword\">default</span><span class=\"token string\">\"},\"</span>spec<span class=\"token string\">\":{\"</span>containers<span class=\"token string\">\":[{\"</span>image\"<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nStatus<span class=\"token punctuation\">:</span>       Running\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\npod도 container와 같이 ``kubectl exec``를 통해 명령어를 실행시킬 수 있습니다. \n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod bash</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod bash\nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># \nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls     \nbin   dev                  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh  home  lib64  mnt  proc  run   srv  tmp  <span class=\"token keyword\">var</span>\nboot  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d  etc                   lib   media  opt  root  sbin  sys  usr</code></pre></div>\n<br/>\n<br/>\n<p>또 도커와 같이 <code class=\"language-text\">kubectl logs</code>를 통해 포드의 로그를 확인할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl logs nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#  kubectl logs nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token class-name\">empty</span><span class=\"token punctuation\">,</span> will attempt to perform configuratio\nn\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Looking <span class=\"token keyword\">for</span> <span class=\"token class-name\">shell</span> scripts <span class=\"token keyword\">in</span> <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Launching <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh\n<span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Getting the checksum of <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Enabled listen <span class=\"token keyword\">on</span> IPv6 <span class=\"token keyword\">in</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Launching <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">-</span>envsubst<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>templates<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Configuration</span> complete<span class=\"token punctuation\">;</span> ready <span class=\"token keyword\">for</span> start up</code></pre></div>\n<br/>\n<br/>\n<p>오브젝트는 <code class=\"language-text\">kubectl delete -f</code> 명령어로 삭제할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml \npod <span class=\"token string\">\"nasa-nginx-pod\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<hr>\n<h2 id=\"🤦♂️-컨테이너-두개-이상을-포함한-pod-만들기\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%9C-pod-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"🤦♂️ 컨테이너 두개 이상을 포함한 pod 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤦‍♂️ 컨테이너 두개 이상을 포함한 pod 만들기</h2>\n<br/>\n<p>YAML 파일</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \nspec<span class=\"token punctuation\">:</span> \ncontainers<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span> \n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n    ports<span class=\"token punctuation\">:</span> \n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n        protocol<span class=\"token punctuation\">:</span> TCP \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">sidecar</span> \n    image<span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">14.04</span> \n    command<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"echo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">]</span> \n    args<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ubuntu\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<br/>\n<p>다음과 같이 두개가 생성되었고 한개만 실행하고 있는 것을 확인할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS             RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     CrashLoopBackOff   <span class=\"token number\">1</span>          32s</code></pre></div>\n<br/>\n<br/>\n<p><code class=\"language-text\">-c</code> 옵션을 사용해 어떤 컨테이너에 접속 할지 확인 가능합니다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>c sidecar bash</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>c nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>container bash\nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls\nbin   dev                  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh  home  lib64  mnt  proc  run   srv  tmp  <span class=\"token keyword\">var</span>\nboot  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d  etc                   lib   media  opt  root  sbin  sys  usr</code></pre></div>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-pod\">✔ POD?!</a></p>\n<ul>\n<li><a href=\"#pod-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\">Pod 모델 종류</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8B%A4%EC%A4%91-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%A0%EA%B9%8C\">파드는 어떻게 다중 컨테이너를 관리할까?</a></li>\n<li><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\">네트워킹</a></li>\n<li><a href=\"#%EC%A0%80%EC%9E%A5%EC%86%8C\">저장소</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-lifecycle\">파드의 Lifecycle</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%9D%98%EB%AF%B8\">파드의 의미</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%A2%85%EB%A3%8C\">파드의 종료</a></li>\n</ul>\n</li>\n<li><a href=\"#-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1-%EC%8B%A4%EC%8A%B5\">✌ 파드 생성 실습</a></li>\n<li><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%9C-pod-%EB%A7%8C%EB%93%A4%EA%B8%B0\">🤦‍♂️ 컨테이너 두개 이상을 포함한 pod 만들기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 POD?","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-pod/"}},"prev":{"id":"059e8eef-76f8-5d37-9aac-1ad3fc2d4868","html":"<p>머리말  </p>\n<p>이번 포스트에서는 자동적으로 POD 및 시스템을 관리 할 수 있는 컨트롤러에 대해서 알아보겠습니다</p>\n<hr>\n<h2 id=\"-라이브니스-프로브\" style=\"position:relative;\"><a href=\"#-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C\" aria-label=\" 라이브니스 프로브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 라이브니스 프로브</h2>\n<p>라이브니스 프로브 개념</p>\n<p>사용자가 모든 오브젝트를 일일이 관리할 수는 없다.<br>\n관리하고자 하더라도 사용자의 사각지대에 있는 오브젝트를 실제 프로덕션 환경에서 관리하기 위해서는 수동 작업은 권장되지 않는다.</p>\n<p>실제 환경에서는 자동적으로 정상적이고 안정적인 상태가 유지되어야 한다.<br>\n쿠버네티스가 이러한 요구를 충족시키기 위해서 사용하는 것이 <code class=\"language-text\">라이브니스 프로브</code>이다.</p>\n<p>라이브니스 프로브는 파드에 의해 컨테이너를 동작시키고 동작중인 컨테이너의 상태를 주기적으로 모니터링한다.<br>\n파드에서 오류가 발생하면 해당 컨테이너를 재시작시킨다.<br>\n쿠버네티스의 핵심이라고 할 수 있는 동작이 바로 이 라이브니스 프로브 덕분에 가능한 것이다.</p>\n<p>​\n<br/></p>\n<p>라이브니스 프로브는 세 가지 방식으로 컨테이너의 상태를 모니터링한다.</p>\n<ul>\n<li><code class=\"language-text\">HTTP GET 프로브</code> : HTTP 요청 / 응답으로 확인</li>\n<li><code class=\"language-text\">TCP 소켓 프로브</code> : 포트 연결 시도해서 확인</li>\n<li><code class=\"language-text\">Exec 프로브</code> : 컨테이너 내부의 바이너리를 실행하고 종료 코드 확인  </li>\n</ul>\n<p>라이브니스 프로브는 현재 동작중인 파드의 상태를 감지하고 재시작 하는데서 그 역할을 다 하지만<br>\n여러 사유로 인해 파드가 삭제되거나 노드 자체에 장애가 발생하는 경우에는 파드를 재 시작 할 수 없다.<br>\n이러한 상황에 대비해 가용성을 높이기 위해서는 RC, RS, DS 등의 컨트롤러를 사용해야 한다.</p>\n<br/>\n<br/>\n<h3 id=\"라이브니스-프로브-생성\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1\" aria-label=\"라이브니스 프로브 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브니스 프로브 생성</h3>\n<p>라이브니스 프로브 생성 - <code class=\"language-text\">정상 상태</code></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">liveness</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    livenessProbe<span class=\"token punctuation\">:</span>\n    httpGet<span class=\"token punctuation\">:</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>\n        port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<p>HTTP GET 프로브를 사용하였으며, 경로는 / 포트는 8080이다.</p>\n<br/>\n<ul>\n<li>\n<p>컨피그 설명</p>\n<ul>\n<li><code class=\"language-text\">livenessProbe</code>: 라이브니스 프로브 정의 </li>\n<li><code class=\"language-text\">httpGet</code> : HTTP GET 프로브 정의</li>\n<li><code class=\"language-text\">tcpSocket</code> : TCP 소켓 프로브 정의 </li>\n<li><code class=\"language-text\">Exec</code>: Exec 프로브 정의</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<p>작성한 YAML 파일로 POD를 생성한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>watch\nNAME                READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          19s</code></pre></div>\n<p>라이브니스의 확인을 위해 <code class=\"language-text\">--watch</code> 옵션을 사용해 지속적으로 모니터링!</p>\n<br/>\n<br/>\n<p>정상적인 상태를 확인했으니 비정상 상태를 만들어 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nkind: Pod\nmetadata:\nname: nasa-pod-liveness-error\nspec:\ncontainers:\n- image: nginx:latest\n    name: nasa\n    ports:\n    - containerPort: 8081\n    protocol: TCP\n    livenessProbe:\n    httpGet:\n        path: /\n        port: 8082</code></pre></div>\n<p>위의 YAML파일과 모두 동일하지만 <code class=\"language-text\">PORT</code>를 임의로 다르게 주어 <code class=\"language-text\">error</code>상태 발생</p>\n<br/>\n<br/>\n<p>POD 를 생성 후 모니터링 해보겠습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>livness<span class=\"token operator\">-</span>error<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error created</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>watch\nNAME                  READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          30s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Pending   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Pending   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     ContainerCreating   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          5s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">1</span>          62s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">2</span>          2m1s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">3</span>          3m1s</code></pre></div>\n<br/>\n<br/>\n<p>WATCH로 모니터링중이던 터미널을 확인해보면 변화가 생겼다.<br>\nRESTARTS 필드가 0 에서 양수로 변경된 것은 라이브니스 프로브가 해당 파드를 이상이 있는 것으로 판단하고<br>\n재 시작 시도중임을 의미한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">4</span>          4m2s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">5</span>          5m1s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     CrashLoopBackOff    <span class=\"token number\">5</span>          5m58s</code></pre></div>\n<p>잠시 후에 다시 확인해보면 상태가 CrashLoopBackOff 인 것을 확인할 수 있다.</p>\n<br/>\n<br/>\n<p>POD의 Describe를 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error\n    <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n    <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n    State<span class=\"token punctuation\">:</span>          <span class=\"token class-name\">Running</span>\n    Started<span class=\"token punctuation\">:</span>      Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    <span class=\"token class-name\">Last</span> State<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">Terminated</span>\n    Reason<span class=\"token punctuation\">:</span>       Error\n    <span class=\"token class-name\">Exit</span> Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">137</span>\n    Started<span class=\"token punctuation\">:</span>      Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    Finished<span class=\"token punctuation\">:</span>     Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    Ready<span class=\"token punctuation\">:</span>          True\n    <span class=\"token class-name\">Restart</span> Count<span class=\"token punctuation\">:</span>  <span class=\"token number\">3</span></code></pre></div>\n<br/>\n<br/>\n<p>Exit Code는 프로세스를 종료하기 위한 코드이다(137=128+9 , 9번 시그널 : SIGKILL)  </p>\n<p><code class=\"language-text\">종류</code></p>\n<ul>\n<li>delay</li>\n<li>timeout</li>\n<li>period 가 추가로 존재 한다.<br>\n</li>\n</ul>\n<p>컨테이너 실행 후로부터 모니터링을 시작하기까지 시간을 delay<br>\n모니터링사이에 시간 간격을 timeout으로 표기한다.<br>\n파드가 실행되고 어플리케이션이 제대로 동작하기까지 시간이 걸리므로 초기 지연 시간을 initialDlaySecond 로 정의할 수 있다.<br>\nEvent 필드는 파드의 상태를 시간대별로 확인할 수 있으며 이 경우 라이브니스 프로브에 문제가 있다는 사실을 확인할 수 있다.<br>\n이들은 모두 yaml파일에 정의할 수 있는 내용들이다.</p>\n<br/>\n<hr>\n<h2 id=\"-레플리카셋\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B\" aria-label=\" 레플리카셋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 레플리카셋</h2>\n<p>쿠버네티스가 처음 나왔을 때는 파드를 복제하고 항상성을 유지시키기 위한 수단은 <code class=\"language-text\">레플리케이션 컨트롤러</code>가 유일했습니다  </p>\n<p>그러나 레플리케이션 컨트롤러의 몇몇 문제점과 기능 개선을 위해 레플리카셋이라는 컨트롤러가 추가되었습니다.<br>\n최근에는 레플리케이션 컨트롤러를 사용하지 않고 대부분 레플리카셋을 사용하기에<br>\n이번 포스트에서는 레플리케이션 컨트롤러에 대해서 다루진 않겠습니다. 뭐 어짜피 둘이 거의 비슷합니다!</p>\n<p>​</p>\n<p>레플리케이션 컨트롤러와 레플리카셋의 비교</p>\n<ul>\n<li><code class=\"language-text\">파드의 다중 레이블 지원</code></li>\n<li><code class=\"language-text\">파드에 설정된 레이블의 키만 선택 가능</code></li>\n</ul>\n<p>레플리케이션 컨트롤러에서는 파드의 여러 레이블 중 하나의 레이블에 대해서만 레이블 셀렉터로 관리 파드를 지정할 수 있었고<br>\n반드시 레이블의 key=value가 모두 일치해야만 파드를 지정할 수 있었습니다.<br>\n그러나 레플리카셋은 다중 레이블을 지정할 수 있고 key만 가지고도 레이블을 지정할 수 있습니다.</p>\n<br/>\n<br/>\n<h3 id=\"레플리카셋-생성\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B-%EC%83%9D%EC%84%B1\" aria-label=\"레플리카셋 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레플리카셋 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span> \nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ReplicaSet</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> replicaset<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \nspec<span class=\"token punctuation\">:</span> \nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> \nselector<span class=\"token punctuation\">:</span> \n    matchLabels<span class=\"token punctuation\">:</span> \n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \ntemplate<span class=\"token punctuation\">:</span> \n    metadata<span class=\"token punctuation\">:</span> \n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \n    labels<span class=\"token punctuation\">:</span> \n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \n    spec<span class=\"token punctuation\">:</span> \n    containers<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> replicaset<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \n        image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n        ports<span class=\"token punctuation\">:</span> \n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>레플리케이션 컨트롤러에서는 레이블 셀렉터 항목에 레이블을 직접 지정하지만<br>\n레플리카셋은 <code class=\"language-text\">matchLabels</code> 및 <code class=\"language-text\">matchExpressions</code> 필드로 <code class=\"language-text\">레이블을 선택</code>한다.<br>\n레플리카셋의 레이블 셀렉터는 kubectl explain replicaset.spec.selector로 지정할 수 있다.</p>\n<p>pod와 다르게 추가된 내용만 있습니다. replicas는 생성할 pod의 개수를 설정합니다.<br>\n그리고 레플리카가 포드를 생성할 때 사용할 템플릿을 정의합니다. </p>\n<br/>\n<br/>\n<p>생성 후 RS확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \nreplicaset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa created</code></pre></div>\n<br/>\n<br/>\n<p>레플리카셋 동작 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> replicasets<span class=\"token punctuation\">.</span>apps\nNAME              DESIRED   CURRENT   READY   AGE\nreplicaset<span class=\"token operator\">-</span>nasa   <span class=\"token number\">3</span>         <span class=\"token number\">3</span>         <span class=\"token number\">3</span>       3m9s</code></pre></div>\n<br/>\n<br/>\n<p>POD 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS    RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>7fvdx   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>gbft4   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>r84dt   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s</code></pre></div>\n<p>모두 정상적을 동작 한다!! 하지만 RS의 기능 중의 하나를 더 알아 봅시다!</p>\n<br/>\n<br/>\n<p>레플리카셋 <code class=\"language-text\">레이블 셀렉터</code> 사용</p>\n<ul>\n<li><code class=\"language-text\">matchLabels</code> 레이블 셀렉터</li>\n</ul>\n<p>matLabels 레이블 셀렉터는 오브젝트 파일에서 다음과 같은 형식으로 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nspec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">value</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>matchLabels로 레이블 셀렉터를 사용하는 경우<br>\n레플리케이션 컨트롤러와 레플리카셋이 동일하게 동작한다.</p>\n<br/>\n<br/>\n<p>matchExpressions 레이블 셀렉터</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    matchExpressions<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> key<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>stirng<span class=\"token operator\">></span>\n    <span class=\"token keyword\">operator</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>In <span class=\"token operator\">|</span> NotIn <span class=\"token operator\">|</span> Exists <span class=\"token operator\">|</span> DoesNotExist<span class=\"token operator\">></span>\n    values<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token operator\">></span></code></pre></div>\n<p>위의 매치레이블과 다른 점은 <code class=\"language-text\">key</code>와 <code class=\"language-text\">values</code>를 따로 지정한다는 점이다.<br>\noperator 필드는 key와 value 사이의 연산을 담당하는 부분으로 아래 네 가지 중 하나를 선택해서 매칭시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">In <span class=\"token punctuation\">:</span> 레이블의 키와 값이 지정된 값으로 일치해야 함\nNotIn<span class=\"token punctuation\">:</span> 레이블의 키와 값이 지정된 값과 일치하지 않아야 함\nExists<span class=\"token punctuation\">:</span> 레이블의 키가 포함되어야 함\nDoesNotExists<span class=\"token punctuation\">:</span> 레이블의 키가 포함되지 않아야 함</code></pre></div>\n<br/>\n<br/>\n<p>이번에는 같은 label을 갖고있는 replicas의 수를 증가시켜보겠습니다.<br>\nyaml 파일의 replicas를 4로 변경하고 다시 실행하면 변경된 것을 확인 할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">replicas<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> </code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># vim nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \nreplicaset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa configured</code></pre></div>\n<br/>\n<p>이전에는 <code class=\"language-text\">created</code>라는 출력이 나왔는데<br>\n이번에는 <code class=\"language-text\">configured</code>라는 출력이 나왔습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS    RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          32s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s</code></pre></div>\n<p>POD도 확인해보면 이전에 생성되었던 POD는 종료되지 않고<br>\n새로운 POD만 추가 실행 된 것을 확인 할 수 있습니다.</p>\n<br/>\n<br/>\n<h3 id=\"동작-원리\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 원리</h3>\n<p>레플리카셋은 자동으로 복구해주고 생성을 확인하는 것을 보면 <code class=\"language-text\">tracking</code> 하고 있는 것 같습니다.</p>\n<p>이러한 것은 어떻게 이루어 지는 것일까요??</p>\n<p>이는 레플리카셋이 라벨셀렉터로 같은 라벨을 갖고 있는 포드들을 계속 확인합니다.<br>\n실제로 동일한 라벨이 설정한 라플리카 개수만큼 다시 복구해줍니다.<br>\n그리고 동일한 포드의 개수가 레플리카에 설정한 개수와 같다면 특별한 작업을 진행하지 않습니다. </p>\n<p>결론적으로 레플리카셋은 포드의 개수를 일정한 개수를 유지하는 기능을 합니다.</p>\n<br/>\n<br/>\n<p>그리고 추가로 pod의 metadata 변경도 가능합니다. </p>\n<p><code class=\"language-text\">edit</code> 옵션을 사용해 특정 POD의 라벨을 edit-test로 바꾸어 보았습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl edit pod replicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg\npod<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg edited\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS              RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>72hgn   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     ContainerCreating   <span class=\"token number\">0</span>          4s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          5m45s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME                    READY   STATUS    RESTARTS   AGE     LABELS\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>72hgn   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          66s     app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>edit<span class=\"token operator\">-</span>test\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          6m47s   app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-데몬셋\" style=\"position:relative;\"><a href=\"#-%EB%8D%B0%EB%AA%AC%EC%85%8B\" aria-label=\" 데몬셋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 데몬셋</h2>\n<p>데몬셋은 모든 노드가 파드의 사본을 실행하도록 하는 역할을 한다.<br>\n쿠버네티스 클러스터에서 노드가 추가되면 파드도 추가된다.<br>\n노드가 클러스터에서 제거되면 해당 파드는 가비지(garbage)로 넘어간다.<br>\n데몬셋을 삭제하면 데몬셋이 생성한 파드들도 정리된다.  </p>\n<p>대몬셋의 정확한 용도는 다음과 같다.</p>\n<p>​</p>\n<ul>\n<li>모든 노드에서 클러스터 스토리지 데몬 실행</li>\n<li>모든 노드에서 로그 수집 데몬 실행</li>\n<li>모든 노드에서 노드 모니터링 데몬 실행</li>\n</ul>\n<p>​</p>\n<p>이러한 작업의 처리를 위해서 모든 노드 단위로 커버하는 데몬셋이 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">DaemonSet</span>\nmetadata<span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\nspec<span class=\"token punctuation\">:</span>\n  selector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n      app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\n  template<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n      labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\n    spec<span class=\"token punctuation\">:</span>\n      nodeSelector<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>  \n      containers<span class=\"token punctuation\">:</span>\n      <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n        image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n        ports<span class=\"token punctuation\">:</span>\n          <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<ul>\n<li>apiVersion apps/v1 → 쿠버네티스의 apps/v1 API를 사용 합니다.</li>\n<li>kind: DaemonSet → DaemonSet의 작업으로 명시 합니다.</li>\n<li>metadata.name → DaemonSet의 이름을 설정 합니다.</li>\n<li>metadata.namespace → 네임스페이스를 지정 합니다.</li>\n<li>metadata.labels → DaemonSet를 식별할 수 있는 레이블을 지정 합니다.</li>\n<li>spec.selector.matchLabels → 어떤 레이블의 파드를 선택하여 관리할 지 설정 합니다.</li>\n<li>spec.template.metadata.labels.name → 생성할 파드의 레이블을 파드명: ” ” 으로 지정 합니다.</li>\n<li>spec.template.spec.containers → 하위 옵션들은 컨테이너의 설정을 정의합니다.</li>\n</ul>\n<br/>\n<br/>\n<p>데몬 셋 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>ds<span class=\"token punctuation\">.</span>yml \ndaemonset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>ds created\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> ds\nNAME      DESIRED   CURRENT   READY   UP<span class=\"token operator\">-</span>TO<span class=\"token operator\">-</span>DATE   AVAILABLE   NODE SELECTOR   AGE\nnasa<span class=\"token operator\">-</span>ds   <span class=\"token number\">0</span>         <span class=\"token number\">0</span>         <span class=\"token number\">0</span>       <span class=\"token number\">0</span>            <span class=\"token number\">0</span>           node<span class=\"token operator\">=</span>nasa       32s</code></pre></div>\n<p>시간이 충분이 지난 후에도 <code class=\"language-text\">DESIRED, CURRENT, READY</code> 탭의 값이 모두 0이다. 파드가 아예 생성되지 않는다.<br>\n이유는 정의할 때 노드 셀렉터로 node=nasa 레이블을 선택하도록 했기에 매칭되는 노드가 없으므로 아무 POD도 생성되지 않은 것이다.</p>\n<br/>\n<br/>\n<p>데몬 셋 동작을 위해 노드를 지정해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label nodes nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node1</span> node<span class=\"token operator\">=</span>nasa\nnode<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>node1 labeled</code></pre></div>\n<br/>\n<br/>\n<p>다시 한번 데몬 셋을 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> nodes nasa<span class=\"token operator\">-</span>node1 <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME         STATUS   ROLES    AGE   VERSION   LABELS\nnasa<span class=\"token operator\">-</span>node1   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   <span class=\"token number\">24d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span>   <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span> <span class=\"token range operator\">..</span><span class=\"token range operator\">..</span> <span class=\"token punctuation\">,</span>node<span class=\"token operator\">=</span>nasa</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> daemonsets<span class=\"token punctuation\">.</span>apps \nNAME      DESIRED   CURRENT   READY   UP<span class=\"token operator\">-</span>TO<span class=\"token operator\">-</span>DATE   AVAILABLE   NODE SELECTOR   AGE\nnasa<span class=\"token operator\">-</span>ds   <span class=\"token number\">1</span>         <span class=\"token number\">1</span>         <span class=\"token number\">1</span>       <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           node<span class=\"token operator\">=</span>nasa       6m1s</code></pre></div>\n<br/>\n<br/>\n<p>데몬 셋이 동작함에 의해 POD가 1개 생성 되었다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME                    READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>ds<span class=\"token operator\">-</span>7jsgd           <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          106s</code></pre></div>\n<br/>\n<br/>\n<p>테스트를 모두 완료했으니 NODE와 DS를 삭제한다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label nodes nasa<span class=\"token operator\">-</span>node1 node<span class=\"token operator\">-</span>\nnode<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>node1 labeled</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-잡\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1\" aria-label=\" 잡 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐱‍🏍 잡</h2>\n<p>JOB 컨트롤러는 파드의(컨테이너)의 어플리케이션(JOB) 실행이 완료되는 것에 초점을 맞춘 컨트롤러이다.<br>\n즉, 끝이 정해진 작업을 하는 어플리케이션을 잡 컨트롤러가 관리한다.<br>\n파드가 작업을 마치고 성공적으로 종료되면 잡 컨트롤러는 성공적으로 완료된 잡을 추적한다.<br>\n잡을 삭제하면 잡이 생성한 파드도 정리된다.<br>\n물론 파드가 중간에 실패하는 경우 잡 오브젝트는 새로운 파드를 가동시킨다.<br>\n잡은 임시 작업, 배치 작업에 유용하게 사용될 수  있다.</p>\n<p>​잡 컨트롤러는 RC, RS, DS처럼 계속 동작하는 방식이 아니라<br>\n재시작 정책(restartPolicy)을 기본값이 Always가 아닌 Onfailuer나 Never로 선언해야 한다.<br>\n이렇게 하면 잡 컨트롤러의 파드는 재실행되지 않는다.</p>\n<ul>\n<li>\n<p>job.spec.template.spec.restartPolicy </p>\n<ul>\n<li>Always : 종료/실패시 항상 재시작(default)</li>\n<li>Onfailure: 실패식 재시작 (정상 종료시 재시작하지 않음)</li>\n<li>Never : 종료 또는 오류 발생시 재시작하지 않음</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<p>잡 컨트롤러 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> batch<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Job</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">job</span>\nspec<span class=\"token punctuation\">:</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">job</span>\n    spec<span class=\"token punctuation\">:</span>\n    restartPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">OnFailure</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n        image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">busybox</span>\n        command<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sleep\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"60\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>jop<span class=\"token punctuation\">.</span>yml \njob<span class=\"token punctuation\">.</span>batch<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>job created</code></pre></div>\n<br/>\n<br/>\n<p>잡 컨트롤러를 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> job<span class=\"token punctuation\">.</span>batch\nNAME       COMPLETIONS   DURATION   AGE\nnasa<span class=\"token operator\">-</span>job   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>           33s        33s\n\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>84s8x   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          40s</code></pre></div>\n<br/>\n<br/>\n<p>하나의 파드가 있고 아직 잡이 완료되지 않아서 COMPLETIONS에 0/1이라고 표기된다.<br>\n파드는 정상 동작중이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> job<span class=\"token punctuation\">.</span>batch\nNAME       COMPLETIONS   DURATION   AGE\nnasa<span class=\"token operator\">-</span>job   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>           64s        104s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME             READY   STATUS      RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>84s8x   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          107s</code></pre></div>\n<p>잠시 후에 파드를 다시 확인 해보니 STATUS가 Completed로 표기되고  </p>\n<p>잡 컨트롤러에서도 확인해보니 COMPLETIONS가 1/1로 바뀌었다.<br>\n잡이 완료되었음을 알 수 있다.</p>\n<br/>\n<br/>\n<p>다중 잡 컨트롤러</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\ncompletions<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></code></pre></div>\n<p><code class=\"language-text\">completions: 3</code> 설정만 YAML 파일에 추가해주면 여러 번의 작업을 값만 큼 순차적으로 실행한다.<br>\n하나의 파드가 생성되어 잡이 실행되고 완료되면 두 번째 파드가 생성되고 완료되고 ,<br>\n그 다음 파드가 생성되고 완료되기를 지정된 횟수만큼 반복하는 것이다.</p>\n<br/>\n<br/>\n<p>병렬 다중 잡 컨트롤러</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\ncompletions<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\nparallelism<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></code></pre></div>\n<p>병렬로 처리하기 위해서는 <code class=\"language-text\">parallelism: 3</code> 설정을 추가해주면 된다<br>\n그럼 3개의 3이 동시에 3번의 작업을 진행한다!!</p>\n<br/>\n<hr>\n<h2 id=\"-크론잡\" style=\"position:relative;\"><a href=\"#-%ED%81%AC%EB%A1%A0%EC%9E%A1\" aria-label=\" 크론잡 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎶 크론잡</h2>\n<p>잡 컨트롤러에서 잡을 실행하는 목적은 끝이 있는 작업을 하는 어플리케이션 때문이다.<br>\n크론잡은 이름에서 알 수 있듯이 주기적으로 반복된 작업을 하며,<br>\n그 작업이 시작과 끝이 있는 작업일 때 사용한다. <code class=\"language-text\">리눅스의 crontab과 같다.</code>  </p>\n<br/>\n<br/>\n<p>이론 보다는 실습!! 바로 크론잡을 생성해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> batch<span class=\"token operator\">/</span><span class=\"token class-name\">v1beta1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CronJob</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> hello <span class=\"token class-name\">World</span>\nspec<span class=\"token punctuation\">:</span>\nschedule<span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/1 * * * *\"</span>\njobTemplate<span class=\"token punctuation\">:</span>\n    spec<span class=\"token punctuation\">:</span>\n    template<span class=\"token punctuation\">:</span>\n        spec<span class=\"token punctuation\">:</span>\n        containers<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> hello <span class=\"token class-name\">World</span>\n            image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">busybox</span>\n            args<span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">-</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>sh\n            <span class=\"token operator\">-</span> <span class=\"token operator\">-</span>c\n            <span class=\"token operator\">-</span> date<span class=\"token punctuation\">;</span> echo Hello NASA<span class=\"token operator\">!</span> <span class=\"token keyword\">from</span> the Kubernetes <span class=\"token class-name\">cluster</span>\n        restartPolicy<span class=\"token punctuation\">:</span> OnFailure</code></pre></div>\n<br/>\n<p>가장 중요한 부분은 스케줄 필드로, cronjob.spec.schedule 필드를 사용해 주기적인 시간을 구성한다.<br>\n스케줄을 구성하는 값은 다섯 개의 필드로 구분되어 다음과 같은 순서이다.</p>\n<p><code class=\"language-text\">그냥 리눅스랑 똑같다!</code></p>\n<ul>\n<li>분</li>\n<li>시</li>\n<li>일</li>\n<li>월</li>\n<li>요일(0 : 일요일, 1: 월요일, 6: 토요일)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>cron<span class=\"token punctuation\">.</span>yml \ncronjob<span class=\"token punctuation\">.</span>batch<span class=\"token operator\">/</span>hello created</code></pre></div>\n<br/>\n<br/>\n<p>생성 후 크론 잡 컨트롤러 및 파드 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> cronjobs<span class=\"token punctuation\">.</span>batch\nNAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nhello   <span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>   False     <span class=\"token number\">0</span>        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>          28s</code></pre></div>\n<br/>\n<br/>\n<p>최초 생성된 직후 ACTIVE 상태의 잡은 없다.  마지막으로 동작한 LAST SCHEDULE도 없다.<br>\n잠시 기다린 후에 다시 조회해보면 다음과 같이 변한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> cronjobs<span class=\"token punctuation\">.</span>batch\nNAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nhello   <span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>   False     <span class=\"token number\">1</span>        10s             <span class=\"token number\">4m</span></code></pre></div>\n<br/>\n<br/>\n<p>파드를 조회해보면 다음과 같다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\n\\NAME                     READY   STATUS      RESTARTS   AGE\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331820</span><span class=\"token operator\">-</span>5jmd4   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          2m36s\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331880</span><span class=\"token operator\">-</span>jhs6s   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          96s\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331940</span><span class=\"token operator\">-</span>kkzwh   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          36s</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"크론잡-컨트롤러의-제한사항\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%A0%EC%9E%A1-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"크론잡 컨트롤러의 제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크론잡 컨트롤러의 제한사항</h3>\n<p>크론잡 컨트롤러는 일정 실행시간마다 하나의 잡 오브젝트를 생성한다.<br>\n특정한 상황에서는 하나가 아닌 여러 개의 잡이 생성되는 경우도 있다.<br>\n이러한 상황을 제어하기 위해서 크론잡 컨트롤러에서는 잡의 제한사항을 지정할 수 있다.</p>\n<p>​</p>\n<ul>\n<li><code class=\"language-text\">cronjob.spec.startingDeadlineSeconds</code> : 시작 데드라인 시간<br>\n어떤 이유든 예정된 시간에 잡을 시작해야 하는 데드라인.<br>\n초단위로 입력해서 현재로부터 n초 안에 일정을 놓친 잡이 있는지 확인.</li>\n</ul>\n<p>​</p>\n<ul>\n<li>\n<p><code class=\"language-text\">cronjob.spec.concurrrencyPolicy</code> : 동시 실행 정책  </p>\n<ul>\n<li>Allow: 잡이 동시 실행될 수 있음(default)</li>\n<li>Forbid: 동시 실행 금지. 잡이 아직 완료되지 않은 경우 다음 잡을 건너 뜀.</li>\n<li>Replace: 현재 실행중인 잡을 취소하고 새 잡으로 교체  </li>\n</ul>\n<p>위 설정들을 쉽게 예를 들어보자면<br>\nstartingDeadlineSeconds가 100초이고, concurrencyPolicy가 Allow이면<br>\n이전에 놓친 잡이 있으면 해당 잡을 실행하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\nschedule<span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/1 * * * *\"</span>\nstartingDeadlineSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\nconcurrencyPolicy<span class=\"token punctuation\">:</span> Forbid</code></pre></div>\n</li>\n</ul>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C\">✔ 라이브니스 프로브</a></p>\n<ul>\n<li><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1\">라이브니스 프로브 생성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B\">✌ 레플리카셋</a></p>\n<ul>\n<li><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B-%EC%83%9D%EC%84%B1\">레플리카셋 생성</a></li>\n<li><a href=\"#%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\">동작 원리</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EB%8D%B0%EB%AA%AC%EC%85%8B\">👀 데몬셋</a></li>\n<li><a href=\"#-%EC%9E%A1\">🐱‍🏍 잡</a></li>\n<li>\n<p><a href=\"#-%ED%81%AC%EB%A1%A0%EC%9E%A1\">🎶 크론잡</a></p>\n<ul>\n<li><a href=\"#%ED%81%AC%EB%A1%A0%EC%9E%A1-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\">크론잡 컨트롤러의 제한사항</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 컨트롤러","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-controller/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/kubernetes-label/","nextSlug":"/kubernetes-pod/","prevSlug":"/kubernetes-controller/"}},"staticQueryHashes":["1073350324","2938748437"]}