{"componentChunkName":"component---src-templates-blog-template-js","path":"/devops-cicd1/","result":{"data":{"cur":{"id":"057af5e7-bd29-5bbc-86f2-61487fe7337f","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source를 이용한 DevSecOps CI/CD PIPELINE 구축에 대한 포스트입니다.<br>\n다만 포스트의 양이 매우 많아 질 것 같아. CI, CD 별 그리고 툴 별로 포스트를 나눌 예정입니다.<br>\n이번 포스트에서는 Jenkins를 이용한 CI 구성 부분을 포스트 했습니다!..</p>\n<hr>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>gitlab</li>\n<li>Jenkins</li>\n<li>Docker, dockerhub</li>\n</ul>\n<hr>\n<h2 id=\"-환경구성\" style=\"position:relative;\"><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\" 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 환경구성</h2>\n<p>우선 환경 구성은 아래와 같습니다\n<img src=\"https://user-images.githubusercontent.com/69498804/94150900-b2780580-feb4-11ea-963e-6f7968e47d92.PNG\" alt=\"캡처\"></p>\n<ul>\n<li>jenkins : 젠킨스 서버의 역할을 하는 서버 (Docker in Docker)</li>\n<li>Rancher-master : Rancher 기반의 k8s Master</li>\n<li>nasa-node1~2 : Rancher 기반의 K8s Worker</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-ci\" style=\"position:relative;\"><a href=\"#-ci\" aria-label=\" ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ CI</h2>\n<h3 id=\"jenkins-설치\" style=\"position:relative;\"><a href=\"#jenkins-%EC%84%A4%EC%B9%98\" aria-label=\"jenkins 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JENKINS 설치</h3>\n<p>GCP 인스턴스 생성 방법의 경우 블로그의 <a href=\"https://nasa1515.tech/gcp-first/\">GCP 인스턴트 생성 방법</a> 포스트에 정리되어 있습니다.</p>\n<br/>\n<h3 id=\"jenkins\" style=\"position:relative;\"><a href=\"#jenkins\" aria-label=\"jenkins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins</h3>\n<p>Jenkins의 경우 Docker in Docker 방식으로 구성했습니다.<br>\n현재는 어쩔수 없이 Docker 기반의 서비스를 사용해보기 위해 실습을 해서 그렇지만<br>\n실제 최종 결과물은 Jenkins 툴을 인스턴스에 설치하는 것으로 서비스 예정입니다.</p>\n<br/>\n<p>Docker in Docker (DinD)  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">도커 안에 도커는 도커 바이너리를 설정하고 컨테이너 내부의 격리된 Docker 데몬을실행하는 작업을 의미한다<span class=\"token punctuation\">.</span> 즉<span class=\"token punctuation\">,</span> 도커데몬이 <span class=\"token number\">2</span>개가 뜨는 것이다<span class=\"token punctuation\">.</span> CI측면에서 접근한다면Task를 수행하는 Agent가 Docker Client와 Docker Daemon역할까지 하게되어 도커명령들을 수행하는데 문제가 없어진다<span class=\"token punctuation\">.</span> 이렇게 말로만 들으면 아름답고 문제가없어보이지만 이 접근에는 큰 단점이 존재한다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>호스트 도커 컨테이너가 privilieged mode로 실행되어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ docker run <span class=\"token operator\">--</span>privileged <span class=\"token operator\">--</span>name dind1 <span class=\"token operator\">-</span><span class=\"token class-name\">d</span> docker<span class=\"token punctuation\">:</span><span class=\"token number\">1.8</span><span class=\"token operator\">-</span>dind</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">privilieged 플래그를 사용한다면 호스트컨테이너가 호스트머신에서 할 수 있는 거의 모든 작업을 할 수 있게 된다<span class=\"token punctuation\">.</span>\n이는 컨테이너를 실행하는데 큰 <span class=\"token string\">\"\"</span>보안 위험<span class=\"token string\">\"\"</span>을 초래할 수 있다<span class=\"token punctuation\">.</span></code></pre></div>\n<p><a href=\"https://sreeninet.wordpress.com/2016/12/23/docker-in-docker-and-play-with-docker/\">DinD 사용법과 원리에 대해 잘 정리된 포스트</a></p>\n<br/>\n<br/>\n<p>우선 jenkins 설치 시 사용할 Home Directory 생성해줍니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># mkdir -p /docker/jenkins</span>\n<span class=\"token preprocessor property\"># chmod 666 /docker/jenkins</span></code></pre></div>\n<br/>\n<br/>\n<p>Docker로 젠킨스를 옵려줍시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># docker run -itd --name jenkins -p 8080:8080 -p 50000:50000 -v /docker/jenkins:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -e TZ=Asia/Seoul -u rootjenkins/jenkins:latest</span></code></pre></div>\n<br/>\n<br/>\n<p>주요 옵션 설명</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>jenkins_home\n    \n\nlocal volume의 <span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>jenkins 디렉토리와 container volume의 <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>jenkins_home 디렉토리 매핑\n\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>docker<span class=\"token punctuation\">.</span>sock<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>docker<span class=\"token punctuation\">.</span>sock\n제일 중요한 옵션\ndocker <span class=\"token keyword\">in</span> docker를 구현하기 위해 사용하는 옵션\n\n<span class=\"token operator\">-</span>u root\nDocker 사용자를 root로 설정\n\n<span class=\"token operator\">-</span>p <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span> <span class=\"token operator\">-</span>p <span class=\"token number\">50000</span><span class=\"token punctuation\">:</span><span class=\"token number\">50000</span>\nlocal port와 container port 연결\n<span class=\"token number\">8080</span>은 Jenkins 기본 port\n50000dms Jenkins slave port\n\n<span class=\"token operator\">-</span><span class=\"token class-name\">e</span> TZ<span class=\"token operator\">=</span>Asia<span class=\"token operator\">/</span>Seoul\njenkins 내의 timezone 설정</code></pre></div>\n<br/>\n<br/>\n<p>Jenkins 컨테이너가 제대로 생성된 것을 확인!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins devops<span class=\"token operator\">-</span>pipeline<span class=\"token punctuation\">]</span># docker ps\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                                              NAMES\nd8cbbb69e267        jenkins<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">:</span>latest   <span class=\"token string\">\"/sbin/tini -- /usr/…\"</span>   <span class=\"token number\">2</span> minutes ago       Up <span class=\"token number\">2</span> minutes        <span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">-></span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>tcp<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">:</span><span class=\"token number\">50000</span><span class=\"token operator\">-></span><span class=\"token number\">50000</span><span class=\"token operator\">/</span>tcp   jenkins</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"gcp-방화벽firewall-설정\" style=\"position:relative;\"><a href=\"#gcp-%EB%B0%A9%ED%99%94%EB%B2%BDfirewall-%EC%84%A4%EC%A0%95\" aria-label=\"gcp 방화벽firewall 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GCP 방화벽(Firewall) 설정</h3>\n<br/>\n<p>기본적으로 Jenkins는 8080포트를 사용하기에 GCP에서의 외부 통신을 위해선 방화벽 설정이 필요합니다.</p>\n<br/>\n<p>그림과 같이 인스턴스의 [네트워크 세부정보 보기] 탭으로 접속합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93840857-cbbe5d80-fccc-11ea-8204-63775025051c.png\" alt=\"스크린샷, 2020-09-22 12-11-43\"></p>\n<br/>\n<br/>\n<p>[방화벽 규칙] - [방화벽 규칙 만들기] 탭을 이용해 아래와 같이 규칙을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93841021-48513c00-fccd-11ea-9080-277cc08722b3.png\" alt=\"스크린샷, 2020-09-22 12-14-37\"><br>\n<code class=\"language-text\">0.0.0.0/0은 모든 IP 대역에 대한 허용입니다.</code><br>\n현재는 기능테스트를 위해서 모든 대역으로 잡아놨지만 후에 특정 인스턴스의 IP로만 허용 할 예정입니다</p>\n<br/>\n<br/>\n<p>그럼 아래 같은 방화벽이 추가된 것을 GCP에서 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93841074-73d42680-fccd-11ea-9994-508de3ab13ca.png\" alt=\"스크린샷, 2020-09-22 12-16-29\"></p>\n<br/>\n<br/>\n<p><code class=\"language-text\">이제 브라우저로 젠킨스에 접속 해봅시다</code>  </p>\n<ul>\n<li>접속 주소는 <a href=\"http://%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\">http://인스턴스</a> 외부 IP:8080 입니다.  </li>\n</ul>\n<br/>\n<p>즉 GCP에서 인스턴스에 외부 IP 설정이 필요합니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93844259-8c493e80-fcd7-11ea-8587-52b03347f155.png\" alt=\"스크린샷, 2020-09-22 13-28-43\"></p>\n<br/>\n<br/>\n<p>해당 인스턴스의 외부 IP : 34.64.93.209로 접속!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93844315-b69afc00-fcd7-11ea-8e8d-2b661d0b1729.png\" alt=\"스크린샷, 2020-09-22 13-29-55\">\n이렇게 Jenkins가 지원하는 웹페이지가 정상 구동됩니다</p>\n<br/>\n<br/>\n<p>Administrator password에는 다음의 명령어로 확인되는 코드를 입력해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">docker exec <span class=\"token operator\">-</span>it jenkins cat <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>jenkins_home<span class=\"token operator\">/</span>secrets<span class=\"token operator\">/</span>initialAdminPassword</code></pre></div>\n<br/>\n<br/>\n<p>해당 어드민 키를 입력 후 기본적인 정보들을 입력하면 아래와 같이 페이지를 볼 수 있습니다  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93844873-9e2be100-fcd9-11ea-9dec-621d09789744.png\" alt=\"스크린샷, 2020-09-22 13-43-21\"></p>\n<br/>\n<hr>\n<h3 id=\"자-이제-gitlab과-연동해봅시다\" style=\"position:relative;\"><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-gitlab%EA%B3%BC-%EC%97%B0%EB%8F%99%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"자 이제 gitlab과 연동해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자 이제 gitlab과 연동해봅시다.</h3>\n<br/>\n<p>주로 외부 저장소로 GITLAB, GITHUB를 많이 이용하는데<br>\n이번 포스트에서는 <code class=\"language-text\">gitlab</code>을 사용해보겠습니다.  </p>\n<br/>\n<p><a href=\"https://gitlab.com/\">gitlab</a> Gitlab 로그인 후 Settings 메뉴에 접속합니다   </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93845625-7be79280-fcdc-11ea-85d9-7b0f1fc27f62.png\" alt=\"스크린샷, 2020-09-22 14-04-02\"></p>\n<br/>\n<br/>\n<p>아래와 같은 설정으로 토큰을 생성 해줍니다  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93845725-e39ddd80-fcdc-11ea-8784-bcd98b5f15b8.png\" alt=\"스크린샷, 2020-09-22 14-06-58\"></p>\n<br/>\n<br/>\n<p>생성 후 토큰 값이 나올텐데 기록해두세요!!  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93845764-0b8d4100-fcdd-11ea-8c06-3aec0f404540.png\" alt=\"스크린샷, 2020-09-22 14-08-04\"></p>\n<br/>\n<hr>\n<h3 id=\"docker-in-docker-dind-작업\" style=\"position:relative;\"><a href=\"#docker-in-docker-dind-%EC%9E%91%EC%97%85\" aria-label=\"docker in docker dind 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker in Docker (DinD) 작업</h3>\n<br/>\n<p>우선 Docker를 이용해 이미지 Build 및 Push를 위해 플러그인을 설치해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94152453-8a89a180-feb6-11ea-9bd9-64c85abc085f.PNG\" alt=\"123\"></p>\n<br/>\n<br/>\n<p>Jenkins에서 GitLab과 연동을 위한 Credential 추가<br>\n우선 Jenkins에서 GitLab token을 사용하는 Credential을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93848039-95d8a380-fce3-11ea-9862-f21c1b40f4b4.png\" alt=\"스크린샷, 2020-09-22 14-54-54\">\ndocker-build-step, Docker, Docker-pipeline 세가지!</p>\n<br/>\n<br/>\n<h3 id=\"docker-in-docker-구성\" style=\"position:relative;\"><a href=\"#docker-in-docker-%EA%B5%AC%EC%84%B1\" aria-label=\"docker in docker 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker in Docker 구성</h3>\n<br/>\n<p>Docker Container 접속</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ docker exec <span class=\"token operator\">-</span>it jenkins bash</code></pre></div>\n<br/>\n<br/>\n<p>Docker설치를 위한 Shell 다운로드</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ curl <span class=\"token operator\">-</span>fsSL <span class=\"token keyword\">get</span><span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com <span class=\"token operator\">-</span>o <span class=\"token keyword\">get</span><span class=\"token operator\">-</span>docker<span class=\"token punctuation\">.</span>sh</code></pre></div>\n<br/>\n<br/>\n<p>Docker install shell script 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ sh <span class=\"token keyword\">get</span><span class=\"token operator\">-</span>docker<span class=\"token punctuation\">.</span>sh</code></pre></div>\n<br/>\n<br/>\n<p> docker 실행 가능 여부 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ docker ps\nCONTAINER ID        IMAGE                 COMMAND                  CREATED             STATUS              PORTS                                              NAMES\n094c32442200        nasa1415<span class=\"token operator\">/</span>devops<span class=\"token punctuation\">:</span><span class=\"token number\">0.1</span>   \"<span class=\"token operator\">/</span>sbin<span class=\"token operator\">/</span>tini <span class=\"token operator\">--</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span><span class=\"token operator\">??</span>   About an hour ago   Up About an hour    <span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">-></span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>tcp<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">:</span><span class=\"token number\">50000</span><span class=\"token operator\">-></span><span class=\"token number\">50000</span><span class=\"token operator\">/</span>tcp   jenkins</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"여기까지-ci를-설정-끝\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EA%B8%B0%EA%B9%8C%EC%A7%80-ci%EB%A5%BC-%EC%84%A4%EC%A0%95-%EB%81%9D\" aria-label=\"여기까지 ci를 설정 끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여기까지 CI를 설정 끝</h3>\n<br/>\n<p>Build 할 Docker 이미지를 준비합시다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">FROM</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">18.04</span>\nRUN ln <span class=\"token operator\">-</span>sf <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>zoneinfo<span class=\"token operator\">/</span>Asia<span class=\"token operator\">/</span>Seoul <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>localtime\nRUN apt upgrade <span class=\"token operator\">-</span>y\nRUN apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update <span class=\"token operator\">-</span>y\nRUN apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install nginx <span class=\"token operator\">-</span>y\nRUN echo <span class=\"token string\">\"daemon off;\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>conf\n\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>위와 같이 간단한 우분투 생성 DockerFile을 만들어서 배포해보죠</p>\n<br/>\n<br/>\n<h2 id=\"-ci-이미지-build--push\" style=\"position:relative;\"><a href=\"#-ci-%EC%9D%B4%EB%AF%B8%EC%A7%80-build--push\" aria-label=\" ci 이미지 build  push permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ (CI) 이미지 Build &#x26; push</h2>\n<br/>\n<p>그전에 배포를 위해 Docker-Hub의 인증키를 생성합니다<br>\nJenkins->Credentials->global->Add Credentials</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94220408-d292dd80-ff23-11ea-84a2-c636709c2986.png\" alt=\"스크린샷, 2020-09-25 11-39-43\">\n위의 캡쳐와 같이 DOCKERHUB의 ID와 PASSWORD를 적어서 인증키를 생성합니다</p>\n<br/>\n<br/>\n<p>생성된 인증키를 확인합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94220566-31585700-ff24-11ea-8f0e-2e5593ed3dfb.png\" alt=\"스크린샷, 2020-09-25 11-42-25\"></p>\n<br/>\n<br/>\n<p>이제 배포를 위해 Jenkins에서 새로운 item을 누르고, pipeline 선택 후 item의 이름을 입력해주세요.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94220622-577df700-ff24-11ea-9463-eb744535a220.png\" alt=\"스크린샷, 2020-09-25 11-43-31\"></p>\n<br/>\n<br/>\n<p>Pipeline 메뉴에서 Definition을 Pipeline script from SCM을 선택하여 주세요.<br>\n이제 Script path를 물어보게 되는데, jenkinsfile-build에 각 단계를 규정해서 액션을 지정하면 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94220652-7086a800-ff24-11ea-83f2-33f5617892ae.png\" alt=\"스크린샷, 2020-09-25 11-44-12\">\n레포지토리 항목에는 연동 할 레포지토리 주소를 적어줍니다. 저의 경우 gitlab</p>\n<br/>\n<br/>\n<p>모든 설정을 마무리하고 SAVE를 누르면 아래와 같이 아이템이 생성됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94220781-b2175300-ff24-11ea-9c8b-7a43cb818ab7.png\" alt=\"스크린샷, 2020-09-25 11-46-02\"></p>\n<br/>\n<hr>\n<br/>\n<p>빌드와 푸시를 해봅시다</p>\n<p>git 저장소에 DockerFile과 Jenkinsfile-nasa를 넣어줍니다 </p>\n<p>저의 경우 GITLAB과 사용하는 노트북저장소를 연결시켜 놨습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>gitlab<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline# ls <span class=\"token operator\">-</span>alrt \n합계 <span class=\"token number\">24</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> student student <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">22</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">55</span> <span class=\"token range operator\">..</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root    root      <span class=\"token number\">45</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">22</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span> README<span class=\"token punctuation\">.</span>md\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root    root     <span class=\"token number\">208</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">24</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">56</span> Dockerfile\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root    root     <span class=\"token number\">355</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">24</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span> Jenkinsfile<span class=\"token operator\">-</span>nasa\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">8</span> root    root    <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">24</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span> <span class=\"token punctuation\">.</span>git\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root    root    <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">25</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span> <span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>Jenkinsfile-nasa</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">node <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Clone repository'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        checkout scm\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Build image'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        app <span class=\"token operator\">=</span> docker<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nasa1415/devops\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Push image'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        docker<span class=\"token punctuation\">.</span><span class=\"token function\">withRegistry</span><span class=\"token punctuation\">(</span>'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>registry<span class=\"token punctuation\">.</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com'<span class=\"token punctuation\">,</span> 'nasa1415'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            app<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${env.BUILD_NUMBER}\"</span><span class=\"token punctuation\">)</span>\n            app<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 생성한 아이템에서 Build Now 버튼을 눌러 빌드해봅시다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94221213-96f91300-ff25-11ea-9f24-6db24689479e.png\" alt=\"스크린샷, 2020-09-25 11-52-26\"></p>\n<br/>\n<br/>\n<p>그럼 빌드가 실행되고, 로직을 보여줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94221282-c14ad080-ff25-11ea-8f22-7639fa1aa509.png\" alt=\"스크린샷, 2020-09-25 11-53-38\"></p>\n<br/>\n<br/>\n<p>이제 Docker Hub에도 빌드 Numver : 10으로 이미지가 업로드가 된 것을 확인 할 수 있죠.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94221366-e93a3400-ff25-11ea-964a-b9b6c88f21e9.png\" alt=\"스크린샷, 2020-09-25 11-54-43\"></p>\n<br/>\n<br/>\n<hr>\n<h3 id=\"ci-자동화\" style=\"position:relative;\"><a href=\"#ci-%EC%9E%90%EB%8F%99%ED%99%94\" aria-label=\"ci 자동화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI 자동화</h3>\n<p>일일히 Build 버튼을 누르면 너무 귀찮으니 GITLAB 저장소에 Push Event 발생시 자동 빌드되도록 설정합시다</p>\n<br/>\n<p>우선 GITLAB에서 Access Token을 발급해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94222018-41256a80-ff27-11ea-9c6c-ddccd1000d8b.png\" alt=\"스크린샷, 2020-09-25 12-04-21\">\nUSER - SETTING - ACCESS TOKEN 메뉴로 들어가 아래와 같이 입력 후 발급된 키를 기억해 두세요</p>\n<br/>\n<br/>\n<p>jenkins에서 발급한 키로 아래와 같이 인증키를 생성합니다!\n<img src=\"https://user-images.githubusercontent.com/69498804/94222018-41256a80-ff27-11ea-9c6c-ddccd1000d8b.png\" alt=\"스크린샷, 2020-09-25 12-04-21\"></p>\n<br/>\n<br/>\n<p>이제 Jenkins에서 Credential을 Global Settings에 Gitlab으로 추가해줍니다<br>\n실제 Jenkins와 Gitlab 연동을 위한 Jenkins의 Manage Jenkins 상에 Configure System 에서<br>\n아래와 같은 설정을 추가합니다. credential은 앞서 생성한 credential을 선택합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94222189-aaa57900-ff27-11ea-9677-b46edb066a18.png\" alt=\"스크린샷, 2020-09-25 12-07-17\"></p>\n<p>참고할것은 URL내에 http:// 를 필히 입력해야 합니다.<br>\nURL은 생성해둔 GITLAB의 프로젝트 URL 입니다!!</p>\n<br/>\n<hr>\n<h3 id=\"jenkins에서-자동-build-trigger-설정\" style=\"position:relative;\"><a href=\"#jenkins%EC%97%90%EC%84%9C-%EC%9E%90%EB%8F%99-build-trigger-%EC%84%A4%EC%A0%95\" aria-label=\"jenkins에서 자동 build trigger 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins에서 자동 Build trigger 설정</h3>\n<br/>\n<p>아까 생성해둔 아이템에서 설정에 들어가 아래 메뉴에서 웹훅 URL을 확인합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94222435-4cc56100-ff28-11ea-94fc-475ed1bd211a.png\" alt=\"스크린샷, 2020-09-25 12-11-49\"></p>\n<p>해당 설정 적용 시 build가 push시 자동으로 이루어지도록 합니다.<br>\n여기서 webhook URL정보가 출력되니 기억 해 두어야 합니다.</p>\n<p>저의 경우 URL: <a href=\"http://34.64.94.209:8080/project/image\">http://34.64.94.209:8080/project/image</a> 입니다.</p>\n<br/>\n<hr>\n<h2 id=\"-gitlab에서-integration-webhook-등록\" style=\"position:relative;\"><a href=\"#-gitlab%EC%97%90%EC%84%9C-integration-webhook-%EB%93%B1%EB%A1%9D\" aria-label=\" gitlab에서 integration webhook 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 GitLab에서 integration webhook 등록</h2>\n<p>이제 GitLab에서 Push Event가 발생되면 Jenkin의 Job을 build 하는 webhook을 생성하도록 해보겠습니다.</p>\n<br/>\n<p>아래와 같이 GitLab의 해당 project에 settings→ integration 으로 이동하여 webhook을 생성합니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/93849625-7e9bb500-fce7-11ea-9a13-f4575810667e.png\" alt=\"스크린샷, 2020-09-22 15-22-54\">\n방금 전 확인했던 URL을 입력하면 됩니다!!</p>\n<br/>\n<br/>\n<p>다음과 같은 에러가 발생했습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93850069-51033b80-fce8-11ea-8ea8-285c5abd8f7d.png\" alt=\"스크린샷, 2020-09-22 15-28-46\">\n검색 결과 WebHook 생성 시 URL만 기입하고 Secret 토큰을 기입하지 않아서였다…</p>\n<br/>\n<br/>\n<p>Jenkins 에서 만든 프로젝트에서 설정에 들어가면 아래와 같이 genarator로 발급받을 수 있다.\n<img src=\"https://user-images.githubusercontent.com/69498804/93851083-75601780-fcea-11ea-9820-d35eeb742a25.png\" alt=\"스크린샷, 2020-09-22 15-44-06\"></p>\n<br/>\n<br/>\n<p>웹훅이 제대로 생성되었다면 테스트 해봅시다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94222822-61eebf80-ff29-11ea-8640-8b0dc65846dd.png\" alt=\"스크린샷, 2020-09-25 12-19-33\">\n아래 생성된 웹훅에서 Push Events를 클릭하여 테스트 진행해보죠</p>\n<br/>\n<br/>\n<p>그럼 아래처럼 정상적으로 푸시 이벤트를 전송했음을 확인 할 수 있습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94222874-82b71500-ff29-11ea-9a83-efcbb8e1e512.png\" alt=\"스크린샷, 2020-09-25 12-20-30\"></p>\n<br/>\n<br/>\n<p>자 그럼 이제 모든 설정이 완료되었습니다 git push를 날렸을때 테스트 해보죠</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>gitlab<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline# ls <span class=\"token operator\">-</span>lart \n합계 <span class=\"token number\">28</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> student student <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">22</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">55</span> <span class=\"token range operator\">..</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root    root      <span class=\"token number\">45</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">22</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span> README<span class=\"token punctuation\">.</span>md\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root    root     <span class=\"token number\">208</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">24</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">56</span> Dockerfile\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root    root     <span class=\"token number\">355</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">24</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span> Jenkinsfile<span class=\"token operator\">-</span>nasa\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">8</span> root    root    <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">25</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">57</span> <span class=\"token punctuation\">.</span>git\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root    root       <span class=\"token number\">5</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">25</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">22</span> gitlab<span class=\"token operator\">-</span>push<span class=\"token operator\">-</span>test\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root    root    <span class=\"token number\">4096</span>  <span class=\"token number\">9</span>월 <span class=\"token number\">25</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">22</span> <span class=\"token punctuation\">.</span>\nroot@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>gitlab<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline# git <span class=\"token keyword\">add</span> <span class=\"token operator\">-</span>A\nroot@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>gitlab<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline# git commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"event test\"</span>\n<span class=\"token punctuation\">[</span>master 51f5052<span class=\"token punctuation\">]</span> <span class=\"token keyword\">event</span> test\n<span class=\"token number\">1</span> <span class=\"token class-name\">file</span> changed<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token function\">insertion</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span>\ncreate mode <span class=\"token number\">100644</span> gitlab<span class=\"token operator\">-</span>push<span class=\"token operator\">-</span>test\nroot@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>gitlab<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline# git push gitlab\nUsername <span class=\"token keyword\">for</span> 'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>gitlab<span class=\"token punctuation\">.</span>com'<span class=\"token punctuation\">:</span> nasa1515\nPassword <span class=\"token keyword\">for</span> 'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>nasa1515@gitlab<span class=\"token punctuation\">.</span>com'<span class=\"token punctuation\">:</span> \n오브젝트 개수 세는 중<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> 완료<span class=\"token punctuation\">.</span>\nDelta compression <span class=\"token keyword\">using</span> up to <span class=\"token number\">8</span> threads<span class=\"token punctuation\">.</span>\n오브젝트 압축하는 중<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 완료<span class=\"token punctuation\">.</span>\n오브젝트 쓰는 중<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450</span> bytes <span class=\"token operator\">|</span> <span class=\"token number\">450.00</span> KiB<span class=\"token operator\">/</span>s<span class=\"token punctuation\">,</span> 완료<span class=\"token punctuation\">.</span>\nTotal <span class=\"token number\">5</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">To</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>gitlab<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>devops<span class=\"token operator\">-</span>pipeline<span class=\"token punctuation\">.</span>git\ne901329<span class=\"token range operator\">..</span>51f5052  master <span class=\"token operator\">-></span> master</code></pre></div>\n<p>저는 다음과 같이 gitlab-push-test라는 파일을 생성해서 PUSH 했습니다</p>\n<br/>\n<br/>\n<p>그럼 Jenkins 에서는 Push Event를 읽어와 다름과 같이 자동 빌드합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94223072-fbb66c80-ff29-11ea-94f5-2b7e440ca6e7.png\" alt=\"스크린샷, 2020-09-25 12-23-53\"></p>\n<br/>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Jenkins를 사용해서 CI 부분을 자동화 해봤습니다.<br>\n사실 이전까지는 DevOps라는 개념에 대해서 추상적으로만 알고있었을 뿐이지 어떤 작업들을 하는지는 정확히 몰랐었습니다.<br>\n아직 파이프라인의 통합 전 사전 설정 단계이지만 이미지는 어떤식으로 빌드를 수행하는지<br>\n그리고 배포는 어떤식으로 하는지 등등을 알게 되었습니다.</p>\n<p>특히 추상적이던 DevOps의 추세에 맞추어서 CI 자연스럽게 연결을 지었고<br>\n추가적으로 결과에 대한 Noti를 Slack등으로 전달받는 기능도 추가할 예정입니다.<br>\n다음 포스트에는 Rancher를 이용한 클러스터 구축에 대해서 적용해보고 정리하는 시간을 갖도록 하겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\">✔ 환경구성</a></li>\n<li>\n<p><a href=\"#-ci\">✔ CI</a></p>\n<ul>\n<li><a href=\"#jenkins-%EC%84%A4%EC%B9%98\">JENKINS 설치</a></li>\n<li><a href=\"#jenkins\">Jenkins</a></li>\n<li><a href=\"#gcp-%EB%B0%A9%ED%99%94%EB%B2%BDfirewall-%EC%84%A4%EC%A0%95\">GCP 방화벽(Firewall) 설정</a></li>\n<li><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-gitlab%EA%B3%BC-%EC%97%B0%EB%8F%99%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">자 이제 gitlab과 연동해봅시다.</a></li>\n<li><a href=\"#docker-in-docker-dind-%EC%9E%91%EC%97%85\">Docker in Docker (DinD) 작업</a></li>\n<li><a href=\"#docker-in-docker-%EA%B5%AC%EC%84%B1\">Docker in Docker 구성</a></li>\n<li><a href=\"#%EC%97%AC%EA%B8%B0%EA%B9%8C%EC%A7%80-ci%EB%A5%BC-%EC%84%A4%EC%A0%95-%EB%81%9D\">여기까지 CI를 설정 끝</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-ci-%EC%9D%B4%EB%AF%B8%EC%A7%80-build--push\">✌ (CI) 이미지 Build &#x26; push</a></p>\n<ul>\n<li><a href=\"#ci-%EC%9E%90%EB%8F%99%ED%99%94\">CI 자동화</a></li>\n<li><a href=\"#jenkins%EC%97%90%EC%84%9C-%EC%9E%90%EB%8F%99-build-trigger-%EC%84%A4%EC%A0%95\">Jenkins에서 자동 Build trigger 설정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-gitlab%EC%97%90%EC%84%9C-integration-webhook-%EB%93%B1%EB%A1%9D\">🙌 GitLab에서 integration webhook 등록</a></p>\n<ul>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source를 이용한 DevSecOps CI/CD PIPELINE 구축에 대한 포스트입니다. 다만 포스트의 양이 매우 많아 질 것 같아. CI, CD 별 그리고 툴 별로 포스트를 나눌 예정입니다. 이번 포스트에서는 Jenkins를 이용한 CI 구성 부분을 포스트 했습니다!.. 사용 할 툴을 다음과 같습니다.   gitlab Jenkins Docker, dockerhub ✔ 환경구성 우선 환경 구성은 아래와 같습니다\n캡처 jenkins : 젠킨스 서버의 역할을 하는 서버 (Docker in Docker) Rancher-master : Rancher 기반…","frontmatter":{"date":"August 04, 2021","title":"[DEVOPS] - Jenkins를 이용한 CI 자동화 구축","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-cicd1/"}},"next":{"id":"887be352-bf3c-5019-b2eb-f2dcb2cfba4d","html":"<p>머리말  </p>\n<p>블로그에도 매번 인프라나 Devops 관련 글들만 올라와서 최근에 공부하고 있는 Data쪽도 포스트를 늘리려고 합니다.<br>\n아직 초급자 수준이라서 틀린 내용이 많을 것 같지만, 복습하는 느낌으로…<br>\n본 포스트에서 내용들은 모드 MS Doc를 기준으로 정리해 작성했습니다.</p>\n<hr>\n<h2 id=\"-azure-synapse-analytics\" style=\"position:relative;\"><a href=\"#-azure-synapse-analytics\" aria-label=\" azure synapse analytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Azure Synapse Analytics</h2>\n<p>Synapse Analytics는 엔터프라이즈 데이터 웨어하우징과 빅 데이터 분석을 결합한 SaaS 입니다.<br>\nSynapse의 용어 중의 SQL Pool (SQL DW)이란??<br>\nSynapse Analytics에서 사용할 수 있는 <code class=\"language-text\">엔터프라이즈 데이터 웨어하우징 기능</code>을 나타냅니다. </p>\n<br/>\n<ul>\n<li>\n<h4 id=\"enter-prise-data-warehousing\" style=\"position:relative;\"><a href=\"#enter-prise-data-warehousing\" aria-label=\"enter prise data warehousing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enter Prise Data WareHousing</h4>\n<p><em>엔터프라이즈 영역에서 정적 Data (ex. 영업 데이터, 매출 데이터, 개발 데이터 등)을</em><br>\n<em>ETL (extract, transform, load), 전처리(가공) 전 중앙에 모아 관리하는 논리 로직</em></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"sql-전용-풀dedicated-leading-sql-전-sql-dw\" style=\"position:relative;\"><a href=\"#sql-%EC%A0%84%EC%9A%A9-%ED%92%80dedicated-leading-sql-%EC%A0%84-sql-dw\" aria-label=\"sql 전용 풀dedicated leading sql 전 sql dw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 전용 풀(Dedicated-leading SQL), (전 SQL DW)</h4>\n<p><em>Synapse SQL을 사용할 때 프로비저닝되는 분석 리소스의 컬렉션을 표현합니다.</em><br>\n<em>(SQL POOL의 크기와 가격은 DWU(Data WareHouse Unit)에 의해 결정됩니다.</em> </p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"dedicated-sql은-다음과-같은-synapse-architecture에-포함됩니다\" style=\"position:relative;\"><a href=\"#dedicated-sql%EC%9D%80-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-synapse-architecture%EC%97%90-%ED%8F%AC%ED%95%A8%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"dedicated sql은 다음과 같은 synapse architecture에 포함됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dedicated SQL은 다음과 같은 Synapse Architecture에 포함됩니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109120531-6abe1880-7789-11eb-8b03-7e3a301f9f3b.png\" alt=\"dedicated-sql-pool (1)\"></p>\n<p>Synapse analytics에서 사용가능한 서비스 아키텍쳐<br>\n각 서비스의 설명은 차후 포스트로 나눠서 진행 예정입니다.</p>\n<ul>\n<li>Deficated SQL Pools</li>\n<li>Serverless SQL Pool</li>\n<li>Apache Spark Pools</li>\n<li>Pipelines (Data 통합)</li>\n<li>Shared metadata system</li>\n<li>Connected Service</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-azure-portal-에서-synapse-analystics-영역-생성\" style=\"position:relative;\"><a href=\"#-azure-portal-%EC%97%90%EC%84%9C-synapse-analystics-%EC%98%81%EC%97%AD-%EC%83%9D%EC%84%B1\" aria-label=\" azure portal 에서 synapse analystics 영역 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Azure Portal 에서 Synapse Analystics 영역 생성</h2>\n<br/>\n<ul>\n<li>\n<h4 id=\"porter에서-create-resource-tab에서-azure-synapse-analystics-검색-후-설치\" style=\"position:relative;\"><a href=\"#porter%EC%97%90%EC%84%9C-create-resource-tab%EC%97%90%EC%84%9C-azure-synapse-analystics-%EA%B2%80%EC%83%89-%ED%9B%84-%EC%84%A4%EC%B9%98\" aria-label=\"porter에서 create resource tab에서 azure synapse analystics 검색 후 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Porter에서 Create resource Tab에서 Azure Synapse analystics 검색 후 설치</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109130587-40725800-7795-11eb-871b-24912db54ae1.JPG\" alt=\"캡처2\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"basic-옵션-설정\" style=\"position:relative;\"><a href=\"#basic-%EC%98%B5%EC%85%98-%EC%84%A4%EC%A0%95\" aria-label=\"basic 옵션 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic 옵션 설정</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109235009-29bd1700-7810-11eb-9521-8cfa1ca9db1d.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>RG</li>\n<li>Workspace name</li>\n<li>Region</li>\n<li>Account name</li>\n<li>File System name</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<h4 id=\"생성된-synapse-workspace에-접속합니다\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EB%90%9C-synapse-workspace%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"생성된 synapse workspace에 접속합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성된 Synapse workspace에 접속합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109237068-40fe0380-7814-11eb-92c3-17f4af65a87c.JPG\" alt=\"캡처4\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"work-space-web-url에-접속합니다\" style=\"position:relative;\"><a href=\"#work-space-web-url%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"work space web url에 접속합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work Space Web URL에 접속합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109237187-6c80ee00-7814-11eb-8783-9ceee0ed2c19.JPG\" alt=\"캡처6\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"다음과-같은-web-url에-접속됩니다\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-web-url%EC%97%90-%EC%A0%91%EC%86%8D%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"다음과 같은 web url에 접속됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음과 같은 Web URL에 접속됩니다!</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109237303-a651f480-7814-11eb-8432-cd1bdb399f61.JPG\" alt=\"캡처7\"></p>\n<p>WEB URL에서는 다음과 같은 Blade로 나뉩니다.</p>\n<ul>\n<li>HOME : 홈 화면 UI</li>\n<li>DATA : DB or Linked 되어있는 Lake Storage 등</li>\n<li>Develop : SQL Scirpt, Data flow등 쿼리에 대한 작업</li>\n<li>Integrate : Develop 과정을 통합하는 파이프라인 작업</li>\n<li>Monitor : Develop, Integrate 작업에 대한 모니터링</li>\n<li>Manage : SQL Pools, Spark Pools, 파이프라인 등 관리</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-synapse-sql-pools을-이용한-간단한-쿼리-테스트\" style=\"position:relative;\"><a href=\"#-synapse-sql-pools%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%BF%BC%EB%A6%AC-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" synapse sql pools을 이용한 간단한 쿼리 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 Synapse SQL Pools을 이용한 간단한 쿼리 테스트</h2>\n<br/>\n<ul>\n<li>\n<h4 id=\"test를-위한-sql-pools을-생성해봅시다\" style=\"position:relative;\"><a href=\"#test%EB%A5%BC-%EC%9C%84%ED%95%9C-sql-pools%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"test를 위한 sql pools을 생성해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TEST를 위한 SQL Pools을 생성해봅시다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109242652-d900ea80-781e-11eb-9651-f63c35cc4f96.JPG\" alt=\"캡처11\"></p>\n<ul>\n<li>다음과 같은 Manage tab -> SQL Pools -> NEW로 생성가능   </li>\n<li>Built-in으로 Serverless를 주긴하지만 사용하지 않을 겁니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>생성 된 SQL Pools은 Data Tab에서 다음과 같이 확인이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109244981-064f9780-7823-11eb-9c00-47998f326b06.JPG\" alt=\"캡처22\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"이-후-데이터를-넣어보겠습니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%ED%9B%84-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%84%A3%EC%96%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"이 후 데이터를 넣어보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 후 데이터를 넣어보겠습니다.</h4>\n<p>Develop Tab에서 + 단추로 새로 리소스 추가 -> SQL 스크립트를 생성<br>\n아래 스크립트 삽입 후 실행 (Azure에서 제공하는 200만개 행 데이터)</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">CREATE TABLE <span class=\"token punctuation\">[</span>dbo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">nasa1515</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DateID</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">NOT</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MedallionID</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">NOT</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HackneyLicenseID</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">NOT</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PickupTimeID</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">NOT</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropoffTimeID</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">int</span> <span class=\"token class-name\">NOT</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PickupGeographyID</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropoffGeographyID</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PickupLatitude</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PickupLongitude</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PickupLatLong</span></span><span class=\"token punctuation\">]</span> <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> COLLATE <span class=\"token class-name\">SQL_Latin1_General_CP1_CI_AS</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropoffLatitude</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropoffLongitude</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DropoffLatLong</span></span><span class=\"token punctuation\">]</span> <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> COLLATE <span class=\"token class-name\">SQL_Latin1_General_CP1_CI_AS</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PassengerCount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TripDurationSeconds</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TripDistanceMiles</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PaymentType</span></span><span class=\"token punctuation\">]</span> <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> COLLATE <span class=\"token class-name\">SQL_Latin1_General_CP1_CI_AS</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">FareAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SurchargeAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TaxAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TipAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TollsAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TotalAmount</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">money</span> NULL\n<span class=\"token punctuation\">)</span>\nWITH\n<span class=\"token punctuation\">(</span>\n    DISTRIBUTION <span class=\"token operator\">=</span> ROUND_ROBIN<span class=\"token punctuation\">,</span>\n    CLUSTERED <span class=\"token class-name\">COLUMNSTORE</span> INDEX\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nCOPY INTO <span class=\"token punctuation\">[</span>dbo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">nasa1515</span></span><span class=\"token punctuation\">]</span>\nFROM 'https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>nytaxiblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>windows<span class=\"token punctuation\">.</span>net<span class=\"token operator\">/</span><span class=\"token number\">2013</span><span class=\"token operator\">/</span>Trip2013<span class=\"token operator\">/</span>QID6392_20171107_05910_0<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">.</span>gz'\nWITH\n<span class=\"token punctuation\">(</span>\n    FILE_TYPE <span class=\"token operator\">=</span> 'CSV'<span class=\"token punctuation\">,</span>\n    FIELDTERMINATOR <span class=\"token operator\">=</span> <span class=\"token string character\">'|'</span><span class=\"token punctuation\">,</span>\n    FIELDQUOTE <span class=\"token operator\">=</span> ''<span class=\"token punctuation\">,</span>\n    ROWTERMINATOR<span class=\"token operator\">=</span>'<span class=\"token number\">0X0A</span>'<span class=\"token punctuation\">,</span>\n    COMPRESSION <span class=\"token operator\">=</span> 'GZIP'\n<span class=\"token punctuation\">)</span>\nOPTION <span class=\"token punctuation\">(</span>LABEL <span class=\"token operator\">=</span> 'COPY <span class=\"token punctuation\">:</span> Load <span class=\"token punctuation\">[</span>nasa1515<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Trip</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Taxi dataset'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>간단하게 dbo.nasa1515라는 테이블을 만들고 데이터를 Load 하는 작업입니다. </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"스크립트를-실행하기-전-연결되어-있는-sql-pools을-확인해주세요\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0-%EC%A0%84-%EC%97%B0%EA%B2%B0%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-sql-pools%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"스크립트를 실행하기 전 연결되어 있는 sql pools을 확인해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트를 실행하기 전 연결되어 있는 SQL Pools을 확인해주세요</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109246549-d1910f80-7825-11eb-99ad-071d07d7229e.JPG\" alt=\"캡처444\"></p>\n<ul>\n<li>저는 조금 전 만든 SQL Pools을 선택해서 RUN 했습니다. </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"방법2-미리-만든-data를-업로드-가능\" style=\"position:relative;\"><a href=\"#%EB%B0%A9%EB%B2%952-%EB%AF%B8%EB%A6%AC-%EB%A7%8C%EB%93%A0-data%EB%A5%BC-%EC%97%85%EB%A1%9C%EB%93%9C-%EA%B0%80%EB%8A%A5\" aria-label=\"방법2 미리 만든 data를 업로드 가능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법2. 미리 만든 Data를 업로드 가능</h4>\n<p>Data Tab -> Lake Storage의 파일시스템에 데이터 UPload 가능</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109240640-309d5700-781b-11eb-973f-2825baafa97a.JPG\" alt=\"캡처8\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"스크립트-실행-후-db에-테이블과-데이터를-확인합니다\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%A4%ED%96%89-%ED%9B%84-db%EC%97%90-%ED%85%8C%EC%9D%B4%EB%B8%94%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"스크립트 실행 후 db에 테이블과 데이터를 확인합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 실행 후 DB에 테이블과 데이터를 확인합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109254859-36546600-7836-11eb-8a94-113c77c54c3b.JPG\" alt=\"캡처22211\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-이제-db에서-데이터를-뽑아서-시각화-해보죠\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EC%A0%9C-db%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%BD%91%EC%95%84%EC%84%9C-%EC%8B%9C%EA%B0%81%ED%99%94-%ED%95%B4%EB%B3%B4%EC%A3%A0\" aria-label=\" 이제 db에서 데이터를 뽑아서 시각화 해보죠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👌 이제 DB에서 데이터를 뽑아서 시각화 해보죠</h2>\n<ul>\n<li>\n<h4 id=\"생성했던-table에서-new-sql-script---select-top-100-rows-창을-접속\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%ED%96%88%EB%8D%98-table%EC%97%90%EC%84%9C-new-sql-script---select-top-100-rows-%EC%B0%BD%EC%9D%84-%EC%A0%91%EC%86%8D\" aria-label=\"생성했던 table에서 new sql script   select top 100 rows 창을 접속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성했던 Table에서 New SQL script -> Select TOP 100 rows 창을 접속</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109255127-b5499e80-7836-11eb-8d7a-4e82169c906c.JPG\" alt=\"캡처11\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"그럼-다음과-같은-select-문이-나오는데-지우고-아래-스크립트를-입력-후-run\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-select-%EB%AC%B8%EC%9D%B4-%EB%82%98%EC%98%A4%EB%8A%94%EB%8D%B0-%EC%A7%80%EC%9A%B0%EA%B3%A0-%EC%95%84%EB%9E%98-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%9E%85%EB%A0%A5-%ED%9B%84-run\" aria-label=\"그럼 다음과 같은 select 문이 나오는데 지우고 아래 스크립트를 입력 후 run permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 다음과 같은 Select 문이 나오는데 지우고 아래 스크립트를 입력 후 RUN</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109255293-0c4f7380-7837-11eb-831e-a5237dbc0dfd.JPG\" alt=\"캡처33333\"></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">SELECT</span> PassengerCount<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>TripDistanceMiles<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">SumTripDistance</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>TripDistanceMiles<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">AvgTripDistance</span>\nFROM  dbo<span class=\"token punctuation\">.</span>nasa1515\nWHERE TripDistanceMiles <span class=\"token operator\">></span> <span class=\"token number\">0</span> AND PassengerCount <span class=\"token operator\">></span> <span class=\"token number\">0</span>\nGROUP BY PassengerCount\nORDER <span class=\"token class-name\">BY</span> PassengerCount<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>넣었던 DB는 뉴욕 택시기사의 데이터입니다.</li>\n<li>위 스크립트는 총 주행거리,평균 주행거리, 승객 수 데이터를 뽑습니다.  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"다음과-같이-sql-db에서-해당-데이터가-호출되게-됩니다\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%B4-sql-db%EC%97%90%EC%84%9C-%ED%95%B4%EB%8B%B9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%ED%98%B8%EC%B6%9C%EB%90%98%EA%B2%8C-%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"다음과 같이 sql db에서 해당 데이터가 호출되게 됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음과 같이 SQL DB에서 해당 데이터가 호출되게 됩니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109255651-c5ae4900-7837-11eb-9a7e-2a0bfd960e10.JPG\" alt=\"캡처2\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"또한-호출해낸-결과를-다음과-같이-쉽게-시각화가-가능합니다\" style=\"position:relative;\"><a href=\"#%EB%98%90%ED%95%9C-%ED%98%B8%EC%B6%9C%ED%95%B4%EB%82%B8-%EA%B2%B0%EA%B3%BC%EB%A5%BC-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%B4-%EC%89%BD%EA%B2%8C-%EC%8B%9C%EA%B0%81%ED%99%94%EA%B0%80-%EA%B0%80%EB%8A%A5%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"또한 호출해낸 결과를 다음과 같이 쉽게 시각화가 가능합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>또한 호출해낸 결과를 다음과 같이 쉽게 시각화가 가능합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109255782-027a4000-7838-11eb-8b9c-0467ef957ec6.JPG\" alt=\"캡처222222\"></p>\n<ul>\n<li>View Tab을 Chart로만 변경하면 된다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"추가적으로-monitor-tab에서-쿼리에-대한-모니터링도-가능합니다\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80%EC%A0%81%EC%9C%BC%EB%A1%9C-monitor-tab%EC%97%90%EC%84%9C-%EC%BF%BC%EB%A6%AC%EC%97%90-%EB%8C%80%ED%95%9C-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81%EB%8F%84-%EA%B0%80%EB%8A%A5%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"추가적으로 monitor tab에서 쿼리에 대한 모니터링도 가능합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가적으로 Monitor Tab에서 쿼리에 대한 모니터링도 가능합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109260684-f0050400-7841-11eb-819e-e86e57090c4c.JPG\" alt=\"ttest\"></p>\n<ul>\n<li>기본적으로 파이프라인, 트리거, Pools들의 상태를 확인 가능  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"상단의-publish-all을-하게-되면-방금전에-사용했던-쿼리가-저장-및-등록됩니다\" style=\"position:relative;\"><a href=\"#%EC%83%81%EB%8B%A8%EC%9D%98-publish-all%EC%9D%84-%ED%95%98%EA%B2%8C-%EB%90%98%EB%A9%B4-%EB%B0%A9%EA%B8%88%EC%A0%84%EC%97%90-%EC%82%AC%EC%9A%A9%ED%96%88%EB%8D%98-%EC%BF%BC%EB%A6%AC%EA%B0%80-%EC%A0%80%EC%9E%A5-%EB%B0%8F-%EB%93%B1%EB%A1%9D%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"상단의 publish all을 하게 되면 방금전에 사용했던 쿼리가 저장 및 등록됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상단의 Publish all을 하게 되면 방금전에 사용했던 쿼리가 저장 및 등록됩니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109261400-0f506100-7843-11eb-8cde-9caafb85f3e7.JPG\" alt=\"222131\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"그럼-develop-tab에-script가-자동으로-생성됩니다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-develop-tab%EC%97%90-script%EA%B0%80-%EC%9E%90%EB%8F%99%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%84%B1%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"그럼 develop tab에 script가 자동으로 생성됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 Develop Tab에 Script가 자동으로 생성됩니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/109261495-3b6be200-7843-11eb-99f8-a7ef61007724.JPG\" alt=\"캡처33341\"></p>\n<ul>\n<li>해당 스크립트를 integrate 파이프라인에 넣어 자동화도 가능합니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<p>이번 포스트에서는 SQL Pools로 진행하는 방법만 다뤄봤습니다.\nServerless, Apache Spark 등의 방법은 추후에 포스트 예정입니다. </p>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>Data쪽은 아직 아무것도 모르겠습니다.<br>\n조금 조금씩 기초 이론부터 시작해서 실습까지 인프라처럼 늘 수 있다고 생각합니다.  </p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-azure-synapse-analytics\">✔ Azure Synapse Analytics</a></li>\n<li><a href=\"#-azure-portal-%EC%97%90%EC%84%9C-synapse-analystics-%EC%98%81%EC%97%AD-%EC%83%9D%EC%84%B1\">✌ Azure Portal 에서 Synapse Analystics 영역 생성</a></li>\n<li><a href=\"#-synapse-sql-pools%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%BF%BC%EB%A6%AC-%ED%85%8C%EC%8A%A4%ED%8A%B8\">👏 Synapse SQL Pools을 이용한 간단한 쿼리 테스트</a></li>\n<li><a href=\"#-%EC%9D%B4%EC%A0%9C-db%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%BD%91%EC%95%84%EC%84%9C-%EC%8B%9C%EA%B0%81%ED%99%94-%ED%95%B4%EB%B3%B4%EC%A3%A0\">👌 이제 DB에서 데이터를 뽑아서 시각화 해보죠</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 02, 2021","title":"[AZURE] [DATA] Azure Synapse Analytics","categories":"AZURE DATA","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-synapse/"}},"prev":{"id":"369278cb-c762-599f-ba00-0a2a53a49b54","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다  </p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>Rancher (GCP INSTANCE)</li>\n<li>k8s (GKE), ON-PRE로 구성된 클러스터</li>\n<li>ARgoCD</li>\n</ul>\n<hr>\n<br/>\n<h2 id=\"-ranche-환경으로-서비스-구축을-해봅시다\" style=\"position:relative;\"><a href=\"#-ranche-%ED%99%98%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95%EC%9D%84-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\" ranche 환경으로 서비스 구축을 해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ RANCHE 환경으로 서비스 구축을 해봅시다.</h2>\n<p>Rancher는 Rancher Labs에서 개발한 오픈 소스컨테이너 오케스트레이션 플랫폼<br>\nRancher 2.0(현재 버전)은 Kubernetes 기반으로 개발되었으며 기존 온프레미스 환경을<br>\n비롯한 멀티 클라우드 환경을 통합 관제할 수 있도록 지원합니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96835487-99944d00-147e-11eb-883d-602a97991ed7.png\" alt=\"스크린샷, 2020-10-22 15-52-21\"></p>\n<br/>\n<hr>\n<h3 id=\"rancher로-k8s-클러스터-구성\" style=\"position:relative;\"><a href=\"#rancher%EB%A1%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1\" aria-label=\"rancher로 k8s 클러스터 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RANCHER로 K8S 클러스터 구성</h3>\n<br/>\n<ul>\n<li>\n<p>DOCKER 설치 [전 노드 동일하게 진행]</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">yum repository 설정 추가\n$ sudo yum install <span class=\"token operator\">-</span>y yum<span class=\"token operator\">-</span>utils device<span class=\"token operator\">-</span>mapper<span class=\"token operator\">-</span>persistent<span class=\"token operator\">-</span>data lvm2\n$ sudo yum<span class=\"token operator\">-</span>config<span class=\"token operator\">-</span>manager <span class=\"token operator\">--</span><span class=\"token keyword\">add</span><span class=\"token operator\">-</span><span class=\"token class-name\">repo</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>centos<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>ce<span class=\"token punctuation\">.</span>repo</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>도커 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">sudo yum <span class=\"token operator\">-</span>y install docker<span class=\"token operator\">-</span>ce docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli containerd<span class=\"token punctuation\">.</span>io</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>도커 설치 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">sudo systemctl start docker\nsudo systemctl enable docker\nsudo docker <span class=\"token class-name\">version</span>\nClient<span class=\"token punctuation\">:</span> Docker Engine <span class=\"token operator\">-</span> <span class=\"token class-name\">Community</span>\nVersion<span class=\"token punctuation\">:</span>           <span class=\"token number\">19.03</span><span class=\"token number\">.13</span>\n<span class=\"token class-name\">API</span> version<span class=\"token punctuation\">:</span>       <span class=\"token number\">1.40</span>\n<span class=\"token class-name\">Go</span> version<span class=\"token punctuation\">:</span>        go1<span class=\"token punctuation\">.</span><span class=\"token number\">13.15</span>\n<span class=\"token class-name\">Git</span> commit<span class=\"token punctuation\">:</span>        4484c46d9d\nBuilt<span class=\"token punctuation\">:</span>             Wed Sep <span class=\"token number\">16</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">03</span><span class=\"token punctuation\">:</span><span class=\"token number\">45</span> <span class=\"token number\">2020</span>\nOS<span class=\"token operator\">/</span>Arch<span class=\"token punctuation\">:</span>           linux<span class=\"token operator\">/</span><span class=\"token class-name\">amd64</span>\nExperimental<span class=\"token punctuation\">:</span>      <span class=\"token class-name\">false</span>\n\nServer<span class=\"token punctuation\">:</span> Docker Engine <span class=\"token operator\">-</span> <span class=\"token class-name\">Community</span>\nEngine<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">19.03</span><span class=\"token number\">.13</span>\n<span class=\"token class-name\">API</span> version<span class=\"token punctuation\">:</span>      <span class=\"token number\">1.40</span> <span class=\"token punctuation\">(</span>minimum version <span class=\"token number\">1.12</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Go</span> version<span class=\"token punctuation\">:</span>       go1<span class=\"token punctuation\">.</span><span class=\"token number\">13.15</span>\n<span class=\"token class-name\">Git</span> commit<span class=\"token punctuation\">:</span>       4484c46d9d\nBuilt<span class=\"token punctuation\">:</span>            Wed Sep <span class=\"token number\">16</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">02</span><span class=\"token punctuation\">:</span><span class=\"token number\">21</span> <span class=\"token number\">2020</span>\nOS<span class=\"token operator\">/</span>Arch<span class=\"token punctuation\">:</span>          linux<span class=\"token operator\">/</span><span class=\"token class-name\">amd64</span>\nExperimental<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">false</span>\ncontainerd<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">1.3</span><span class=\"token number\">.7</span>\nGitCommit<span class=\"token punctuation\">:</span>        8fba4e9a7d01810a393d5d25a3621dc101981175\nrunc<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">1.0</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token class-name\">rc10</span>\nGitCommit<span class=\"token punctuation\">:</span>        dc9208a3303feef5b3839f4323d9beb36df0a9dd\ndocker<span class=\"token operator\">-</span>init<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">0.18</span><span class=\"token number\">.0</span>\nGitCommit<span class=\"token punctuation\">:</span>        fec3683</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"docker-in-rancher\" style=\"position:relative;\"><a href=\"#docker-in-rancher\" aria-label=\"docker in rancher permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker in RANCHER</h3>\n<p>다만!!! 그전에 사전준비가 있습니다</p>\n<p>WDI 환경에서 rancher를 통해 k8s 클러스터를 관리하기 위해서, 보안정책에 추가 port 오픈이 필요합니다.   </p>\n<p>RANCHER에 사용되는 포트는 <a href=\"https://rancher.com/docs/rancher/v2.x/en/installation/references/\">공식 문서</a>에서 확인 가능합니다.</p>\n<p>보안 정책에서 inbound 포트를 허용하도록 등록합니다.<br>\n그러나 저의 경우 Firewall을 종료하는 것으로 마무리 했습니다..<br>\n다만 GCP의 환경일 경우 GCP의 방화벽에서는 열여줘야 합니다! </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token number\">2376</span> TCP\n<span class=\"token number\">2379</span><span class=\"token operator\">-</span><span class=\"token number\">2380</span> TCP\n<span class=\"token number\">8472</span> UDP\n<span class=\"token number\">9099</span> TCP\n<span class=\"token number\">6783</span> TCP\n<span class=\"token number\">6783</span><span class=\"token operator\">-</span><span class=\"token number\">6784</span> UDP\n<span class=\"token number\">10250</span> TCP\n<span class=\"token number\">10254</span> TCP\n<span class=\"token number\">30000</span><span class=\"token operator\">-</span><span class=\"token number\">32767</span> TCP<span class=\"token operator\">/</span>UDP</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h3>\n<p><a href=\"https://rancher.com/docs/rancher/v2.x/en/installation/single-node/\">공식문서</a>  </p>\n<p>저의 경우 nasa-master : rancher 메인 서버를 한대만 사용하고<br>\n나머지 nasa-node1-2 : agent로 전체 서버에 사용하는 구조로 진행할 예정했습니다.  </p>\n<br/>\n<ul>\n<li>\n<p>MASTER 서버 Rancher Server 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">docker run <span class=\"token operator\">-</span>d <span class=\"token operator\">--</span>restart<span class=\"token operator\">=</span>unless<span class=\"token operator\">-</span>stopped \\\n<span class=\"token operator\">--</span>privileged <span class=\"token operator\">-</span>p <span class=\"token number\">80</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token operator\">-</span>p <span class=\"token number\">443</span><span class=\"token punctuation\">:</span><span class=\"token number\">443</span> \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>host<span class=\"token operator\">/</span>certs<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>container<span class=\"token operator\">/</span>certs \\\n<span class=\"token operator\">-</span><span class=\"token class-name\">e</span> SSL_CERT_DIR<span class=\"token operator\">=</span><span class=\"token string\">\"/container/certs\"</span> \\\nrancher<span class=\"token operator\">/</span>rancher<span class=\"token punctuation\">:</span>latest</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>간단하게 설치를 하면 GCP의 External Ip로 대쉬보드 접근이 가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94093474-3f40a600-fe58-11ea-96a4-f39b52a40e5c.png\" alt=\"스크린샷, 2020-09-24 11-22-26\">\n이후 관리자 PWD 설정등을 마무리 해줍시다</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"이제-k8s-클러스터를-생성-후-노드를-연결-해봅시다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0%EB%A5%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"이제 k8s 클러스터를 생성 후 노드를 연결 해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 K8S 클러스터를 생성 후 노드를 연결 해봅시다</h3>\n<br/>\n<ul>\n<li>\n<p>Clusters > Add Cluster<br>\n클러스터 유형 Custom, Cluster 제공자 Custom 나머지 옵션은 기본 값으로 진행합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94103036-80dc4b80-fe6e-11ea-97a0-8e337e937af2.png\" alt=\"스크린샷, 2020-09-24 14-01-52\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>기본 구성을 마치면 Cluster의 Node를 추가 할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/94102680-a9177a80-fe6d-11ea-8817-c3ce799320ec.png\" alt=\"스크린샷, 2020-09-24 13-55-47\">\n위에서 각 Node의 역할 별 체크박스에 체크 후 아래의 스크립트를 붙혀넣으면 됩니다.<br>\n추가로 <code class=\"language-text\">Show Advance options</code> tab에서 Node의 IP, 이름을 추가로 설정 가능합니다</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>저의 경우 Master는 ALL, Node1-2는 Worker로 사용할 겁니다 </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@rancher<span class=\"token operator\">-</span>node2 <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># sudo docker run <span class=\"token operator\">-</span>d <span class=\"token operator\">--</span>privileged <span class=\"token operator\">--</span>restart<span class=\"token operator\">=</span>unless<span class=\"token operator\">-</span>stopped <span class=\"token operator\">--</span>net<span class=\"token operator\">=</span>host <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span> <span class=\"token operator\">--</span><span class=\"token class-name\">server</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.79</span><span class=\"token number\">.179</span> <span class=\"token operator\">--</span>token rpkc8zzs7mvzq4ng8lszpp5ncpfvfl6tm7c2bkmlcvfjb9ncgtzq49 <span class=\"token operator\">--</span>ca<span class=\"token operator\">-</span>checksum e9f82b3c16848a400fa3c5839dd1f7e23dbfbd1a2912dace1cbfca72366581f0 <span class=\"token operator\">--</span>node<span class=\"token operator\">-</span>name rancher<span class=\"token operator\">-</span>node2 <span class=\"token operator\">--</span>address <span class=\"token number\">34.64</span><span class=\"token number\">.144</span><span class=\"token number\">.38</span> <span class=\"token operator\">--</span><span class=\"token keyword\">internal</span><span class=\"token operator\">-</span>address <span class=\"token number\">34.64</span><span class=\"token number\">.144</span><span class=\"token number\">.38</span> <span class=\"token operator\">--</span>worker\nUnable to find image 'rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span>' locally\nv2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span><span class=\"token punctuation\">:</span> Pulling <span class=\"token keyword\">from</span> rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span><span class=\"token class-name\">agent</span>\nf08d8e2a3ba1<span class=\"token punctuation\">:</span> Pull complete \n3baa9cb2483b<span class=\"token punctuation\">:</span> Pull complete \n94e5ff4c0b15<span class=\"token punctuation\">:</span> Pull complete \n1860925334f9<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \ne5d12d0f9a84<span class=\"token punctuation\">:</span> Pull complete \n5116e686c448<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nd4f72327bfd0<span class=\"token punctuation\">:</span> Pull complete \n61bcbcce7861<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nfca783017521<span class=\"token punctuation\">:</span> Pull complete \n29ab00ed6801<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nDigest<span class=\"token punctuation\">:</span> sha256<span class=\"token punctuation\">:</span><span class=\"token class-name\">c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1</span>\nStatus<span class=\"token punctuation\">:</span> Downloaded newer image <span class=\"token keyword\">for</span> rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span>\ndb357cd36dc9c2fda9cfce9e42177b560e0e5d25faae743747541bba4b0b92b5</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>각 노드에 스크립트를 입력 후 5~8분정도 지나면 아래와 같이 클러스터가 생성됩니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94103986-dd406a80-fe70-11ea-858e-3b27ef50a871.png\" alt=\"스크린샷, 2020-09-24 14-18-44\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 k8s의 배포가 완료 되었는지 Rancher에서 지원하는 CLI로 확인해봅시다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104127-458f4c00-fe71-11ea-8e6b-6d21402da47c.png\" alt=\"스크린샷, 2020-09-24 14-21-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 노드 정보를 받아옵니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104178-6192ed80-fe71-11ea-911a-7f8350316725.png\" alt=\"스크린샷, 2020-09-24 14-22-27\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>추가적으로 대쉬보드의 Cluster 탭을 확인해보면 Cluster들의 상태를 모니터링 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104307-aae33d00-fe71-11ea-938e-da9101a39fef.png\" alt=\"스크린샷, 2020-09-24 14-24-29\"></p>\n</li>\n</ul>\n<h3 id=\"자-이제-rancher로-기본적인-클러스터-구성이-완료되었습니다\" style=\"position:relative;\"><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-rancher%EB%A1%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1%EC%9D%B4-%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"자 이제 rancher로 기본적인 클러스터 구성이 완료되었습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자 이제 Rancher로 기본적인 클러스터 구성이 완료되었습니다.!</h3>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Rancher를 사용해서 k8s 클러스터를 생성하는 법을 알아봤습니다.<br>\n사실 이전까지는 클러스터를 구축할때 kubeadm으로 하나하나 설정을 잡아주면서 구축했었는데<br>\n우연히 Rancher라는 툴을 알게되어 사용해봤는데 만족합니다<br>\nRancher에 대한 추가포스트로 모니터링이나 툴등을 연동하는 포스트도 추후에 올릴 예정이구요!<br>\n다음 포스트에는 GKE 기반의 클러스터를 Rancher로 생성, 연동하는 포스트입니다!!.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-ranche-%ED%99%98%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95%EC%9D%84-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">✔ RANCHE 환경으로 서비스 구축을 해봅시다.</a></p>\n<ul>\n<li><a href=\"#rancher%EB%A1%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1\">RANCHER로 K8S 클러스터 구성</a></li>\n<li><a href=\"#docker-in-rancher\">Docker in RANCHER</a></li>\n<li><a href=\"#%EC%84%A4%EC%B9%98\">설치</a></li>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0%EB%A5%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">이제 K8S 클러스터를 생성 후 노드를 연결 해봅시다</a></li>\n<li><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-rancher%EB%A1%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1%EC%9D%B4-%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4\">자 이제 Rancher로 기본적인 클러스터 구성이 완료되었습니다.!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 05, 2021","title":"[DEVOPS] - Rancher를 사용한 Kubernetes Cluster 구축","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-rancher/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/devops-cicd1/","nextSlug":"/azure-synapse/","prevSlug":"/devops-rancher/"}},"staticQueryHashes":["1073350324","2938748437"]}