{"componentChunkName":"component---src-templates-blog-template-js","path":"/devops-argocd/","result":{"data":{"cur":{"id":"85410047-efe9-5c0d-aa1f-e10ed1571e2d","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Gitops기반의 Argo-CD 를 이용한 배포에 대해서 포스트했습니다<br>\n앞서 다룬 포스트에서 기본적인 환경구성은 모두 완료되었고 이제부터 진정한 파이프라인 구성입니다!!</p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>Rancher (GKE)</li>\n<li>Argo-cd</li>\n</ul>\n<hr>\n<h2 id=\"-환경구성\" style=\"position:relative;\"><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\" 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 환경구성</h2>\n<ul>\n<li>환경구성의 경우 이전 포스트에서 모두 완료했습니다!!</li>\n<li>다만 클러스터 내부에 직접 들어가 Argo-CD를 설치하는게 아닌 Rancher의 카탈로그를 사용해서 자동 Helm 배포를 진행합니다</li>\n</ul>\n<hr>\n<h2 id=\"-rancher-argo-cd-plugin을-설치\" style=\"position:relative;\"><a href=\"#-rancher-argo-cd-plugin%EC%9D%84-%EC%84%A4%EC%B9%98\" aria-label=\" rancher argo cd plugin을 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Rancher Argo-CD Plugin을 설치</h2>\n<p>구축중인 파이프라인의 전제적인 Service Flow는 다음과 같습니다</p>\n<ul>\n<li><code class=\"language-text\">CI : Jenkins -> DockerHUB / CD : Gitlab -> Argo-CD -> Rancher Cluseter</code>   <br>\nApi를 통한 이미지 배포 (Rolling update) 진행 및 히스토리 관리 예정.</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"작업-시작-전-정보\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85-%EC%8B%9C%EC%9E%91-%EC%A0%84-%EC%A0%95%EB%B3%B4\" aria-label=\"작업 시작 전 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작업 시작 전 정보!</h3>\n<p>— > Docker Containor Restart</p>\n<p>도커의 경우 VM과는 다르다 컨테이너란 프로세스의 개념으로 생각하면된다<br>\nGCP 인스턴스의 Docker로 실행한 Jenkins가 이로 인해 문제를 발생시켰다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker ps <span class=\"token operator\">-</span>a\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS                      PORTS               NAMES\nd8cbbb69e267        jenkins<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">:</span>latest   <span class=\"token string\">\"/sbin/tini -- /usr/…\"</span>   <span class=\"token number\">18</span> hours <span class=\"token return-type class-name\">ago</span>        Exited <span class=\"token punctuation\">(</span><span class=\"token number\">143</span><span class=\"token punctuation\">)</span> <span class=\"token number\">17</span> hours ago                       jenkins\n<span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<p>이렇게 인스턴스를 재부팅하면 컨테이너가 죽는다…</p>\n<p>그럼 위의 명령어로 해당 컨테이너 아이디를 확인 후 Container restart 명령어로 되살리면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker container restart d8cbbb69e267\nd8cbbb69e267</code></pre></div>\n<br/>\n<ul>\n<li>\n<p>Rancher 대쉬보드 -> APP -> Launch 탭에 접속</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95819968-285be800-0d62-11eb-810c-34a4666edeac.png\" alt=\"aaaa\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Argo-CD Plugin 검색 후 각 노드에 배포</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820019-47f31080-0d62-11eb-8b41-3952f785acac.png\" alt=\"스크린샷, 2020-10-13 14-42-08\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이런 설정들은 기본으로 두어도 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820058-5e00d100-0d62-11eb-8110-10b3149c4826.png\" alt=\"스크린샷, 2020-10-13 14-42-46\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같이 Rancher 대쉬보드에서 배포된 Apps에 대해서 확인 할 수 있습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820133-838dda80-0d62-11eb-84d2-7ee6115b69cf.png\" alt=\"스크린샷, 2020-10-13 14-43-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>배포가 모두 완료된 후 ARGO-CD APPS에 들어가면 아래와 같이 Endpoint 주소를 띄웁니다.\n해당 주소로 접속!!\n<img src=\"https://user-images.githubusercontent.com/69498804/95820242-b6d06980-0d62-11eb-8bc9-5f0705adeb23.png\" alt=\"스크린샷, 2020-10-13 14-45-13\"></li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 다음과 같은 Argo-CD의 대쉬보드에 접속이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820317-db2c4600-0d62-11eb-8789-ef49d07cc6c6.png\" alt=\"스크린샷, 2020-10-13 14-46-16\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>하지만 관리자 PASSWORD는 서버명으로 설정되기 때문에 아래 POD에 접속합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820435-0a42b780-0d63-11eb-8bb3-9c73de758bbd.png\" alt=\"스크린샷, 2020-10-13 14-47-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>아래 POD의 전체 ID가 현재 관리자(ADMIN) 계정의 패스워드입니다. 입력 후 접속!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820534-3100ee00-0d63-11eb-8460-26824e97e779.png\" alt=\"스크린샷, 2020-10-13 14-48-38\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 접속이 되었다면 아래와 같이 배포 파이프라인을 설정 할 수 있는 창이 나오게 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820622-5aba1500-0d63-11eb-9f27-1ac1fdc3b5d4.png\" alt=\"스크린샷, 2020-10-13 14-49-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>설정 -> 저장소 탭에서 연동할 GITALB의 주소를 등록해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95822592-2d6f6600-0d67-11eb-8e0f-da14e9b434dd.png\" alt=\"스크린샷, 2020-10-13 15-17-13\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>New APP을 눌러 새로운 파이프라인을 설정해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820959-0499a180-0d64-11eb-832f-bf6a4f4fb2a8.png\" alt=\"스크린샷, 2020-10-13 14-54-35\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같은 PipeLINE App이 하나 만들어집니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821114-4fb3b480-0d64-11eb-94a1-eaa4df36079a.png\" alt=\"스크린샷, 2020-10-13 14-56-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>GITLAB 저장소에는 아래와 같은 두 파일이 존재하고 내용을 다음과 같다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821188-6fe37380-0d64-11eb-9d94-76b0837a8d56.png\" alt=\"스크린샷, 2020-10-13 14-57-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>deploy.yaml 예제.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Deployment</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\nlabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\nspec<span class=\"token punctuation\">:</span>\nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\n    spec<span class=\"token punctuation\">:</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nasa1415<span class=\"token operator\">/</span>devops<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n        name<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">app</span>\n        ports<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>service.yaml 예제.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">svc</span>\nspec<span class=\"token punctuation\">:</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">NodePort</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span>\n    nodePort<span class=\"token punctuation\">:</span> <span class=\"token number\">31111</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span>deploy</code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>이제 만들어둔 App에서 SYNC를 누르게 되면</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821383-c0f36780-0d64-11eb-8691-2538c3b7bc85.png\" alt=\"스크린샷, 2020-10-13 14-59-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 배포파일을 읽어와 노드에 배포합니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95823833-4547e980-0d69-11eb-842b-ea9e04341594.png\" alt=\"스크린샷, 2020-10-13 15-32-08\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 Rancher에서의 로그를 보면 다음과 같이 Argo-cd에서의 배포 로그를 확인가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95823941-72949780-0d69-11eb-8e65-d016680a0a4e.png\" alt=\"스크린샷, 2020-10-13 15-33-22\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>추가적으로 Rancher에서 확인해보면 배포가 정상적이고 서비스 중임을 확인 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95824040-9b1c9180-0d69-11eb-9c5b-4b09b626218a.png\" alt=\"스크린샷, 2020-10-13 15-34-33\"></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Argo-CD를 설치하고 툴을 통해서 배포하는 법을 알아봤습니다.<br>\n직접 설치한 것이 아니라 Rancher의 기능을 이용해서 다른 불필요한 트러블 슈팅을 줄여서 그나마 짧게 끝난 것 같습니다.<br>\n이렇게 메니페스트 파일을 통해서 자동으로 컨테이너를 올리고 오케스트레이션 하는 것들을 직접해보니<br>\n이제서야 DevOps 엔지니어에 대해서 쌀알 만큼 알아가고 있는 것 같은 느낌입니다. </p>\n<p>다음 포스트에는 실제 취약점 검사 툴 들을 올리고 서비스, DB 연동들까지 진행하겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\">✔ 환경구성</a></li>\n<li>\n<p><a href=\"#-rancher-argo-cd-plugin%EC%9D%84-%EC%84%A4%EC%B9%98\">✔ Rancher Argo-CD Plugin을 설치</a></p>\n<ul>\n<li><a href=\"#%EC%9E%91%EC%97%85-%EC%8B%9C%EC%9E%91-%EC%A0%84-%EC%A0%95%EB%B3%B4\">작업 시작 전 정보!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source인 Gitops기반의 Argo-CD 를 이용한 배포에 대해서 포스트했습니다 앞서 다룬 포스트에서 기본적인 환경구성은 모두 완료되었고 이제부터 진정한 파이프라인 구성입니다!! 사용 할 툴을 다음과 같습니다.   Rancher (GKE) Argo-cd ✔ 환경구성 환경구성의 경우 이전 포스트에서 모두 완료했습니다!! 다만 클러스터 내부에 직접 들어가 Argo-CD를 설치하는게 아닌 Rancher의 카탈로그를 사용해서 자동 Helm 배포를 진행합니다 ✔ Rancher Argo-CD Plugin을 설치 구축중인 파이프라인의 전제적인 Service …","frontmatter":{"date":"August 07, 2021","title":"[DEVOPS] - Argo-CD를 이용한 배포 자동화","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-argocd/"}},"next":{"id":"3530a618-aa45-5512-8771-62a86a0ea7dc","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다<br>\n이전 포스트와 다른점은 이전에는 이미 구성되어있는 클러스터를 사용했다면 이번 포스트에서는 GKE를 사용했다는 점입니다!!</p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>docker, Rancher (GKE)</li>\n<li>k8s</li>\n</ul>\n<hr>\n<h2 id=\"-환경구성\" style=\"position:relative;\"><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\" 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 환경구성</h2>\n<p>환경구성은 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95834575-1c7b2080-0d78-11eb-8aad-5a7ea4701c4a.png\" alt=\"스크린샷, 2020-10-13 17-18-15\"></p>\n<p>Rancher : Rancher master가 띄워져있는 Cluster 관리 서버<br>\nJenkins : 이전 포스트에서 설정한 CI 작동 서버<br>\ngke : GKE 클러스터 노드</p>\n<br/>\n<hr>\n<h3 id=\"gke-service---rancher-서비스-구축\" style=\"position:relative;\"><a href=\"#gke-service---rancher-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95\" aria-label=\"gke service   rancher 서비스 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GKE SERVICE - Rancher 서비스 구축.</h3>\n<ul>\n<li>Rancher로 클러스터를 생성하는 방법은 두가지가 있습니다.</li>\n<li>이번 포스트의 경우 GCP 무료 계정이다보니 Rancher로 클러스터를 생성하기에 어려움이 있습니다.<br>\n할당량 제한…ㅠㅠ 그래서 최소한으로 구축한 클러스터를 연동하겠습니다.</li>\n</ul>\n<br/>\n<h3 id=\"1-rancher로-gke-생성\" style=\"position:relative;\"><a href=\"#1-rancher%EB%A1%9C-gke-%EC%83%9D%EC%84%B1\" aria-label=\"1 rancher로 gke 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Rancher로 GKE 생성</h3>\n<ul>\n<li>\n<p>GCP -> GKE에서 클러스터를 생성합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95825037-3d894480-0d6b-11eb-954b-0e5212ac4db8.png\" alt=\"스크린샷, 2020-10-13 15-46-04\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 기본사양으로 GKE 클러스터를 구성했습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95826118-cfde1800-0d6c-11eb-8bc6-40113f29bdb6.png\" alt=\"스크린샷, 2020-10-13 15-57-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 생성한 노드 정보를 Cloud Shell에서 확인 가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95826246-f9973f00-0d6c-11eb-9661-14600ea38666.png\" alt=\"스크린샷, 2020-10-13 15-58-43\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>이제 Rancher 인스턴스와 연동해보겠습니다.</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Rancher 대쉬보드에서 Cluster -> ADD Cluster 선택!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95835703-88aa5400-0d79-11eb-82ed-f61e8d0dea45.png\" alt=\"스크린샷, 2020-10-13 17-28-35\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>저희가 추가 할 것은 GKE이기 떄문에 GKE를 선택</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95838368-a6c58380-0d7c-11eb-8344-e9a58e49bc86.png\" alt=\"스크린샷, 2020-10-13 17-29-41\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 다음과 같은 설정 탭이 나옵니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95838892-4a169880-0d7d-11eb-84fe-2a8387557a44.png\" alt=\"스크린샷, 2020-10-13 17-55-29\"></p>\n<p>해당 설정파일에서 이름은 상관없고, Service Account만 신경쓰면 됩니다.<br>\nService Account를 등록하기 위해서 아래 작업을 진행합니다.</p>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>GCP에서 JSON파일 형태의 인증키를 생성해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836229-2867e200-0d7a-11eb-9ce2-7f1371e9fe11.png\" alt=\"스크린샷, 2020-10-13 17-33-04\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같은 식의 JSON 파일 형식의 키가 LOCAL에 다운받아집니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836300-3f0e3900-0d7a-11eb-9b66-7b7e505ad580.png\" alt=\"스크린샷, 2020-10-13 17-33-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>해당 파일을 업로드 해주게 되면 아래와 같이 클러스터 환경 설정 탭이 나옵니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836441-66fd9c80-0d7a-11eb-807e-66cc75f0095a.png\" alt=\"스크린샷, 2020-10-13 17-34-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>세부 설정들을 설정 후 CREATE를 누르면 아래와 같이 클러스터가 생성 됩니다.!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95839731-50f1db00-0d7e-11eb-9562-b5e45eefe3e7.png\" alt=\"스크린샷, 2020-10-13 18-02-50\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"2-구성되어있는-gke-연동\" style=\"position:relative;\"><a href=\"#2-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4%EC%9E%88%EB%8A%94-gke-%EC%97%B0%EB%8F%99\" aria-label=\"2 구성되어있는 gke 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 구성되어있는 GKE 연동</h3>\n<br/>\n<ul>\n<li>\n<p>이미 생성되어 있는 GKE 클러스터를 추가해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95843414-a4febe80-0d82-11eb-879b-6850a7bf361c.png\" alt=\"스크린샷, 2020-10-13 17-42-11\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>위 메뉴로 들어가 기본설정을 마치면 아래와 같이 노드로 연결하는 명령어가 나옵니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95843898-353d0380-0d83-11eb-8f8d-a5f020473aca.png\" alt=\"스크린샷, 2020-10-13 18-34-37\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>GCLOU Shell에서 해당 명령어를 입력!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>nasa1515<span class=\"token punctuation\">)</span>$ curl <span class=\"token operator\">--</span>insecure <span class=\"token operator\">-</span><span class=\"token class-name\">sfL</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.79</span><span class=\"token number\">.179</span><span class=\"token operator\">/</span>v3<span class=\"token operator\">/</span>import<span class=\"token operator\">/</span>qw6zts2kzgshvwr5bl62bxn5vpghcdmxwmdskp5xgmfjhc6596v7bx<span class=\"token punctuation\">.</span>yaml <span class=\"token operator\">|</span> kubectl apply <span class=\"token operator\">-</span>f <span class=\"token operator\">-</span>\nclusterrole<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>proxy<span class=\"token operator\">-</span>clusterrole<span class=\"token operator\">-</span>kubeapiserver created\nclusterrolebinding<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>proxy<span class=\"token operator\">-</span>role<span class=\"token operator\">-</span>binding<span class=\"token operator\">-</span>kubernetes<span class=\"token operator\">-</span>master created\n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>system created\nserviceaccount<span class=\"token operator\">/</span>cattle created\nclusterrolebinding<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>admin<span class=\"token operator\">-</span>binding created\nsecret<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>credentials<span class=\"token operator\">-</span>61fa6cb created\nclusterrole<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>admin created\ndeployment<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>cluster<span class=\"token operator\">-</span>agent created</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>잠시 API가 연동되는 시간을 기다리면 아래와 같이 클러스터가 연동 됩니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95844827-54886080-0d84-11eb-8106-b48eccb53ef7.png\" alt=\"스크린샷, 2020-10-13 18-45-48\"></p>\n</li>\n</ul>\n<br/>\n<p><code class=\"language-text\">이제 기본적인 Rancher 클러스터 환경 구성이 완료되었습니다.</code></p>\n<br/>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Rancher를 사용해서 GKE k8s 클러스터를 생성하는 법을 알아봤습니다.<br>\n쓰면 쓸수록 멀티클라우드의 쿠버네티스 환경에 아주 적합한 툴인 것을 느끼고 있으나<br>\n한국에서는 많이 사용하지 않는 이유를 잘 모르겠습니다.<br>\n해외 스택을 들어가보면 SPINNAKER vs Rancher의 구도로 사람들이 많이 사용하고 있는데<br>\n한국에서는 SPINNAKER가 주를 이루고 있네요…아쉽습니다   </p>\n<p>다음 포스트에는 Rancher 위에 Argo-CD를 올려서 배포를 자동화 해봅시다!</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\">✔ 환경구성</a></p>\n<ul>\n<li><a href=\"#gke-service---rancher-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95\">GKE SERVICE - Rancher 서비스 구축.</a></li>\n<li><a href=\"#1-rancher%EB%A1%9C-gke-%EC%83%9D%EC%84%B1\">1. Rancher로 GKE 생성</a></li>\n<li><a href=\"#2-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4%EC%9E%88%EB%8A%94-gke-%EC%97%B0%EB%8F%99\">2. 구성되어있는 GKE 연동</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 06, 2021","title":"[DEVOPS] - GKE Cluster를 Rancher에 연동하기","categories":"DevOps GCP","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-rancher-gke/"}},"prev":{"id":"4c31f4f6-beeb-5136-85e5-ea2c0b6b62e5","html":"<p>머리말  </p>\n<p>가급적이면 모든 업무를 코드화 하고 싶었습니다.<br>\n그러기위해서 가장 기초가 되어야 하는 부분은 원격접속이라고 생각해서 포스팅합니다.</p>\n<hr>\n<h2 id=\"-google-cloud-sdk를-설치\" style=\"position:relative;\"><a href=\"#-google-cloud-sdk%EB%A5%BC-%EC%84%A4%EC%B9%98\" aria-label=\" google cloud sdk를 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Google Cloud SDK를 설치</h2>\n<p><a href=\"https://cloud.google.com/sdk/docs/downloads-apt-get?hl=ko\">공식 DOC</a></p>\n<br/>\n<p>Google Cloud SDK 설치 : 이 포스트는 <code class=\"language-text\">Ubuntu 18.04 OS</code> 환경에서 진행하였습니다</p>\n<br/>\n<p>패키지 소스로 Cloud SDK 배포 URI를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">echo <span class=\"token string\">\"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\"</span> <span class=\"token operator\">|</span> sudo tee <span class=\"token operator\">-</span>a <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>google<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>sdk<span class=\"token punctuation\">.</span>list</code></pre></div>\n<br/>\n<br/>\n<p>설치 전 apt-transport-https 의 설치 유무를 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install apt<span class=\"token operator\">-</span>transport<span class=\"token operator\">-</span>https ca<span class=\"token operator\">-</span>certificates gnupg\n패키지 목록을 읽는 중입니다<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span> 완료\n의존성 트리를 만드는 중입니다       \n상태 정보를 읽는 중입니다<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span> 완료\n패키지 ca<span class=\"token operator\">-</span>certificates는 이미 최신 버전입니다 <span class=\"token punctuation\">(</span><span class=\"token number\">20190110</span><span class=\"token operator\">~</span><span class=\"token number\">18.04</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n패키지 gnupg는 이미 최신 버전입니다 <span class=\"token punctuation\">(</span><span class=\"token number\">2.2</span><span class=\"token number\">.4</span><span class=\"token operator\">-</span>1ubuntu1<span class=\"token punctuation\">.</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\ngnupg 패키지는 수동설치로 지정합니다<span class=\"token punctuation\">.</span>\n패키지 apt<span class=\"token operator\">-</span>transport<span class=\"token operator\">-</span>https는 이미 최신 버전입니다 <span class=\"token punctuation\">(</span><span class=\"token number\">1.6</span><span class=\"token punctuation\">.</span>12ubuntu0<span class=\"token punctuation\">.</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n다음 패키지가 자동으로 설치되었지만 더 이상 필요하지 않습니다<span class=\"token punctuation\">:</span>\namd64<span class=\"token operator\">-</span>microcode fonts<span class=\"token operator\">-</span>lato intel<span class=\"token operator\">-</span>microcode iucode<span class=\"token operator\">-</span>tool javascript<span class=\"token operator\">-</span>common libfwup1libgmp<span class=\"token operator\">-</span>dev\nlibgmpxx4ldbl libgsoap<span class=\"token operator\">-</span><span class=\"token number\">2.8</span><span class=\"token number\">.60</span> libjs<span class=\"token operator\">-</span>jquery libllvm9 libvncserver1linux<span class=\"token operator\">-</span>headers<span class=\"token operator\">-</span>generic<span class=\"token operator\">-</span>hwe<span class=\"token operator\">-</span><span class=\"token number\">18.04</span>\nlinux<span class=\"token operator\">-</span>hwe<span class=\"token operator\">-</span><span class=\"token number\">5.4</span><span class=\"token operator\">-</span>headers<span class=\"token operator\">-</span><span class=\"token number\">5.4</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">42</span> ruby<span class=\"token operator\">-</span>did<span class=\"token operator\">-</span>you<span class=\"token operator\">-</span>mean ruby<span class=\"token operator\">-</span>minitest ruby<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>telnetruby<span class=\"token operator\">-</span>power<span class=\"token operator\">-</span>assert\nruby2<span class=\"token punctuation\">.</span><span class=\"token number\">5</span><span class=\"token operator\">-</span>doc rubygems<span class=\"token operator\">-</span>integration thermald ubuntu<span class=\"token operator\">-</span>fan\nUse 'sudo apt autoremove' to <span class=\"token keyword\">remove</span> them<span class=\"token punctuation\">.</span>\n<span class=\"token number\">0</span>개 업그레이드<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>개 새로 설치<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>개 제거 및 <span class=\"token number\">34</span>개 업그레이드 안 함<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>Google Cloud 공개 키를 가져옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">curl</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>packages<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>doc<span class=\"token operator\">/</span>apt<span class=\"token operator\">-</span>key<span class=\"token punctuation\">.</span>gpg <span class=\"token operator\">|</span> sudo apt<span class=\"token operator\">-</span>key <span class=\"token operator\">--</span>keyring<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>keyrings<span class=\"token operator\">/</span>cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>gpg <span class=\"token keyword\">add</span> <span class=\"token operator\">-</span>\nroot@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># <span class=\"token class-name\">curl</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>packages<span class=\"token punctuation\">.</span>cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>doc<span class=\"token operator\">/</span>apt<span class=\"token operator\">-</span>key<span class=\"token punctuation\">.</span>gpg <span class=\"token operator\">|</span> sudoapt<span class=\"token operator\">-</span>key <span class=\"token operator\">--</span>keyring <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>keyrings<span class=\"token operator\">/</span>cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>gpg <span class=\"token keyword\">add</span> <span class=\"token operator\">-</span>\n <span class=\"token operator\">%</span> Total    <span class=\"token operator\">%</span> Received <span class=\"token operator\">%</span> Xferd  Average Speed   Time    Time     Time  Current\n                                Dload  Upload   Total   Spent    Left  Speed\n<span class=\"token number\">100</span>   <span class=\"token number\">653</span>  <span class=\"token number\">100</span>   <span class=\"token number\">653</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>   <span class=\"token number\">1653</span>      <span class=\"token number\">0</span> <span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span> <span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span> <span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span><span class=\"token punctuation\">:</span><span class=\"token operator\">--</span>  <span class=\"token number\">1653</span>\nOK</code></pre></div>\n<br/>\n<br/>\n<p>Cloud SDK를 업데이트하고 설치합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update <span class=\"token operator\">&amp;&amp;</span> sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install google<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>sdk</code></pre></div>\n<br/>\n<br/>\n<p>gcloud init 명령을 통해 사용합니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># gcloud init\nWelcome<span class=\"token operator\">!</span> This command will take you through the configuration of gcloud<span class=\"token punctuation\">.</span>\nYour current configuration has been <span class=\"token keyword\">set</span> to<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">]</span>\nYou can skip diagnostics next time <span class=\"token keyword\">by</span> <span class=\"token keyword\">using</span> the <span class=\"token class-name\">following</span> flag<span class=\"token punctuation\">:</span>\ngcloud init <span class=\"token operator\">--</span>skip<span class=\"token operator\">-</span>diagnostics\nNetwork diagnostic detects <span class=\"token keyword\">and</span> fixes local network connection issues<span class=\"token punctuation\">.</span>\nChecking network connection<span class=\"token range operator\">..</span>done<span class=\"token punctuation\">.</span>                                                                 \nReachability Check passed<span class=\"token punctuation\">.</span>\nNetwork <span class=\"token return-type class-name\">diagnostic</span> passed <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token class-name\">checks</span> passed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nYou <span class=\"token class-name\">must</span> log <span class=\"token keyword\">in</span> to <span class=\"token keyword\">continue</span><span class=\"token punctuation\">.</span> Would you like <span class=\"token class-name\">to</span> log <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>Y<span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">?</span>  Y\n<span class=\"token range operator\">..</span><span class=\"token range operator\">..</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>중략<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<br/>\n<p>그럼 특정 계정 접속을 선택할 수 있는데 알맞게 선택합니다  </p>\n<p>계정 선택!  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96085929-7c9acf80-0efc-11eb-9f5d-0e592ecf1ba9.png\" alt=\"스크린샷, 2020-10-15 15-38-30\"></p>\n<br/>\n<br/>\n<p><code class=\"language-text\">엑세스 권환 확인</code></p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96086021-9b00cb00-0efc-11eb-95fa-10e2dea32d93.png\" alt=\"스크린샷, 2020-10-15 15-39-21\"><br>\n<code class=\"language-text\">모두 허용해주시구요</code></p>\n<br/>\n<br/>\n<p>gcloud init 명령어를 통해 기본적인 설정을 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># gcloud init\nWelcome<span class=\"token operator\">!</span> This command will take you through the configuration of gcloud<span class=\"token punctuation\">.</span>\nSettings <span class=\"token keyword\">from</span> your current configuration <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">]</span> are<span class=\"token punctuation\">:</span>\ncompute<span class=\"token punctuation\">:</span>\nregion<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span><span class=\"token class-name\">northeast3</span>\nzone<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast3<span class=\"token operator\">-</span><span class=\"token class-name\">b</span>\ncore<span class=\"token punctuation\">:</span>\naccount<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> 개인정보 암호화<span class=\"token operator\">!</span>\ndisable_usage_reporting<span class=\"token punctuation\">:</span> 'True'\nproject<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span> 개인정보 암호화<span class=\"token operator\">!</span>\nPick configuration <span class=\"token class-name\">to</span> use<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Re<span class=\"token operator\">-</span>initialize <span class=\"token keyword\">this</span> configuration <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">]</span> with <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">settings</span> \n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> Create a <span class=\"token keyword\">new</span> configuration\nPlease enter your <span class=\"token class-name\">numeric</span> choice<span class=\"token punctuation\">:</span>  <span class=\"token number\">1</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 Cloud Shell로 ssh 대화형 접속이 가능해집니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">root@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># gcloud alpha cloud<span class=\"token operator\">-</span>shell ssh\n'Automatic authentication with GCP <span class=\"token class-name\">CLI</span> tools <span class=\"token keyword\">in</span> Cloud Shell <span class=\"token keyword\">is</span> <span class=\"token class-name\">disabled<span class=\"token punctuation\">.</span> To</span> enable<span class=\"token punctuation\">,</span>please rerun command with `<span class=\"token operator\">--</span>authorize<span class=\"token operator\">-</span>session` flag<span class=\"token punctuation\">.</span>\nWARNING<span class=\"token punctuation\">:</span> The <span class=\"token keyword\">private</span> SSH key file <span class=\"token keyword\">for</span> gcloud does <span class=\"token keyword\">not</span> exist<span class=\"token punctuation\">.</span>\nWARNING<span class=\"token punctuation\">:</span> The <span class=\"token keyword\">public</span> SSH key file <span class=\"token keyword\">for</span> gcloud does <span class=\"token keyword\">not</span> exist<span class=\"token punctuation\">.</span>\nWARNING<span class=\"token punctuation\">:</span> You <span class=\"token keyword\">do</span> <span class=\"token keyword\">not</span> have an SSH key <span class=\"token keyword\">for</span> gcloud<span class=\"token punctuation\">.</span>\nWARNING<span class=\"token punctuation\">:</span> SSH keygen will be executed to generate a key<span class=\"token punctuation\">.</span>\nGenerating <span class=\"token keyword\">public</span><span class=\"token operator\">/</span><span class=\"token keyword\">private</span> rsa key pair<span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>중략<span class=\"token punctuation\">)</span>\nYour Cloud <span class=\"token class-name\">Platform</span> project <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span> session <span class=\"token keyword\">is</span> <span class=\"token keyword\">set</span> to cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">.</span>\nUse “gcloud config <span class=\"token keyword\">set</span> project <span class=\"token punctuation\">[</span>PROJECT_ID<span class=\"token punctuation\">]</span>” to change to a different project<span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ </code></pre></div>\n<br/>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이제 3대 Public Cloud 중 하나인 GCP에 대한 개념을 어느 정도 잡고 있는 것 같습니다.<br>\n이번 포스트에서는 아직 운영전의 사전 설정 단계라 공식문서에도 친절하게 나와있는 부분이지만 실습과 이론은 다르다는걸 알았습니다.<br>\n공식문서에 모두 제시되어있지만 똑같이 따라한다고 해서 전부 되는건 아니였죠…  </p>\n<p>다음 포스트에는 DevSecOPs CI/CD 파이프 라인을 적용해보고 정리하는 시간을 갖도록 하겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-google-cloud-sdk%EB%A5%BC-%EC%84%A4%EC%B9%98\">✔ Google Cloud SDK를 설치</a></p>\n<ul>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 07, 2021","title":"[GCP] - GCP Cloud shell 원격 접속 하기","categories":"GCP","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/gcp-cloudshell/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/devops-argocd/","nextSlug":"/devops-rancher-gke/","prevSlug":"/gcp-cloudshell/"}},"staticQueryHashes":["1073350324","2938748437"]}