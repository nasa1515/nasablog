{"componentChunkName":"component---src-templates-blog-template-js","path":"/linux-shellscript-intervalRegula/","result":{"data":{"cur":{"id":"5de3edf0-d3d2-54d0-8c0a-ff6001426eaa","html":"<p>머리말  </p>\n<p>이전 포스트에서는 sed,awk등 텍스트를 편집하는 명령어들에 대해서 알아보았습니다.<br>\n이번에는 쉘스크립트를 작성할때 가장 기초가 되는 정규표현식에 대해서 포스트했습니다.  </p>\n<hr>\n<h2 id=\"-정규표현식\" style=\"position:relative;\"><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\" 정규표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 정규표현식</h2>\n<ul>\n<li>정규 표현식은 <code class=\"language-text\">데이터 검색</code>, <code class=\"language-text\">복잡한 패턴 매칭</code>을 도와주는 특별한 문자입니다  </li>\n<li>정규표현식(regular expression)은 줄여서 <code class=\"language-text\">'regexp'</code> 또는 <code class=\"language-text\">'regex'</code> 라고도 합니다.  </li>\n<li>정규 표현식은 리눅스 뿐만 아니라 <code class=\"language-text\">유닉스, SQL, R, Python</code> 등 에서도 사용할 수 있습니다.  </li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90595346-a2229a00-e227-11ea-995d-990cf210fd93.png\" alt=\"스크린샷, 2020-08-19 14-23-56\"></p>\n<br/>\n<hr>\n<h2 id=\"-정규표현식-표현방법\" style=\"position:relative;\"><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95\" aria-label=\" 정규표현식 표현방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 정규표현식 표현방법</h2>\n<ul>\n<li>정규표현식은 표준인 <code class=\"language-text\">POSIX의 정규표현식</code>과 POSIX 정규표현식에서 확장된 <code class=\"language-text\">Perl방식의 PCRE</code>가 대표적입니다  </li>\n<li>이외에도 수많은 정규표현식이 존재하지만 약간의 차이점이 있을뿐 대부분 비슷합니다.  </li>\n<li>정규표현식에서 사용하는 기호를 <code class=\"language-text\">Meta문자</code>라고 합니다.</li>\n<li>\n<p>Meta문자란 표현식 내부에서 특정한 의미를 갖는 문자를 말하며, 공통적인 기본 Meta문자의 종류로는 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90595597-2bd26780-e228-11ea-829f-01e7003b4d5e.png\" alt=\"스크린샷, 2020-08-19 14-27-48\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Meta 문자중에 독특한 성질을 지니고 있는 <code class=\"language-text\">문자클래스'[ ]'</code>라는 문자가 있습니다.<br>\n문자클래스는 그 내부에 해당하는 문자열의 범위 중 한 문자만 선택한다는 의미이며,<br>\n문자클래스 내부에서는 Meta문자를 사용할 수 없거나 의미가 다르게 사용됩니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90595694-5e7c6000-e228-11ea-8a14-ff254a3eb351.png\" alt=\"스크린샷, 2020-08-19 14-29-16\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><code class=\"language-text\">POSIX에서만 사용</code>하는 문자클래스가 있는데 단축키처럼 편리하게 사용할 수 있습니다.<br>\n대표적인 POSIX 문자클래스는 다음과 같으며 <code class=\"language-text\">대괄호'[ ]'</code> 가 붙어있는 모양 자체가 표현식이므로<br>\n실제로 문자클래스로 사용할 때에는 대괄호를 씌워서 사용해야만 정상적인 결과를 얻을 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90595815-9f747480-e228-11ea-81bd-157acfc5010d.png\" alt=\"스크린샷, 2020-08-19 14-30-58\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><code class=\"language-text\">Flag</code>의 종류<br>\n자주 사용하는 Flag는 밑의 3종류가 있으며 Flag를 사용을 하지 않을 수도 있습니다.<br>\n만약 Flag를 설정 하지 않을 경우에는 문자열 내에서 검색대상이 많더라도 한번만 찾고 끝나게 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90595939-dd719880-e228-11ea-984d-1da56b69cb66.png\" alt=\"스크린샷, 2020-08-19 14-32-47\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-정규표현식-사용-예제\" style=\"position:relative;\"><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-label=\" 정규표현식 사용 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 정규표현식 사용 예제</h2>\n<ul>\n<li>\n<p>우선 실습을 위해서 아래와 같은 텍스트 파일을 만들었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat nasa1515<span class=\"token punctuation\">.</span>txt \ndrum\nphotography\ndata science\ngreenplum\npython\nR\nbook\nmovie\ndancing\nsinging\nmilk\nenglish\ngangnam style\n<span class=\"token keyword\">new</span> face\nsoccer\npingpong\nsleeping\nmartial art\njogging\nblogging\napple\ngrape\nbanana\ntomato\nbibimbab\nkimchi\n@email\n123_abc_d4e5\nxyz123_abc_d4e5\n123_abc_d4e5<span class=\"token punctuation\">.</span>xyz\nxyz123_abc_d4e5<span class=\"token punctuation\">.</span>xyz</code></pre></div>\n</li>\n</ul>\n<br/>\n<h3 id=\"기본-정규-표현식을-실습\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%EC%8B%A4%EC%8A%B5\" aria-label=\"기본 정규 표현식을 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 정규 표현식을 실습</h3>\n<p>정규표현식은 <code class=\"language-text\">큰 따옴표(\" \")</code>안에 매칭할 문자와 함께 사용합니다.   </p>\n<ol>\n<li>\n<p>문자열의 처음 시작 부분 매칭: <code class=\"language-text\">^</code> , <code class=\"language-text\">-n</code> 은 행번호를 출력하라는 뜻입니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"^m\"</span> nasa1515   # m으로 시작하는 텍스트\n<span class=\"token number\">8</span><span class=\"token punctuation\">:</span>movie\n<span class=\"token number\">11</span><span class=\"token punctuation\">:</span>milk\n<span class=\"token number\">18</span><span class=\"token punctuation\">:</span>martial art </code></pre></div>\n<br/>\n</li>\n<li>\n<p>문자열의 끝 부분 매칭: <code class=\"language-text\">$</code>  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"m$\"</span> nasa1515 \n<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>drum\n<span class=\"token number\">4</span><span class=\"token punctuation\">:</span>greenplum</code></pre></div>\n<br/>\n</li>\n<li>\n<p>점의 개수만큼 아무 문자나 대체: <code class=\"language-text\">...</code>  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># m 문자 뒤에 아무 문자 3개 이상이 존재하는 텍스트 검색</span>\n\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"m...\"</span> nasa1515 \n<span class=\"token number\">8</span><span class=\"token punctuation\">:</span>movie\n<span class=\"token number\">11</span><span class=\"token punctuation\">:</span>milk\n<span class=\"token number\">13</span><span class=\"token punctuation\">:</span>gangnam style\n<span class=\"token number\">18</span><span class=\"token punctuation\">:</span>martial art\n<span class=\"token number\">24</span><span class=\"token punctuation\">:</span>tomato\n<span class=\"token number\">25</span><span class=\"token punctuation\">:</span>bibimbab\n<span class=\"token number\">26</span><span class=\"token punctuation\">:</span>kimchi\n<span class=\"token number\">27</span><span class=\"token punctuation\">:</span>@email</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># m 문자 뒤에 아무 문자 5개 이상이 존재하는 텍스트 검색</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"m.....\"</span> nasa1515 \n<span class=\"token number\">13</span><span class=\"token punctuation\">:</span>gangnam style\n<span class=\"token number\">18</span><span class=\"token punctuation\">:</span>martial art</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># m 문자 앞에 2개 이상 + 뒤에 3개 이상이 존재하는 텍스트 검색</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"..m...\"</span> nasa1515 \n<span class=\"token number\">13</span><span class=\"token punctuation\">:</span>gangnam style\n<span class=\"token number\">24</span><span class=\"token punctuation\">:</span>tomato\n<span class=\"token number\">25</span><span class=\"token punctuation\">:</span>bibimbab\n<span class=\"token number\">26</span><span class=\"token punctuation\">:</span>kimchi\n<span class=\"token number\">27</span><span class=\"token punctuation\">:</span>@email</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># m 문자 앞에 5개 이상이 존재하는 텍스트 검색</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"....m\"</span> nasa1515 \n<span class=\"token number\">4</span><span class=\"token punctuation\">:</span>greenplum\n<span class=\"token number\">13</span><span class=\"token punctuation\">:</span>gangnam style\n<span class=\"token number\">25</span><span class=\"token punctuation\">:</span>bibimbab</code></pre></div>\n<br/>\n</li>\n<li>\n<p><code class=\"language-text\">*</code> 부호 앞의 문자와 여러개 매칭 : <code class=\"language-text\">*</code>  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"app*\"</span> nasa1515 \n<span class=\"token number\">2</span><span class=\"token punctuation\">:</span>photography\n<span class=\"token number\">21</span><span class=\"token punctuation\">:</span>apple\n<span class=\"token number\">22</span><span class=\"token punctuation\">:</span>grape\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>n <span class=\"token string\">\"^app\"</span> nasa1515 \n<span class=\"token number\">21</span><span class=\"token punctuation\">:</span>apple</code></pre></div>\n<br/>\n</li>\n<li>\n<p>특수 문자와 매칭: <code class=\"language-text\">\\</code>  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"\\@\"</span> nasa1515 \n@email</code></pre></div>\n<br/>\n</li>\n<li>\n<p>a나 b로 시작하는 모든 행을 찾아서 출력 : <code class=\"language-text\">^[ab]</code> </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"^[ab]\"</span> nasa1515 \nbook\nblogging\napple\nbanana\nbibimbab</code></pre></div>\n<br/>\n</li>\n<li>\n<p>0~9 사이 숫자로 시작하는 단어 :  <code class=\"language-text\">^[0-9]</code> </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"^[0-9]\"</span> nasa1515 \n123_abc_d4e5\n123_abc_d4e5<span class=\"token punctuation\">.</span>xyz</code></pre></div>\n<br/>\n</li>\n<li>\n<p>x~z 사이 알파벳으로 끝나는 단어 : <code class=\"language-text\">[x-z]$</code> </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"[x-z]$\"</span> nasa1515 \nphotography\n123_abc_d4e5<span class=\"token punctuation\">.</span>xyz\nxyz123_abc_d4e5<span class=\"token punctuation\">.</span>xyz</code></pre></div>\n</li>\n</ol>\n<br/>\n<hr>\n<h3 id=\"간격-정규-표현식-실습\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EA%B2%A9-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%8B%A4%EC%8A%B5\" aria-label=\"간격 정규 표현식 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간격 정규 표현식 실습</h3>\n<p>간격 정규 표현식은 문자열 안에서 특정 문자가 <code class=\"language-text\">몇 번 출현</code> 했는지를 가지고 패턴 매칭할 때 사용합니다.  </p>\n<ol>\n<li>\n<p>앞의 문자와 ‘n’번 정확하게 매칭: <code class=\"language-text\">{n}</code><br>\n<code class=\"language-text\">grep -E \"character\"\\{n}</code> 의 형식으로 사용합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># 기존 파일에서의 g 문자가 포함된 내역은 다음과 같다.</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"g\"</span> nasa1515 \nphotography\ngreenplum\ndancing\nsinging\nenglish\ngangnam style\npingpong\nsleeping\njogging\nblogging\ngrape</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># 이번에는 g가 두번 반복되어있는 문자를 찾아봤다.</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ \nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token operator\">-</span>E <span class=\"token string\">\"g\"</span>\\<span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span> nasa1515 \njogging\nblogging</code></pre></div>\n</li>\n</ol>\n<br/>\n<hr>\n<h3 id=\"확장-정규-표현식-실습\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9E%A5-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%8B%A4%EC%8A%B5\" aria-label=\"확장 정규 표현식 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확장 정규 표현식 실습</h3>\n<p>확장 정규 표현식은 <code class=\"language-text\">한 개 이상의 표현식</code>을 <code class=\"language-text\">결합</code>하여 사용할 수 있게 해줍니다.  </p>\n<ol>\n<li>\n<p><code class=\"language-text\">\\+</code>앞의 문자가 한번 이상 출현한 문자열과 매칭: <code class=\"language-text\">\\+</code>  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># 해당 파일에는 k 문자가 포함된 문자열은 다음과 같다.</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"k\"</span> nasa1515 \nbook\nmilk\nkimchi</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># 문자 </span><span class=\"token string character\">'k'</span>의 앞에 <span class=\"token string character\">'o'</span>가 있는 문자열을 선별하고 싶은 경우 <span class=\"token string\">\"o\\+k\"</span> 정규표현식 사용\n\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ grep <span class=\"token string\">\"o\\+k\"</span> nasa1515 \nbook</code></pre></div>\n</li>\n</ol>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\">✔ 정규표현식</a></li>\n<li><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95\">✌ 정규표현식 표현방법</a></li>\n<li>\n<p><a href=\"#-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C\">👍 정규표현식 사용 예제</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%EC%8B%A4%EC%8A%B5\">기본 정규 표현식을 실습</a></li>\n<li><a href=\"#%EA%B0%84%EA%B2%A9-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%8B%A4%EC%8A%B5\">간격 정규 표현식 실습</a></li>\n<li><a href=\"#%ED%99%95%EC%9E%A5-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%8B%A4%EC%8A%B5\">확장 정규 표현식 실습</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"머리말   이전 포스트에서는 sed,awk등 텍스트를 편집하는 명령어들에 대해서 알아보았습니다. 이번에는 쉘스크립트를 작성할때 가장 기초가 되는 정규표현식에 대해서 포스트했습니다.   ✔ 정규표현식 정규 표현식은 , 을 도와주는 특별한 문자입니다   정규표현식(regular expression)은 줄여서  또는  라고도 합니다.   정규 표현식은 리눅스 뿐만 아니라  등 에서도 사용할 수 있습니다.   스크린샷, 2020-08-19 14-23-56 ✌ 정규표현식 표현방법 정규표현식은 표준인 과 POSIX 정규표현식에서 확장된 가 대표적입니다   이외에도 수많은 정규표현식이 존재하지만 약간의 차이점이 있을뿐 대부분 비슷…","frontmatter":{"date":"June 28, 2021","title":"[LINUX] - Shell Script - 정규표현식","categories":"LINUX","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/linux-shellscript-intervalRegula/"}},"next":{"id":"2672455e-760f-5f0e-9c81-1c0d256f9b99","html":"<p>머리말 </p>\n<p>이전 포스트에서는 스크립트나 리눅스를 운영하면서 자주 사용하게 되는 sed 명령어에 대해서 포스트 했습니다.<br>\n이번 포스트에서는 동일하게 자주 사용되는 awk 에 대해서 설명해보았습니다.  </p>\n<hr>\n<h2 id=\"-awk-\" style=\"position:relative;\"><a href=\"#-awk-\" aria-label=\" awk  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ awk ?</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">AWK</code>란?  </p>\n<p>awk는 텍스트 파일을 처리하는 라인 지향 프로그램 입니다.<br>\n아래 이미지와 같이 필드와 레코드로 구분하여 데이터를 처리하게 되는데 구분자를 사용하여 표와 같은 모양이 됩니다.</p>\n<ul>\n<li><code class=\"language-text\">레코드 구분자</code> : 엔터(개행)</li>\n<li><code class=\"language-text\">필드 구분자</code> : 탭, 스페이스</li>\n</ul>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FubTEw%2FbtqFGypLfhQ%2FTpRPJkzMkxQYrZEard652K%2Fimg.png\"></p>\n</li>\n<li>데이터를 조작하고 리포트를 생성하기 위해 사용하는 언어입니다.</li>\n<li>간단한 연산자를 명령라인에서 사용할 수 있으며, 큰 프로그램을 위해 사용될 수 있습니다.<br>\n<code class=\"language-text\">awk</code>는 데이터를 조작할 수 있기 때문에 쉘 스크립트에서 사용되는 필수 툴이며 작은 데이터베이스를 관리하기 위해서도 필수입니다</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-awk-형식\" style=\"position:relative;\"><a href=\"#-awk-%ED%98%95%EC%8B%9D\" aria-label=\" awk 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ awk 형식</h2>\n<ul>\n<li>명령어를 입력한 다음, <code class=\"language-text\">작은따옴표</code>로 둘러싸인 패턴이나 <code class=\"language-text\">액션</code>을 입력하고<br>\n마지막엔 <code class=\"language-text\">입력 파일 이름</code>. 파일 이름을 지정하지 않으면 키보드 입력에 의한 <code class=\"language-text\">표준 입력</code>을 받습니다. </li>\n<li>\n<p>awk는 입력된 라인들의 데이터들을 <code class=\"language-text\">공백</code> 또는 <code class=\"language-text\">탭</code>을 기준으로 분리해  <code class=\"language-text\">$1</code>부터 시작하는 각각의 필드 변수로 분리해 인식합니다.</p>\n<p>awk 형식</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk <span class=\"token punctuation\">[</span>OPTION<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">awk</span> program<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ARGUMENT<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n  OPTION\n    <span class=\"token operator\">-</span>F        <span class=\"token punctuation\">:</span> 필드 구분 문자 지정<span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">-</span>f        <span class=\"token punctuation\">:</span> awk program 파일 경로 지정<span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">-</span>v        <span class=\"token punctuation\">:</span> awk program에서 사용될 특정 variable값 지정<span class=\"token punctuation\">.</span>\n  awk program\n    <span class=\"token operator\">-</span>f 옵션이 사용되지 않은 경우<span class=\"token punctuation\">,</span> awk가 실행할 awk program 코드 지정<span class=\"token punctuation\">.</span>\n  ARGUMENT\n    입력 파일 지정 또는 variable 값 지정<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>첫번째 필드는 <code class=\"language-text\">$1</code>, 두번째 필드는 <code class=\"language-text\">$2</code>와 같이 표현되며 <code class=\"language-text\">$0</code>은 전체 필드를 가르킵니다.<br>\n아래 리스트에서는 -rw-r—r— 은 <code class=\"language-text\">$1</code> 그 다음의 1로 표시된것(Link Count)은 <code class=\"language-text\">$2</code>가 됩니다</p>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcKJqcO%2FbtqFFTOrwd6%2FTPsiT7Fkl5RUzQQipYBuG1%2Fimg.png\"></p>\n<br/>\n</li>\n<li>\n<p>필드의 구분자는 탭 또는 스페이스이니 touch “spa ce”를 입력하여<br>\n파일명에 띄어쓰기를 주고나서 awk print를 사용하여 실제로 필드를 탭 또는 스페이스로 구분하는지 확인해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script<span class=\"token operator\">/</span>awktest$ ls <span class=\"token operator\">-</span>l\n합계 <span class=\"token number\">0</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> student student <span class=\"token number\">0</span>  <span class=\"token number\">8</span>월 <span class=\"token number\">19</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">34</span>  nasa\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> student student <span class=\"token number\">0</span>  <span class=\"token number\">8</span>월 <span class=\"token number\">19</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">34</span> 'spa ce'\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> student student <span class=\"token number\">0</span>  <span class=\"token number\">8</span>월 <span class=\"token number\">19</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span>  test\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> student student <span class=\"token number\">0</span>  <span class=\"token number\">8</span>월 <span class=\"token number\">19</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">34</span>  wonseok\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script<span class=\"token operator\">/</span>awktest$ ls <span class=\"token operator\">-</span>l <span class=\"token operator\">|</span> awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">10</span><span class=\"token punctuation\">}</span>'\n\n\nce</code></pre></div>\n<p> 실제로 <code class=\"language-text\">$10</code>을 사용하여 <code class=\"language-text\">10번째 필드값</code>을 출력할 경우<br>\n다른 필드들은 10번째 필드가 없기 때문에 공백으로 출력되고 ce라는 필드만 출력하게 됩니다</p>\n<br/>\n</li>\n<li>추가적으로 탭이나 띄어쓰기가 여러번 입력되어 있더라도  그 사이에 문자가 없다면 1개의 필드로 처리 됩니다.<br>\n이러한 특성으로 인해 데이터를 처리할때는 데이터의 내용에 일관성이 있어야<br>\n생각했던 결과와 다른 값이 나오는 현상을 방지할 수 있습니다.</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-awk-사용법\" style=\"position:relative;\"><a href=\"#-awk-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\" awk 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 awk 사용법</h2>\n<ul>\n<li>\n<p>awk 는 아래와 같은 형식으로 사용할 수 있습니다 </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">command <span class=\"token operator\">|</span> awk 'pattern'\n\ncommand <span class=\"token operator\">|</span> awk '<span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span>'\n\ncommand <span class=\"token operator\">|</span> awk 'pattern<span class=\"token string character\">' '</span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span>'\n\nawk <span class=\"token punctuation\">[</span>OPTION<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>pattern <span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span> <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ARGUMENT<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>표</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">awk 사용 예</th>\n<th align=\"left\">명령어 옵션</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">파일의 전체 내용 출력</td>\n<td align=\"left\">awk ’{ print }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">필드 값 출력</td>\n<td align=\"left\">awk ’{ print $1 }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">필드 값에 임의 문자열을 같이 출력</td>\n<td align=\"left\">awk ‘{print “STR”$1, \"STR\"$2}’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">지정된 문자열을 포함하는 레코드만 출력</td>\n<td align=\"left\">awk ‘/STR/’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">특정 필드 값 비교를 통해 선택된 레코드만 출력</td>\n<td align=\"left\">awk ’$1 == 10 { print$2 }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">특정 필드들의 합 구하기</td>\n<td align=\"left\">awk ‘{sum += $3} END { print sum }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">여러 필드들의 합 구하기</td>\n<td align=\"left\">awk ’{ for (i=2; i&#x3C;=NF; i++) total += $i }; END { print “TOTAL : “total }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">레코드 단위로 필드 합 및 평균 값 구하기</td>\n<td align=\"left\">awk ’{ sum = 0 } {sum += ($3+$4+$5) } { print$0, sum, sum/3 }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">필드에 연산을 수행한 결과 출력하기</td>\n<td align=\"left\">awk ‘{print $1,$2, $3+2,$4, $5}’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">레코드 또는 필드의 문자열 길이 검사</td>\n<td align=\"left\">awk ’ length($0) > 20’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">파일에 저장된 awk program 실행</td>\n<td align=\"left\">awk -f [AWK FILE] [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">필드 구분 문자 변경하기</td>\n<td align=\"left\">awk -F ’:’ ’{ print $1 }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">awk 실행 결과 레코드 정렬하기</td>\n<td align=\"left\">awk ’{ print $0 }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">특정 레코드만 출력하기</td>\n<td align=\"left\">awk ‘NR == 2 { print $0; exit }’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">출력 필드 너비 지정하기</td>\n<td align=\"left\">awk ’{ printf ”%-3s %-8s %-4s %-4s %-4s\\n”, $1,$2, $3,$4, $5}’ [FILE]</td>\n</tr>\n<tr>\n<td align=\"left\">필드 중 최대 값 출력</td>\n<td align=\"left\">awk ‘{max = 0; for (i=3; i&#x3C;NF; i++) max = ($i > max) ?$i : max ; print max}’ [FILE]</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-awk-사용-예\" style=\"position:relative;\"><a href=\"#-awk-%EC%82%AC%EC%9A%A9-%EC%98%88\" aria-label=\" awk 사용 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 awk 사용 예</h2>\n<ul>\n<li>\n<p>예를 들기 위해 아래와 같은 파일을 하나 만들었다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ vi awkfile  \n홍 길동 <span class=\"token number\">3324</span>    <span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span> <span class=\"token number\">50354</span>  \n임 꺽정 <span class=\"token number\">5246</span>    <span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">66</span> <span class=\"token number\">287650</span>  \n이 성계 <span class=\"token number\">7654</span>    <span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">/</span><span class=\"token number\">58</span> <span class=\"token number\">60000</span>  \n정 약용 <span class=\"token number\">8683</span>    <span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token number\">48</span> <span class=\"token number\">365000</span> </code></pre></div>\n<br/>\n</li>\n<li>\n<p>$0은 전체 필드를 출력한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">0</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n홍 길동 <span class=\"token number\">3324</span>    <span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span> <span class=\"token number\">50354</span>  \n임 꺽정 <span class=\"token number\">5246</span>    <span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">66</span> <span class=\"token number\">287650</span>  \n이 성계 <span class=\"token number\">7654</span>    <span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">/</span><span class=\"token number\">58</span> <span class=\"token number\">60000</span>  \n정 약용 <span class=\"token number\">8683</span>    <span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token number\">48</span> <span class=\"token number\">365000</span> </code></pre></div>\n<br/>\n</li>\n<li>\n<p>$1은 공백을 기준으로 첫번째 필드를 출력한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n홍\n임\n이\n정</code></pre></div>\n<br/>\n</li>\n<li>\n<p>sed와 동일하게 특정 패턴을 가진 행을 출력할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token operator\">/</span>길동<span class=\"token operator\">/</span>' awkfile\n<span class=\"token operator\">></span> 홍 길동\t<span class=\"token number\">3324</span>\t<span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span>\t<span class=\"token number\">50354</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>다음과 같이 특정 패턴을 찾아 출력하는데 앞,뒤로 문자를 붙이기도 가능하다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token operator\">/</span>정<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>print <span class=\"token string\">\"\\t안녕하세요? \"</span> $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span> <span class=\"token string\">\"님!\"</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n    안녕하세요<span class=\"token punctuation\">?</span> 임 꺽정님<span class=\"token operator\">!</span>  \n    안녕하세요<span class=\"token punctuation\">?</span> 정 약용님<span class=\"token operator\">!</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"code-classlanguage-textawk-programcode-에는-아래와-같은-키워드가-제공됩니다\" style=\"position:relative;\"><a href=\"#code-classlanguage-textawk-programcode-%EC%97%90%EB%8A%94-%EC%95%84%EB%9E%98%EC%99%80-%EA%B0%99%EC%9D%80-%ED%82%A4%EC%9B%8C%EB%93%9C%EA%B0%80-%EC%A0%9C%EA%B3%B5%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"code classlanguage textawk programcode 에는 아래와 같은 키워드가 제공됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">awk program</code> 에는 아래와 같은 키워드가 제공됩니다.</h3>\n<ul>\n<li>\n<p>목록</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">BEGIN   delete  <span class=\"token class-name\">END</span>     function    <span class=\"token keyword\">in</span>      printf\n<span class=\"token keyword\">break</span>   <span class=\"token keyword\">do</span>      exit    getline     next    <span class=\"token keyword\">return</span>\n<span class=\"token keyword\">continue</span>        <span class=\"token keyword\">else</span>    <span class=\"token keyword\">for</span>         <span class=\"token keyword\">if</span>      print      <span class=\"token keyword\">while</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p><code class=\"language-text\">awk program</code>은 새로운 변수를 선언하고 값을 할당하거나 참조할 수 있습니다.<br>\n그리고 아래와 같이 특수 목적으로 미리 정의된 변수들을 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">ARGC        <span class=\"token punctuation\">:</span> ARGV 배열 요소의 갯수<span class=\"token punctuation\">.</span>\nARGV        <span class=\"token punctuation\">:</span> command line argument에 대한 배열<span class=\"token punctuation\">.</span>\nCONVFMT     <span class=\"token punctuation\">:</span> 문자열을 숫자로 변경할 때 사용할 형식<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%.6g\"</span><span class=\"token punctuation\">)</span>\nENVIRON     <span class=\"token punctuation\">:</span> 환경변수에 대한 배열<span class=\"token punctuation\">.</span>\nFILENAME    <span class=\"token punctuation\">:</span> 경로를 포함한 입력 파일 이름<span class=\"token punctuation\">.</span>\nFNR         <span class=\"token punctuation\">:</span> 현재 파일에서 현재 레코드의 순서 값<span class=\"token punctuation\">.</span>\nFS          <span class=\"token punctuation\">:</span> 필드 구분 문자<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>기본 값 <span class=\"token operator\">=</span> space<span class=\"token punctuation\">)</span>\nNF          <span class=\"token punctuation\">:</span> 현재 레코드에 있는 필드의 갯수<span class=\"token punctuation\">.</span>\nNR          <span class=\"token punctuation\">:</span> 입력 시작 점에서 현재 레코드의 순서 값<span class=\"token punctuation\">.</span>\nOFMT        <span class=\"token punctuation\">:</span> 문자열을 출력할 때 사용할 형식<span class=\"token punctuation\">.</span>\nOFS         <span class=\"token punctuation\">:</span> 결과 출력 시 필드 구분 문자<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>기본 값 <span class=\"token operator\">=</span> space<span class=\"token punctuation\">)</span>\nORS         <span class=\"token punctuation\">:</span> 결과 출력 시 레코드 구분 문자<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>기본 값 <span class=\"token operator\">=</span> newline<span class=\"token punctuation\">)</span>\nRLENGTH     <span class=\"token punctuation\">:</span> match 함수에 의해 매칭된 문자열의 길이<span class=\"token punctuation\">.</span>\nRS          <span class=\"token punctuation\">:</span> 레코드 구분 문자<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>기본 값 <span class=\"token operator\">=</span> newline<span class=\"token punctuation\">)</span>\nRSTART      <span class=\"token punctuation\">:</span> match 함수에 의해 매칭된 문자열의 시작 위치<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"code-classlanguage-textawk-programcode-에서-사용-가능한-code-classlanguage-text함수code는-아래와-같습니다\" style=\"position:relative;\"><a href=\"#code-classlanguage-textawk-programcode-%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-code-classlanguage-text%ED%95%A8%EC%88%98code%EB%8A%94-%EC%95%84%EB%9E%98%EC%99%80-%EA%B0%99%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"code classlanguage textawk programcode 에서 사용 가능한 code classlanguage text함수code는 아래와 같습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">awk program</code> 에서 사용 가능한 <code class=\"language-text\">함수</code>는 아래와 같습니다.</h3>\n<ul>\n<li>\n<p>목록</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">Arithmetic</span> Functions <span class=\"token punctuation\">:</span>\n<span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>         <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">expr</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token class-name\">String</span> Functions <span class=\"token punctuation\">:</span>\n    <span class=\"token function\">gsub</span><span class=\"token punctuation\">(</span>ere<span class=\"token punctuation\">,</span> repl<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>      <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>            length<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">s</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> ere<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>              <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> fs <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">,</span> expr<span class=\"token punctuation\">,</span> expr<span class=\"token punctuation\">,</span> <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ere<span class=\"token punctuation\">,</span> repl<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>      <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> n <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token function\">tolower</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">toupper</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\nInput<span class=\"token operator\">/</span>Output <span class=\"token keyword\">and</span> <span class=\"token class-name\">General</span> Functions <span class=\"token punctuation\">:</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>          getline                 getline <span class=\"token return-type class-name\"><span class=\"token keyword\">var</span></span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<h3 id=\"계속해서-사용-예제를-확인해보겠습니다\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%86%8D%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"계속해서 사용 예제를 확인해보겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계속해서 사용 예제를 확인해보겠습니다.</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">OFMT</code> 변수 </p>\n<ul>\n<li>숫자를 출력할 때 숫자 포맷 제어할 경우 사용. 간단히 <code class=\"language-text\">printf</code>를 사용할 수도 있지만, <code class=\"language-text\">OFMT</code>를 지정할 수 있음.</li>\n<li>default는 <code class=\"language-text\">%.6g</code>로 소수점 6자리</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk 'BEGIN<span class=\"token punctuation\">{</span>OFMT<span class=\"token operator\">=</span><span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">;</span> print <span class=\"token number\">1.23412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15E-3</span><span class=\"token punctuation\">}</span>'\n<span class=\"token operator\">></span> <span class=\"token number\">1.23</span> <span class=\"token number\">0.01</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p><code class=\"language-text\">printf</code> 함수 </p>\n<ul>\n<li>포매팅된 깔끔한 출력을 할 경우 사용</li>\n<li>newline을 제공하지 않기 때문에 newline이 요구되면 <code class=\"language-text\">\\n</code>을 사용해야함 </li>\n<li><code class=\"language-text\">c : 문자</code>, <code class=\"language-text\">d : 10진수</code>, <code class=\"language-text\">f : 실수</code>, <code class=\"language-text\">x : 16진수</code></li>\n<li>\n<p><code class=\"language-text\">-</code>이 붙으면 좌측에서 시작되고 기본형이면 우측에서 시작</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span>printf <span class=\"token string\">\"The name is %-20s Number is %4d\\n\"</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">1</span><span class=\"token string\">\" \"</span>$<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">}</span>' awkfile  \n<span class=\"token operator\">></span> \nThe name <span class=\"token keyword\">is</span> 홍 길동           Number <span class=\"token keyword\">is</span> <span class=\"token number\">3324</span>\nThe name <span class=\"token keyword\">is</span> 임 꺽정           Number <span class=\"token keyword\">is</span> <span class=\"token number\">5246</span>\nThe name <span class=\"token keyword\">is</span> 이 성계           Number <span class=\"token keyword\">is</span> <span class=\"token number\">7654</span>\nThe name <span class=\"token keyword\">is</span> 정 약용           Number <span class=\"token keyword\">is</span> <span class=\"token number\">8683</span></code></pre></div>\n</li>\n</ul>\n<br/>\n</li>\n<li>\n<p><code class=\"language-text\">awk -f</code> 옵션</p>\n<ul>\n<li><code class=\"language-text\">awk</code> 액션과 명령이 파일에 작성되어 있다면 <code class=\"language-text\">-f</code> 옵션을 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk <span class=\"token operator\">-</span>f <span class=\"token punctuation\">[</span>awk 명령파일<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>awk 명령을 적용할 텍스트 파일<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ <span class=\"token return-type class-name\">vi</span> awkcommand \n<span class=\"token punctuation\">{</span>print <span class=\"token string\">\"안녕하세요 \"</span> $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token string\">\"님\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk <span class=\"token operator\">-</span>f awkcommand awkfile\n<span class=\"token operator\">></span> \n안녕하세요 홍 길동님\n홍 길동 <span class=\"token number\">3324</span> <span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span> <span class=\"token number\">50354</span>\n안녕하세요 임 꺽정님\n임 꺽정 <span class=\"token number\">5246</span> <span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">66</span> <span class=\"token number\">287650</span>\n안녕하세요 이 성계님\n이 성계 <span class=\"token number\">7654</span> <span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">/</span><span class=\"token number\">58</span> <span class=\"token number\">60000</span>\n안녕하세요 정 약용님\n정 약용 <span class=\"token number\">8683</span> <span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token number\">48</span> <span class=\"token number\">365000</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>레코드와 필드</p>\n<ul>\n<li>\n<p>레코드</p>\n<ul>\n<li>레코드라고 불리는 각 라인은 newline으로 분리된다</li>\n<li>\n<p>NR 변수 : 각 레코드들의 번호는 awk의 빌트인 변수 NR에 저장된다. 레코드가 저장된 다음 NR의 값은 하나씩 증가한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span><span class=\"token class-name\">print</span> NR<span class=\"token punctuation\">,</span> $<span class=\"token number\">0</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n<span class=\"token number\">1</span> 홍 길동\t<span class=\"token number\">3324</span>\t<span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span>\t<span class=\"token number\">50354</span>\n<span class=\"token number\">2</span> 임 꺽정\t<span class=\"token number\">5246</span>\t<span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">66</span>\t<span class=\"token number\">287650</span>\n<span class=\"token number\">3</span> 이 성계\t<span class=\"token number\">7654</span>\t<span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">/</span><span class=\"token number\">58</span>\t<span class=\"token number\">60000</span>\n<span class=\"token number\">4</span> 정 약용\t<span class=\"token number\">8683</span>\t<span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">40</span><span class=\"token operator\">/</span><span class=\"token number\">48</span>\t<span class=\"token number\">365000</span></code></pre></div>\n</li>\n</ul>\n<br/>\n</li>\n<li>\n<p>필드</p>\n<ul>\n<li>\n<p>NF에 필드의 수를 유지하며 라인당 100개의 필드를 가질 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">,</span>  NF<span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n홍 길동 <span class=\"token number\">50354</span> <span class=\"token number\">5</span>\n임 꺽정 <span class=\"token number\">287650</span> <span class=\"token number\">5</span>\n이 성계 <span class=\"token number\">60000</span> <span class=\"token number\">5</span>\n정 약용 <span class=\"token number\">365000</span> <span class=\"token number\">5</span></code></pre></div>\n</li>\n</ul>\n<br/>\n</li>\n<li>\n<p>필드 분리자</p>\n<ul>\n<li>\n<p>빌트인 변수 <code class=\"language-text\">FS</code>는 입력 필드 분리자의 값을 가지고 있다.<br>\ndefault는 공백과 탭. <code class=\"language-text\">FS</code> 값을 변경하기 위해선 <code class=\"language-text\">-F</code>을 사용하며 <code class=\"language-text\">-F</code> 다음에 오는 문자가 새로운 필드 분리자가 된다</p>\n<p>테스트를위해 아래와 같은 파일을 생성\t</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ vi awkfile_FS\n홍 길동 <span class=\"token punctuation\">:</span><span class=\"token number\">3324</span>   <span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">11</span><span class=\"token operator\">/</span><span class=\"token number\">96</span>        <span class=\"token punctuation\">:</span><span class=\"token number\">50354</span>\n임 꺽정 <span class=\"token punctuation\">:</span><span class=\"token number\">5246</span>   <span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">9</span><span class=\"token operator\">/</span><span class=\"token number\">66</span>        <span class=\"token punctuation\">:</span><span class=\"token number\">283502</span></code></pre></div>\n<p><code class=\"language-text\">:</code>을 분리자로 <code class=\"language-text\">홍</code>이라는 문자를 기준으로 분리해 1,2 행을 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk <span class=\"token operator\">-</span>F<span class=\"token punctuation\">:</span> '<span class=\"token operator\">/</span>홍<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' awkfile_FS\n<span class=\"token operator\">></span> 홍 길동\t <span class=\"token number\">3324</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"awk와-정규표현식\" style=\"position:relative;\"><a href=\"#awk%EC%99%80-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"awk와 정규표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>awk와 정규표현식</h3>\n<ul>\n<li>\n<p>정규표현식은 슬래시로 둘러싸인 문자들로 구성된 패턴 </p>\n<ul>\n<li>\n<p><code class=\"language-text\">정</code>으로 시작하는 문자열의 1,2,3행 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token operator\">/</span><span class=\"token operator\">^</span>정<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> 정 약용 <span class=\"token number\">8683</span></code></pre></div>\n</li>\n</ul>\n<br/>\n</li>\n<li>\n<p><code class=\"language-text\">match</code> 연산자(~) : 표현식과 매칭되는 것이 있는지 검사하는 연산자  </p>\n<ul>\n<li>\n<p>2번 필드가 g로 끝나지 않는 라인 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '$<span class=\"token number\">2</span> <span class=\"token operator\">!</span><span class=\"token operator\">~</span> <span class=\"token operator\">/</span>g$<span class=\"token operator\">/</span>' awkfile2\n<span class=\"token operator\">></span> Lee Seongkye\t<span class=\"token number\">7654</span>\t<span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">/</span><span class=\"token number\">58</span>\t<span class=\"token number\">60000</span></code></pre></div>\n</li>\n</ul>\n<br/>\n</li>\n</ul>\n<h3 id=\"비교-표현식\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90-%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"비교 표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교 표현식</h3>\n<ul>\n<li>\n<p>어떤 상태가 <code class=\"language-text\">참</code>일때만 액션이 수행\t</p>\n<ul>\n<li>\n<p>3번째 필드가 <code class=\"language-text\">7000</code> 크다면 1,2행을 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '$<span class=\"token number\">3</span> <span class=\"token operator\">></span> <span class=\"token number\">7000</span><span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' awkfile\n<span class=\"token operator\">></span> \n이 성계\n정 약용</code></pre></div>\n<br/>\n</li>\n</ul>\n</li>\n<li>\n<p>논리 연산자</p>\n<ul>\n<li><code class=\"language-text\">&amp;&amp;</code> : AND 연산</li>\n<li><code class=\"language-text\">||</code> : OR 연산</li>\n<li>\n<p><code class=\"language-text\">!</code> : NOT 연산</p>\n<p>앞의 수식과 뒤의 수식 모두 맞아야 출력이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '$<span class=\"token number\">3</span> <span class=\"token operator\">></span> $<span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> $<span class=\"token number\">3</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span>' filename</code></pre></div>\n<hr>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-명령어들의-실습\" style=\"position:relative;\"><a href=\"#-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%93%A4%EC%9D%98-%EC%8B%A4%EC%8A%B5\" aria-label=\" 명령어들의 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 명령어들의 실습</h2>\n<ol>\n<li>\n<p>파일의 전체 내용 출력.\n<code class=\"language-text\">\"print\"</code> 액션만 지정한 경우, 입력으로 지정된 파일의 내용을 출력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span> print <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt            <span class=\"token operator\">></span> file<span class=\"token punctuation\">.</span>txt의 전체 파일 내용 출력<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n$ awk '<span class=\"token punctuation\">{</span> print <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p>필드 값 출력.\n<code class=\"language-text\">\"print $n\"</code> 액션을 통해 <code class=\"language-text\">n번째 필드 값</code>을 출력할 수 있습니다.<br>\n참고로, “$0”은 전체 레코드를 나타내는 변수입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt           <span class=\"token operator\">></span> 두 번째 필드 값 출력<span class=\"token punctuation\">.</span>\n$ awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>$<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt        <span class=\"token operator\">></span> 첫 번째<span class=\"token punctuation\">,</span> 두 번째 필드 값 출력<span class=\"token punctuation\">.</span>\n$ awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt            <span class=\"token operator\">></span> 전체 레코드 출력<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n\n$ awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta\n<span class=\"token number\">2</span> soft\n<span class=\"token number\">3</span> prog</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"3\">\n<li>\n<p>필드 값에 임의 문자열을 같이 출력.\n<code class=\"language-text\">$1</code> 필드 앞에 <code class=\"language-text\">\"no:\"</code> 라는 문자\n<code class=\"language-text\">$2</code> 필드 앞에 <code class=\"language-text\">\"user:\"</code> 라는 문자를 붙였다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span>print <span class=\"token string\">\"no:\"</span>$<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user:\"</span>$<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n$ awk '<span class=\"token punctuation\">{</span>print <span class=\"token string\">\"no:\"</span>$<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user:\"</span>$<span class=\"token number\">2</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token class-name\">file<span class=\"token punctuation\">.</span>txt</span>\nno<span class=\"token punctuation\">:</span><span class=\"token number\">1</span> user<span class=\"token punctuation\">:</span><span class=\"token class-name\">ppotta</span>\nno<span class=\"token punctuation\">:</span><span class=\"token number\">2</span> user<span class=\"token punctuation\">:</span><span class=\"token class-name\">soft</span>\nno<span class=\"token punctuation\">:</span><span class=\"token number\">3</span> user<span class=\"token punctuation\">:</span>prog</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"4\">\n<li>\n<p>지정된 문자열을 포함하는 레코드만 출력.<br>\nawk의 패턴에 <code class=\"language-text\">정규 표현식</code>을 사용하여 문자열 패턴을 검사할 수 있습니다.<br>\n이 때, 정규 표현식은 <code class=\"language-text\">\"/regex/\"</code> 형태로 지정할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token operator\">/</span>pp<span class=\"token operator\">/</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt                   # <span class=\"token string\">\"pp\"</span> 가 포함된 레코드만 유효<span class=\"token punctuation\">.</span>\nawk '<span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token number\">0</span><span class=\"token operator\">/</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt               # <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span> 이 포함된 레코드만 유효<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n$ awk '<span class=\"token operator\">/</span>pp<span class=\"token operator\">/</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>                      ## <span class=\"token string\">\"pp\"</span> 문자가 포함된 레코드만 출력\n$ awk '<span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token number\">0</span><span class=\"token operator\">/</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>                      ## <span class=\"token string\">\"20,30\"</span>이 포함된 레코드 출력\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"5\">\n<li>\n<p>특정 필드 값 비교를 통해 선택된 레코드만 출력.<br>\n<code class=\"language-text\">awk program language의 표현식</code>을 사용해 유효한 레코드를 위한 필드 값을 비교할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '$<span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt   # 첫 번째 필드가 <span class=\"token number\">2</span>인 레코드의 두 번째 필드 출력<span class=\"token punctuation\">.</span>\nawk '$<span class=\"token number\">3</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt   # 세 번째 필드가 <span class=\"token number\">70</span>보다 큰 레코드 출력<span class=\"token punctuation\">.</span>\nawk '$<span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">30</span> <span class=\"token operator\">&amp;&amp;</span> $<span class=\"token number\">4</span> <span class=\"token operator\">==</span><span class=\"token number\">40</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt   \n<span class=\"token preprocessor property\"># 세 번째 필드가 30이고 네 번째 필드가 40인 레코드의 두 번째 필드 출력.</span>\n<span class=\"token preprocessor property\"># &amp;&amp;의 경우 두개의 조건의 모두 참일때만 참</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n$ awk '$<span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\nsoft\n$ awk '$<span class=\"token number\">3</span> <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n$ awk '$<span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">30</span> <span class=\"token operator\">&amp;&amp;</span> $<span class=\"token number\">4</span> <span class=\"token operator\">==</span><span class=\"token number\">40</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt\nppotta</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"6\">\n<li>\n<p>지정된 필드의 값을 더한 값 출력. (특정 필드에 대한 합 구하기)<br>\n<code class=\"language-text\">awk program</code>에서 변수의 사용을 통해 특정 필드의 값을 더하고, 더해진 총 합을 출력할 수 있습니다.<br>\n이 때, 총합은 모든 레코드 탐색이 끝난 시점인, <code class=\"language-text\">\"END\"</code>패턴의 액션에서 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span>sum <span class=\"token operator\">+=</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">}</span> END <span class=\"token punctuation\">{</span> print sum <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt # <span class=\"token number\">3</span>번째 필드의 값을 더한다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span>sum <span class=\"token operator\">+=</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">}</span> END <span class=\"token punctuation\">{</span> print <span class=\"token string\">\"SUM : \"</span>sum <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token class-name\">file<span class=\"token punctuation\">.</span>txt</span>\nSUM <span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>                             ## <span class=\"token number\">3</span>번째 필드의 <span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span>의 총합 출력</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"7\">\n<li>\n<p>여러 필드의 값을 더한 값 출력. (여러 필드에 대한 합 구하기)<br>\n<code class=\"language-text\">for 루프</code>를 수행하여 여러 필드의 값을 연산에 포함시킬 수 있습니다.<br>\n참고로 아래 예제에서 <code class=\"language-text\">\"NF\"</code>는 현재 레코드의 필드 갯수를 뜻하며<br>\n<code class=\"language-text\">\"$i\"</code>는 변수 i가 매핑된 필드를 뜻합니다. <code class=\"language-text\">(i=2일 때 $2)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>NF<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> total <span class=\"token operator\">+=</span> $i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> END <span class=\"token punctuation\">{</span> print <span class=\"token string\">\"TOTAL : \"</span>total <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n\n조건 <span class=\"token punctuation\">:</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span> 이고<span class=\"token punctuation\">.</span> 레코드의 필드 개수와 같아질때까지 total의 값이 증가한다<span class=\"token punctuation\">.</span>\n조건<span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> 변수 i의 값이 NF와 동일해지면 total의 값을 출력한다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>NF<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> total <span class=\"token operator\">+=</span> $i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> END <span class=\"token punctuation\">{</span> print <span class=\"token string\">\"TOTAL : \"</span>total <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token class-name\">file<span class=\"token punctuation\">.</span>txt</span>\nTOTAL <span class=\"token punctuation\">:</span> <span class=\"token number\">450</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">3</span> 일때는 <span class=\"token number\">3</span>필드 <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token operator\">+</span><span class=\"token number\">60</span><span class=\"token operator\">+</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">180</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">4</span> 일때는 <span class=\"token number\">4</span>필드 <span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token operator\">+</span><span class=\"token number\">70</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">180</span><span class=\"token operator\">+</span><span class=\"token number\">120</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">5</span> 일때는 <span class=\"token number\">5</span>필드 <span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token operator\">+</span><span class=\"token number\">80</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token operator\">+</span><span class=\"token number\">150</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"8\">\n<li>\n<p>레코드 단위로 필드 합 및 평균 값 구하기.<br>\n변수 및 액션을 조합하여 레코드 단위로 필드들의 값 및 평균을 계산하여 출력할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>sum <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>$<span class=\"token number\">3</span><span class=\"token operator\">+</span>$<span class=\"token number\">4</span><span class=\"token operator\">+</span>$<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">,</span> sum<span class=\"token operator\">/</span><span class=\"token number\">3</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n\n조건 <span class=\"token punctuation\">:</span> sum에 <span class=\"token number\">0</span>의 값을 넣어 초기화\n조건 <span class=\"token punctuation\">:</span> sum에 <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span>필드의 값을 모두 더한다\n조건 <span class=\"token punctuation\">:</span> 출력할때 전체 필드<span class=\"token punctuation\">,</span> 총합 값<span class=\"token punctuation\">,</span> 평균 값을 출력</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>sum <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>$<span class=\"token number\">3</span><span class=\"token operator\">+</span>$<span class=\"token number\">4</span><span class=\"token operator\">+</span>$<span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">,</span> sum<span class=\"token operator\">/</span><span class=\"token number\">3</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span> <span class=\"token number\">120</span> <span class=\"token number\">40</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span> <span class=\"token number\">210</span> <span class=\"token number\">70</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span> <span class=\"token number\">120</span> <span class=\"token number\">40</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"9\">\n<li>\n<p>필드에 연산을 수행한 결과 출력하기.<br>\nawk program 표현식을 사용하여, 필드에 연산을 수행한 결과를 출력할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt     # 세 번째 필드에 <span class=\"token number\">2</span>를 더한 값을 출력<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span>print $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">32</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft <span class=\"token number\">62</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog <span class=\"token number\">92</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"10\">\n<li>\n<p>레코드 또는 필드의 문자열 길이 검사.<br>\n<code class=\"language-text\">length() 함수</code>를 사용해 레코드 또는 필드의 문자열 길이를 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk ' <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>$<span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">20</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt               # 레코드의 길이가 <span class=\"token number\">20</span>보다 큰 경우<span class=\"token punctuation\">.</span>\nawk ' <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>$<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> ' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt  # 두 번째 필드의 길이가 <span class=\"token number\">4</span>보다 큰 레코드 출력<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n$ awk ' <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>$<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> ' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>               ## ppotta <span class=\"token operator\">-></span> <span class=\"token number\">6</span>의 길이이니깐 출력</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"11\">\n<li>\n<p>파일에 저장된 awk program 실행.<br>\nawk 실행 시, “-f” 옵션을 사용하여 파일로부터 awk program을 실행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk <span class=\"token operator\">-</span>f awkp<span class=\"token punctuation\">.</span>script <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt           # awkp<span class=\"token punctuation\">.</span>script에 저장된 awk program 실행</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ cat awkp<span class=\"token punctuation\">.</span>script\n<span class=\"token preprocessor property\"># 스크립트 내용</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>NF<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        total <span class=\"token operator\">+=</span> $i\n<span class=\"token punctuation\">}</span>\n\nEND <span class=\"token punctuation\">{</span>\n    print <span class=\"token string\">\"TOTAL : \"</span>total\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token preprocessor property\"># 내용은 위의 전체 필드의 합과 같다.</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk <span class=\"token operator\">-</span>f awkp<span class=\"token punctuation\">.</span>script <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token class-name\">file<span class=\"token punctuation\">.</span>txt</span>\nTOTAL <span class=\"token punctuation\">:</span> <span class=\"token number\">450</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"12\">\n<li>\n<p>필드 구분 문자 변경하기.<br>\n기본적으로 레코드의 필드를 구분하는 문자는 space(공백) 입니다.<br>\n이를 <code class=\"language-text\">\"-F\"</code> 사용하여 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk <span class=\"token operator\">-</span>F <span class=\"token string character\">':'</span> '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt         # 필드 구분 문자를 <span class=\"token punctuation\">:</span> 로 변경<span class=\"token punctuation\">.</span>\nawk <span class=\"token operator\">-</span>F <span class=\"token string character\">','</span> '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt         # 필드 구분 문자를 <span class=\"token punctuation\">,</span> 로 변경<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file2<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ppotta<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> soft<span class=\"token punctuation\">,</span>   <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">,</span> prog<span class=\"token punctuation\">,</span>   <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk <span class=\"token operator\">-</span>F <span class=\"token string character\">','</span> '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file2<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"13\">\n<li>\n<p>awk 실행 결과 레코드 정렬하기.<br>\n<code class=\"language-text\">sort</code> 명령을 조합하여 awk 실행 결과로 출력되는 레코드를 정렬할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">|</span> sort      # 출력 레코드를 오름차순으로 정렬<span class=\"token punctuation\">.</span>\nawk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">|</span> sort <span class=\"token operator\">-</span>r   # 출력 레코드를 역순으로 정렬<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">|</span> sort <span class=\"token operator\">-</span>r     # 결과 값을 내림차순으로 정렬\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"14\">\n<li>\n<p>특정 레코드만 출력하기.<br>\n<code class=\"language-text\">exit</code> 키워드를 사용하여 조건에 따라 awk 실행을 중지시킬 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">;</span> exit <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt                 # 첫 번째 레코드만 출력하고 실행 중지<span class=\"token punctuation\">.</span>\nawk 'NR <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">;</span> exit <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt         # 두 번째 레코드만 출력하고 실행 중지<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk 'NR <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span> print $<span class=\"token number\">0</span><span class=\"token punctuation\">;</span> exit <span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"15\">\n<li>\n<p>출력 필드 너비 지정하기.<br>\n<code class=\"language-text\">printf</code> 함수를 사용하여 필드 값 출력 포맷을 지정할 수 있습니다.<br>\nprintf 함수에 사용하는 출력 포맷은 C 언어와 동일합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span> printf <span class=\"token string\">\"%-3s %-8s %-4s %-4s %-4s\\n\"</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span> printf <span class=\"token string\">\"%-3s %-8s %-4s %-4s %-4s\\n\"</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">3</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> $<span class=\"token number\">5</span><span class=\"token punctuation\">}</span>' file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span>   ppotta   <span class=\"token number\">30</span>   <span class=\"token number\">40</span>   <span class=\"token number\">50</span>  \n<span class=\"token number\">2</span>   soft     <span class=\"token number\">60</span>   <span class=\"token number\">70</span>   <span class=\"token number\">80</span>  \n<span class=\"token number\">3</span>   prog     <span class=\"token number\">90</span>   <span class=\"token number\">10</span>   <span class=\"token number\">20</span>\n\n<span class=\"token preprocessor property\"># %-3 같은 형식은 스페이스(공간)을 사용하겠다는 의미이다.</span>\n<span class=\"token preprocessor property\"># -는 왼쪽부터 시작한다는 뜻.</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"16\">\n<li>\n<p>필드 중 최대 값 출력.<br>\n아래와 같은 코드를 통해 레코드 내 필드의 최대 값을 구하여 출력할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">awk '<span class=\"token punctuation\">{</span>max <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>NF<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> max <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>$i <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> $i <span class=\"token punctuation\">:</span> max <span class=\"token punctuation\">;</span> print max<span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>\n\n조건 <span class=\"token punctuation\">:</span> max의 값을 <span class=\"token number\">0</span>으로 초기화\n조건 <span class=\"token punctuation\">:</span> i는 레코드의 값만큼 증가\n조건 <span class=\"token punctuation\">:</span> max에는 i의 값을 순차적으로 저장\n조건 <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">?</span> 조건으로 크거나 같게되면 max 값 출력</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">file<span class=\"token punctuation\">.</span>txt\n$ cat file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">1</span> ppotta <span class=\"token number\">30</span> <span class=\"token number\">40</span> <span class=\"token number\">50</span>\n<span class=\"token number\">2</span> soft   <span class=\"token number\">60</span> <span class=\"token number\">70</span> <span class=\"token number\">80</span>\n<span class=\"token number\">3</span> prog   <span class=\"token number\">90</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n$ awk '<span class=\"token punctuation\">{</span>max <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>NF<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> max <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>$i <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> $i <span class=\"token punctuation\">:</span> max <span class=\"token punctuation\">;</span> print max<span class=\"token punctuation\">}</span>' <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>txt\n<span class=\"token number\">40</span>                 # 첫번째 레코드의 가장 큰 값\n<span class=\"token number\">70</span>                 # 두번째 레코드의 가장 큰 값\n<span class=\"token number\">90</span>                 # 세번째 레코드의 가장 큰 값</code></pre></div>\n</li>\n</ol>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-awk-\">✔ awk ?</a></li>\n<li><a href=\"#-awk-%ED%98%95%EC%8B%9D\">✌ awk 형식</a></li>\n<li><a href=\"#-awk-%EC%82%AC%EC%9A%A9%EB%B2%95\">🙌 awk 사용법</a></li>\n<li>\n<p><a href=\"#-awk-%EC%82%AC%EC%9A%A9-%EC%98%88\">👍 awk 사용 예</a></p>\n<ul>\n<li><a href=\"#awk-program-%EC%97%90%EB%8A%94-%EC%95%84%EB%9E%98%EC%99%80-%EA%B0%99%EC%9D%80-%ED%82%A4%EC%9B%8C%EB%93%9C%EA%B0%80-%EC%A0%9C%EA%B3%B5%EB%90%A9%EB%8B%88%EB%8B%A4\"><code class=\"language-text\">awk program</code> 에는 아래와 같은 키워드가 제공됩니다.</a></li>\n<li><a href=\"#awk-program-%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-%ED%95%A8%EC%88%98%EB%8A%94-%EC%95%84%EB%9E%98%EC%99%80-%EA%B0%99%EC%8A%B5%EB%8B%88%EB%8B%A4\"><code class=\"language-text\">awk program</code> 에서 사용 가능한 <code class=\"language-text\">함수</code>는 아래와 같습니다.</a></li>\n<li><a href=\"#%EA%B3%84%EC%86%8D%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">계속해서 사용 예제를 확인해보겠습니다.</a></li>\n<li><a href=\"#awk%EC%99%80-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D\">awk와 정규표현식</a></li>\n<li><a href=\"#%EB%B9%84%EA%B5%90-%ED%91%9C%ED%98%84%EC%8B%9D\">비교 표현식</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%93%A4%EC%9D%98-%EC%8B%A4%EC%8A%B5\">👏 명령어들의 실습</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 28, 2021","title":"[LINUX] - Shell Script - awk","categories":"LINUX","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/linux-awk/"}},"prev":{"id":"bb2ad5b9-0ebe-541d-90f7-19beb2914965","html":"<p>머리말  </p>\n<p>이전 포스트에서는 정규표현식에 대한 내용을 포스팅 했었습니다.<br>\n이번 포스트에서부터는 이제 실제 스크립트를 작성하는데 많은 도움이 되는 매개변수등에 대해서 설명 할 예정입니다.</p>\n<hr>\n<h2 id=\"-특수-매개변수\" style=\"position:relative;\"><a href=\"#-%ED%8A%B9%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\" aria-label=\" 특수 매개변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 특수 매개변수</h2>\n<ul>\n<li>특수매개변수 (Special Parameters)   </li>\n<li>\n<p>매개변수를 설명하기 전 알고가야 할 사항은 <code class=\"language-text\">위치매개 변수</code>인지, <code class=\"language-text\">특수매개 변수</code>인지  사실 별로 중요하지 않습니다.<br>\n그저 미리 내장된 특수한 변수들이 있고, 해당 코드들이 무슨 의미인지만 알면 됩니다.</p>\n<p>매개변수들의 상관관계<br>\n<img src=\"https://user-images.githubusercontent.com/69498804/90600521-ac499600-e231-11ea-8f23-30d9cfdbbae2.png\" alt=\"스크린샷, 2020-08-19 15-35-50\"></p>\n</li>\n</ul>\n<br/>\n<h3 id=\"특수-매개-변수-사용-예\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98-%EB%A7%A4%EA%B0%9C-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9-%EC%98%88\" aria-label=\"특수 매개 변수 사용 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수 매개 변수 사용 예</h3>\n<ul>\n<li>\n<p>간단하게 스크립트를 하나 짜봤습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">#!/bin/bash</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> $# <span class=\"token operator\">-</span>ne <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span> \n    then echo <span class=\"token string\">\"plz check arguments again\"</span> \n<span class=\"token keyword\">else</span> \n    echo <span class=\"token string\">\"$0 script is running\"</span> \nfi</code></pre></div>\n<p>코드에 보이는 <code class=\"language-text\">'$#'</code>과 <code class=\"language-text\">'$0'</code>와 같이 달러 표시로<br>\n시작되는 것들이 내부적으로 지정되어 있는 변수입니다.</p>\n<ul>\n<li><code class=\"language-text\">'$#'</code>은 넘겨진 <code class=\"language-text\">아규먼트 개수</code>를</li>\n<li><code class=\"language-text\">'$0'</code>은 실행된 <code class=\"language-text\">셸 스크립트명</code>을 의미해요</li>\n</ul>\n<p>스크립트의 내용은 넘겨진 아규먼트의 개수가 3개가 아니라면 <code class=\"language-text\">\"plz check arguments again\"</code>을 출력하고<br>\n3개가 맞다면 <code class=\"language-text\">\"00 script is running\"</code> 을 출력하라는 간단한 코드입니다 :)</p>\n<br/>\n</li>\n<li>\n<p>스크립트를 실행시켜봅시다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>nasa<span class=\"token punctuation\">.</span>sh a b          ### 아규먼트 갯수를 <span class=\"token number\">2</span>개로 지정\nplz check arguments again\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ \nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>nasa<span class=\"token punctuation\">.</span>sh a b c        ### 아규먼트 갯수를 <span class=\"token number\">3</span>개로 지정\n<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>nasa<span class=\"token punctuation\">.</span>sh script <span class=\"token keyword\">is</span> <span class=\"token class-name\">running</span></code></pre></div>\n</li>\n<li>위의 예제와 같이 <code class=\"language-text\">아규먼트의 개수</code>를 담고 있는 <code class=\"language-text\">'$#'</code>처럼<br>\n내부적으로 편의성을 위해 정의되어 있는 변수들을 <code class=\"language-text\">특수변수</code>라고 합니다.\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-아규먼트-변수--위치매개변수\" style=\"position:relative;\"><a href=\"#-%EC%95%84%EA%B7%9C%EB%A8%BC%ED%8A%B8-%EB%B3%80%EC%88%98--%EC%9C%84%EC%B9%98%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\" aria-label=\" 아규먼트 변수  위치매개변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 아규먼트 변수 , 위치매개변수</h2>\n<ul>\n<li>\n<p>변수들의 종류  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90601547-583fb100-e233-11ea-93ab-bbc26a14fe06.png\" alt=\"스크린샷, 2020-08-19 15-47-49\"></p>\n<p>이전 포스트인 정규표현식과 동일합니다.<br>\n각 숫자들은 우리가 어떤 명령을 내릴 때, <code class=\"language-text\">띄어쓰기</code> 기준으로 그 위치에 해당하는 값들을 가져옵니다.</p>\n<p>그래서 <code class=\"language-text\">$숫자</code> 형태를 <code class=\"language-text\">위치매개변수</code>라고 합니다.<br>\n추가적인 팁으로 10번째부터는 ”{}“로 감싸줘야 합니다. ex) ${10}</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90601817-bd93a200-e233-11ea-9647-0409b949173d.png\" alt=\"스크린샷, 2020-08-19 15-50-40\"></p>\n</li>\n</ul>\n<br/>\n<h3 id=\"매개변수-값-확인\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EA%B0%92-%ED%99%95%EC%9D%B8\" aria-label=\"매개변수 값 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수 값 확인</h3>\n<ul>\n<li>\n<p>실습을 위해서 아래와 같이 스크립트를 작성했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">#!/bin/bash</span>\n\necho '$<span class=\"token number\">0</span>' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $<span class=\"token number\">0</span>\necho '$<span class=\"token number\">1</span>' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $<span class=\"token number\">1</span>\necho '$<span class=\"token number\">2</span>' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $<span class=\"token number\">2</span>\necho '$<span class=\"token number\">3</span>' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $<span class=\"token number\">3</span>\necho '$#' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $#\necho '$<span class=\"token operator\">*</span>' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $<span class=\"token operator\">*</span>\necho '$@' <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> $@</code></pre></div>\n<br/>\n</li>\n<li>\n<p>스크립트를 실행해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>nasa1515<span class=\"token punctuation\">.</span>sh int1 int2 int3\n$<span class=\"token number\">0</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>nasa1515<span class=\"token punctuation\">.</span>sh\n$<span class=\"token number\">1</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> int1\n$<span class=\"token number\">2</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> int2\n$<span class=\"token number\">3</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> int3\n$# <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n$<span class=\"token operator\">*</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> int1 int2 int3\n$@ <span class=\"token keyword\">value</span> <span class=\"token punctuation\">:</span> int1 int2 int3</code></pre></div>\n<p><code class=\"language-text\">$*</code>와 <code class=\"language-text\">$0</code>는 결과처럼 동일한 것처럼 보입니다.<br>\n보통 <code class=\"language-text\">쌍따옴표</code>로 묶어주지 않으면 동일한 기능을 수행합니다.</p>\n<br/>\n</li>\n<li>\n<p>간단하게 두 변수 모두 쌍따옴표로 묶어서 테스트 해볼까요?  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># 아래와 같이 간단한 스크립트를 하나 만들었습니다.</span>\n<span class=\"token preprocessor property\">#!/bin/bash</span>\n\necho '<span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"$@\"</span>GO<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>'\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token string\">\"$@\"</span>\n<span class=\"token keyword\">do</span>\necho $i\ndone\n\necho <span class=\"token string\">\"\"</span>\n\necho '<span class=\"token number\">2</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"$*\"</span>GO<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>'\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token string\">\"$*\"</span>\n<span class=\"token keyword\">do</span>\necho $i\ndone</code></pre></div>\n<br/>\n</li>\n<li>\n<p>쌍따옴표로 묶은 결과는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>test<span class=\"token punctuation\">.</span>sh aaa bbb ccc ddd fff\n<span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"$@\"</span>GO<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\naaa\nbbb\nccc\nddd\nfff\n\n<span class=\"token number\">2</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"$*\"</span>GO<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\naaa bbb ccc ddd fff</code></pre></div>\n<p>결과로 보이듯이 <code class=\"language-text\">\"\" \"\"</code>로 변수가 묶인 경우 저장되어있는 개개의 값이 전개되는 것이 다릅니다.</p>\n<p>더 쉽게 예를들어 받는 값이 <code class=\"language-text\">\"aaa\" \"bbb\" \"ccc\"</code>(※ set “aaa” “bbb” “ccc”) 일 때</p>\n<ul>\n<li>\n<p>”$@”</p>\n<p>“aaa” “bbb” “ccc” 처럼 전개됩니다.</p>\n</li>\n<li>\n<p>”$*”</p>\n<p>“aaa bbb ccc” 처럼 전개됩니다.</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"특수매개변수\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\" aria-label=\"특수매개변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수매개변수</h3>\n<p>특수매개변수가 꼭 아규먼트와 관련된 변수만 있는 것은 아닙니다.<br>\n아규먼트 변수 외에도 아래와 같은 다양한 정보를 알 수 있는 변수들이 있습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/90604746-49a7c880-e238-11ea-9a63-b436c18f0721.png\" alt=\"스크린샷, 2020-08-19 16-23-10\"></p>\n<ul>\n<li>\n<h3 id=\"code-classlanguage-textcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcode\" aria-label=\"code classlanguage textcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">$$</code></h3>\n<p>보통 pid는 유일한 값이기 때문에 유니크한 구분코드를 만들때 날짜시분초와 함께 명명규칙에 잘 포함되어 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">uniq_id<span class=\"token operator\">=</span>$$`date <span class=\"token operator\">+</span><span class=\"token operator\">%</span>Y<span class=\"token operator\">%</span>m<span class=\"token operator\">%</span>d<span class=\"token operator\">%</span>H<span class=\"token operator\">%</span>M<span class=\"token operator\">%</span>S` \necho $<span class=\"token punctuation\">{</span>uniq_id<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ uniq_id<span class=\"token operator\">=</span>$$`date <span class=\"token operator\">+</span><span class=\"token operator\">%</span>Y<span class=\"token operator\">%</span>m<span class=\"token operator\">%</span>d<span class=\"token operator\">%</span>H<span class=\"token operator\">%</span>M<span class=\"token operator\">%</span>S`\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo $<span class=\"token punctuation\">{</span>uniq_id<span class=\"token punctuation\">}</span>\n<span class=\"token number\">395820200819162509</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo $$\n<span class=\"token number\">3958</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"code-classlanguage-textcode-1\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcode-1\" aria-label=\"code classlanguage textcode 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">$?</code></h3>\n<p>명령을 정상적으로 수행하면 0을 실패했다면 그 외의 값을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo <span class=\"token string\">\"test\"</span>\ntest\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo $<span class=\"token punctuation\">?</span>\n<span class=\"token number\">0</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ \nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token class-name\">llls</span>\nllls<span class=\"token punctuation\">:</span> 명령을 찾을 수 없습니다\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo $<span class=\"token punctuation\">?</span>\n<span class=\"token number\">127</span></code></pre></div>\n<p>보통 if문의 결과값을 확인하기위해 많이 사용됩니다.  </p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"code-classlanguage-textcode-2\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcode-2\" aria-label=\"code classlanguage textcode 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">$!</code></h3>\n<p>백그라운드로 실행된 명령의 pid 입니다</p>\n</li>\n<li>\n<p>실습을 위해 아래같은 스크립트를 하나 만들었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">#!/bin/bash</span>\n<span class=\"token class-name\">echo</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">:</span> $$\nsleep <span class=\"token number\">10</span>\necho finish</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>aa<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">&amp;</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token number\">9007</span>\nstudent@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ <span class=\"token keyword\">value</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9007</span>\nfinish\n\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>  완료                  <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>aa<span class=\"token punctuation\">.</span>sh</code></pre></div>\n<p>다음과 같이 정상적으로 백그라운드로 실행된 PID를 출력합니다</p>\n<p>이후에 다시 <code class=\"language-text\">$!</code>을 출력해보더라도 동일한 PID 출력됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">student@cccr<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>won<span class=\"token operator\">/</span>script$ echo $<span class=\"token operator\">!</span>\n<span class=\"token number\">9007</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"code-classlanguage-text_code\" style=\"position:relative;\"><a href=\"#code-classlanguage-text_code\" aria-label=\"code classlanguage text_code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">$_</code></h3>\n<p>지난 명령의 마지막 인자로 전달된 값 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ echo AA BB \nAA BB \n$ echo $_ \nBB</code></pre></div>\n</li>\n</ul>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%8A%B9%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\">✔ 특수 매개변수</a></p>\n<ul>\n<li><a href=\"#%ED%8A%B9%EC%88%98-%EB%A7%A4%EA%B0%9C-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9-%EC%98%88\">특수 매개 변수 사용 예</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%95%84%EA%B7%9C%EB%A8%BC%ED%8A%B8-%EB%B3%80%EC%88%98--%EC%9C%84%EC%B9%98%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\">✌ 아규먼트 변수 , 위치매개변수</a></p>\n<ul>\n<li><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EA%B0%92-%ED%99%95%EC%9D%B8\">매개변수 값 확인</a></li>\n<li><a href=\"#%ED%8A%B9%EC%88%98%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98\">특수매개변수</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 28, 2021","title":"[LINUX] - Shell Script - 특수,위치,아규먼트 매개 변수","categories":"LINUX","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/linux-shellscript/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/linux-shellscript-intervalRegula/","nextSlug":"/linux-awk/","prevSlug":"/linux-shellscript/"}},"staticQueryHashes":["1073350324","2938748437"]}