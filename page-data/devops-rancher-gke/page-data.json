{"componentChunkName":"component---src-templates-blog-template-js","path":"/devops-rancher-gke/","result":{"data":{"cur":{"id":"3530a618-aa45-5512-8771-62a86a0ea7dc","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다<br>\n이전 포스트와 다른점은 이전에는 이미 구성되어있는 클러스터를 사용했다면 이번 포스트에서는 GKE를 사용했다는 점입니다!!</p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>docker, Rancher (GKE)</li>\n<li>k8s</li>\n</ul>\n<hr>\n<h2 id=\"-환경구성\" style=\"position:relative;\"><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\" 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 환경구성</h2>\n<p>환경구성은 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95834575-1c7b2080-0d78-11eb-8aad-5a7ea4701c4a.png\" alt=\"스크린샷, 2020-10-13 17-18-15\"></p>\n<p>Rancher : Rancher master가 띄워져있는 Cluster 관리 서버<br>\nJenkins : 이전 포스트에서 설정한 CI 작동 서버<br>\ngke : GKE 클러스터 노드</p>\n<br/>\n<hr>\n<h3 id=\"gke-service---rancher-서비스-구축\" style=\"position:relative;\"><a href=\"#gke-service---rancher-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95\" aria-label=\"gke service   rancher 서비스 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GKE SERVICE - Rancher 서비스 구축.</h3>\n<ul>\n<li>Rancher로 클러스터를 생성하는 방법은 두가지가 있습니다.</li>\n<li>이번 포스트의 경우 GCP 무료 계정이다보니 Rancher로 클러스터를 생성하기에 어려움이 있습니다.<br>\n할당량 제한…ㅠㅠ 그래서 최소한으로 구축한 클러스터를 연동하겠습니다.</li>\n</ul>\n<br/>\n<h3 id=\"1-rancher로-gke-생성\" style=\"position:relative;\"><a href=\"#1-rancher%EB%A1%9C-gke-%EC%83%9D%EC%84%B1\" aria-label=\"1 rancher로 gke 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Rancher로 GKE 생성</h3>\n<ul>\n<li>\n<p>GCP -> GKE에서 클러스터를 생성합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95825037-3d894480-0d6b-11eb-954b-0e5212ac4db8.png\" alt=\"스크린샷, 2020-10-13 15-46-04\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 기본사양으로 GKE 클러스터를 구성했습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95826118-cfde1800-0d6c-11eb-8bc6-40113f29bdb6.png\" alt=\"스크린샷, 2020-10-13 15-57-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 생성한 노드 정보를 Cloud Shell에서 확인 가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95826246-f9973f00-0d6c-11eb-9661-14600ea38666.png\" alt=\"스크린샷, 2020-10-13 15-58-43\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>이제 Rancher 인스턴스와 연동해보겠습니다.</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Rancher 대쉬보드에서 Cluster -> ADD Cluster 선택!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95835703-88aa5400-0d79-11eb-82ed-f61e8d0dea45.png\" alt=\"스크린샷, 2020-10-13 17-28-35\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>저희가 추가 할 것은 GKE이기 떄문에 GKE를 선택</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95838368-a6c58380-0d7c-11eb-8344-e9a58e49bc86.png\" alt=\"스크린샷, 2020-10-13 17-29-41\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 다음과 같은 설정 탭이 나옵니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95838892-4a169880-0d7d-11eb-84fe-2a8387557a44.png\" alt=\"스크린샷, 2020-10-13 17-55-29\"></p>\n<p>해당 설정파일에서 이름은 상관없고, Service Account만 신경쓰면 됩니다.<br>\nService Account를 등록하기 위해서 아래 작업을 진행합니다.</p>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>GCP에서 JSON파일 형태의 인증키를 생성해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836229-2867e200-0d7a-11eb-9ce2-7f1371e9fe11.png\" alt=\"스크린샷, 2020-10-13 17-33-04\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같은 식의 JSON 파일 형식의 키가 LOCAL에 다운받아집니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836300-3f0e3900-0d7a-11eb-9b66-7b7e505ad580.png\" alt=\"스크린샷, 2020-10-13 17-33-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>해당 파일을 업로드 해주게 되면 아래와 같이 클러스터 환경 설정 탭이 나옵니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95836441-66fd9c80-0d7a-11eb-807e-66cc75f0095a.png\" alt=\"스크린샷, 2020-10-13 17-34-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>세부 설정들을 설정 후 CREATE를 누르면 아래와 같이 클러스터가 생성 됩니다.!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95839731-50f1db00-0d7e-11eb-9562-b5e45eefe3e7.png\" alt=\"스크린샷, 2020-10-13 18-02-50\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"2-구성되어있는-gke-연동\" style=\"position:relative;\"><a href=\"#2-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4%EC%9E%88%EB%8A%94-gke-%EC%97%B0%EB%8F%99\" aria-label=\"2 구성되어있는 gke 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 구성되어있는 GKE 연동</h3>\n<br/>\n<ul>\n<li>\n<p>이미 생성되어 있는 GKE 클러스터를 추가해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95843414-a4febe80-0d82-11eb-879b-6850a7bf361c.png\" alt=\"스크린샷, 2020-10-13 17-42-11\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>위 메뉴로 들어가 기본설정을 마치면 아래와 같이 노드로 연결하는 명령어가 나옵니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95843898-353d0380-0d83-11eb-8f8d-a5f020473aca.png\" alt=\"스크린샷, 2020-10-13 18-34-37\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>GCLOU Shell에서 해당 명령어를 입력!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>nasa1515<span class=\"token punctuation\">)</span>$ curl <span class=\"token operator\">--</span>insecure <span class=\"token operator\">-</span><span class=\"token class-name\">sfL</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.79</span><span class=\"token number\">.179</span><span class=\"token operator\">/</span>v3<span class=\"token operator\">/</span>import<span class=\"token operator\">/</span>qw6zts2kzgshvwr5bl62bxn5vpghcdmxwmdskp5xgmfjhc6596v7bx<span class=\"token punctuation\">.</span>yaml <span class=\"token operator\">|</span> kubectl apply <span class=\"token operator\">-</span>f <span class=\"token operator\">-</span>\nclusterrole<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>proxy<span class=\"token operator\">-</span>clusterrole<span class=\"token operator\">-</span>kubeapiserver created\nclusterrolebinding<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>proxy<span class=\"token operator\">-</span>role<span class=\"token operator\">-</span>binding<span class=\"token operator\">-</span>kubernetes<span class=\"token operator\">-</span>master created\n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>system created\nserviceaccount<span class=\"token operator\">/</span>cattle created\nclusterrolebinding<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>admin<span class=\"token operator\">-</span>binding created\nsecret<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>credentials<span class=\"token operator\">-</span>61fa6cb created\nclusterrole<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>admin created\ndeployment<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>cattle<span class=\"token operator\">-</span>cluster<span class=\"token operator\">-</span>agent created</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>잠시 API가 연동되는 시간을 기다리면 아래와 같이 클러스터가 연동 됩니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95844827-54886080-0d84-11eb-8106-b48eccb53ef7.png\" alt=\"스크린샷, 2020-10-13 18-45-48\"></p>\n</li>\n</ul>\n<br/>\n<p><code class=\"language-text\">이제 기본적인 Rancher 클러스터 환경 구성이 완료되었습니다.</code></p>\n<br/>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Rancher를 사용해서 GKE k8s 클러스터를 생성하는 법을 알아봤습니다.<br>\n쓰면 쓸수록 멀티클라우드의 쿠버네티스 환경에 아주 적합한 툴인 것을 느끼고 있으나<br>\n한국에서는 많이 사용하지 않는 이유를 잘 모르겠습니다.<br>\n해외 스택을 들어가보면 SPINNAKER vs Rancher의 구도로 사람들이 많이 사용하고 있는데<br>\n한국에서는 SPINNAKER가 주를 이루고 있네요…아쉽습니다   </p>\n<p>다음 포스트에는 Rancher 위에 Argo-CD를 올려서 배포를 자동화 해봅시다!</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\">✔ 환경구성</a></p>\n<ul>\n<li><a href=\"#gke-service---rancher-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95\">GKE SERVICE - Rancher 서비스 구축.</a></li>\n<li><a href=\"#1-rancher%EB%A1%9C-gke-%EC%83%9D%EC%84%B1\">1. Rancher로 GKE 생성</a></li>\n<li><a href=\"#2-%EA%B5%AC%EC%84%B1%EB%90%98%EC%96%B4%EC%9E%88%EB%8A%94-gke-%EC%97%B0%EB%8F%99\">2. 구성되어있는 GKE 연동</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다 이전 포스트와 다른점은 이전에는 이미 구성되어있는 클러스터를 사용했다면 이번 포스트에서는 GKE를 사용했다는 점입니다!! 사용 할 툴을 다음과 같습니다.   docker, Rancher (GKE) k8s ✔ 환경구성 환경구성은 다음과 같습니다. 스크린샷, 2020-10-13 17-18-15 Rancher : Rancher master가 띄워져있는 Cluster 관리 서버 Jenkins : 이전 포스트에서 설정한 CI 작동 서버 gke : GKE 클러스터 노드 GKE SERV…","frontmatter":{"date":"August 06, 2021","title":"[DEVOPS] - GKE Cluster를 Rancher에 연동하기","categories":"DevOps GCP","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-rancher-gke/"}},"next":{"id":"369278cb-c762-599f-ba00-0a2a53a49b54","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다  </p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>Rancher (GCP INSTANCE)</li>\n<li>k8s (GKE), ON-PRE로 구성된 클러스터</li>\n<li>ARgoCD</li>\n</ul>\n<hr>\n<br/>\n<h2 id=\"-ranche-환경으로-서비스-구축을-해봅시다\" style=\"position:relative;\"><a href=\"#-ranche-%ED%99%98%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95%EC%9D%84-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\" ranche 환경으로 서비스 구축을 해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ RANCHE 환경으로 서비스 구축을 해봅시다.</h2>\n<p>Rancher는 Rancher Labs에서 개발한 오픈 소스컨테이너 오케스트레이션 플랫폼<br>\nRancher 2.0(현재 버전)은 Kubernetes 기반으로 개발되었으며 기존 온프레미스 환경을<br>\n비롯한 멀티 클라우드 환경을 통합 관제할 수 있도록 지원합니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/96835487-99944d00-147e-11eb-883d-602a97991ed7.png\" alt=\"스크린샷, 2020-10-22 15-52-21\"></p>\n<br/>\n<hr>\n<h3 id=\"rancher로-k8s-클러스터-구성\" style=\"position:relative;\"><a href=\"#rancher%EB%A1%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1\" aria-label=\"rancher로 k8s 클러스터 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RANCHER로 K8S 클러스터 구성</h3>\n<br/>\n<ul>\n<li>\n<p>DOCKER 설치 [전 노드 동일하게 진행]</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">yum repository 설정 추가\n$ sudo yum install <span class=\"token operator\">-</span>y yum<span class=\"token operator\">-</span>utils device<span class=\"token operator\">-</span>mapper<span class=\"token operator\">-</span>persistent<span class=\"token operator\">-</span>data lvm2\n$ sudo yum<span class=\"token operator\">-</span>config<span class=\"token operator\">-</span>manager <span class=\"token operator\">--</span><span class=\"token keyword\">add</span><span class=\"token operator\">-</span><span class=\"token class-name\">repo</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>centos<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>ce<span class=\"token punctuation\">.</span>repo</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>도커 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">sudo yum <span class=\"token operator\">-</span>y install docker<span class=\"token operator\">-</span>ce docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli containerd<span class=\"token punctuation\">.</span>io</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>도커 설치 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">sudo systemctl start docker\nsudo systemctl enable docker\nsudo docker <span class=\"token class-name\">version</span>\nClient<span class=\"token punctuation\">:</span> Docker Engine <span class=\"token operator\">-</span> <span class=\"token class-name\">Community</span>\nVersion<span class=\"token punctuation\">:</span>           <span class=\"token number\">19.03</span><span class=\"token number\">.13</span>\n<span class=\"token class-name\">API</span> version<span class=\"token punctuation\">:</span>       <span class=\"token number\">1.40</span>\n<span class=\"token class-name\">Go</span> version<span class=\"token punctuation\">:</span>        go1<span class=\"token punctuation\">.</span><span class=\"token number\">13.15</span>\n<span class=\"token class-name\">Git</span> commit<span class=\"token punctuation\">:</span>        4484c46d9d\nBuilt<span class=\"token punctuation\">:</span>             Wed Sep <span class=\"token number\">16</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">03</span><span class=\"token punctuation\">:</span><span class=\"token number\">45</span> <span class=\"token number\">2020</span>\nOS<span class=\"token operator\">/</span>Arch<span class=\"token punctuation\">:</span>           linux<span class=\"token operator\">/</span><span class=\"token class-name\">amd64</span>\nExperimental<span class=\"token punctuation\">:</span>      <span class=\"token class-name\">false</span>\n\nServer<span class=\"token punctuation\">:</span> Docker Engine <span class=\"token operator\">-</span> <span class=\"token class-name\">Community</span>\nEngine<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">19.03</span><span class=\"token number\">.13</span>\n<span class=\"token class-name\">API</span> version<span class=\"token punctuation\">:</span>      <span class=\"token number\">1.40</span> <span class=\"token punctuation\">(</span>minimum version <span class=\"token number\">1.12</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Go</span> version<span class=\"token punctuation\">:</span>       go1<span class=\"token punctuation\">.</span><span class=\"token number\">13.15</span>\n<span class=\"token class-name\">Git</span> commit<span class=\"token punctuation\">:</span>       4484c46d9d\nBuilt<span class=\"token punctuation\">:</span>            Wed Sep <span class=\"token number\">16</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span><span class=\"token number\">02</span><span class=\"token punctuation\">:</span><span class=\"token number\">21</span> <span class=\"token number\">2020</span>\nOS<span class=\"token operator\">/</span>Arch<span class=\"token punctuation\">:</span>          linux<span class=\"token operator\">/</span><span class=\"token class-name\">amd64</span>\nExperimental<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">false</span>\ncontainerd<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">1.3</span><span class=\"token number\">.7</span>\nGitCommit<span class=\"token punctuation\">:</span>        8fba4e9a7d01810a393d5d25a3621dc101981175\nrunc<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">1.0</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token class-name\">rc10</span>\nGitCommit<span class=\"token punctuation\">:</span>        dc9208a3303feef5b3839f4323d9beb36df0a9dd\ndocker<span class=\"token operator\">-</span>init<span class=\"token punctuation\">:</span>\nVersion<span class=\"token punctuation\">:</span>          <span class=\"token number\">0.18</span><span class=\"token number\">.0</span>\nGitCommit<span class=\"token punctuation\">:</span>        fec3683</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"docker-in-rancher\" style=\"position:relative;\"><a href=\"#docker-in-rancher\" aria-label=\"docker in rancher permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker in RANCHER</h3>\n<p>다만!!! 그전에 사전준비가 있습니다</p>\n<p>WDI 환경에서 rancher를 통해 k8s 클러스터를 관리하기 위해서, 보안정책에 추가 port 오픈이 필요합니다.   </p>\n<p>RANCHER에 사용되는 포트는 <a href=\"https://rancher.com/docs/rancher/v2.x/en/installation/references/\">공식 문서</a>에서 확인 가능합니다.</p>\n<p>보안 정책에서 inbound 포트를 허용하도록 등록합니다.<br>\n그러나 저의 경우 Firewall을 종료하는 것으로 마무리 했습니다..<br>\n다만 GCP의 환경일 경우 GCP의 방화벽에서는 열여줘야 합니다! </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token number\">2376</span> TCP\n<span class=\"token number\">2379</span><span class=\"token operator\">-</span><span class=\"token number\">2380</span> TCP\n<span class=\"token number\">8472</span> UDP\n<span class=\"token number\">9099</span> TCP\n<span class=\"token number\">6783</span> TCP\n<span class=\"token number\">6783</span><span class=\"token operator\">-</span><span class=\"token number\">6784</span> UDP\n<span class=\"token number\">10250</span> TCP\n<span class=\"token number\">10254</span> TCP\n<span class=\"token number\">30000</span><span class=\"token operator\">-</span><span class=\"token number\">32767</span> TCP<span class=\"token operator\">/</span>UDP</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h3>\n<p><a href=\"https://rancher.com/docs/rancher/v2.x/en/installation/single-node/\">공식문서</a>  </p>\n<p>저의 경우 nasa-master : rancher 메인 서버를 한대만 사용하고<br>\n나머지 nasa-node1-2 : agent로 전체 서버에 사용하는 구조로 진행할 예정했습니다.  </p>\n<br/>\n<ul>\n<li>\n<p>MASTER 서버 Rancher Server 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">docker run <span class=\"token operator\">-</span>d <span class=\"token operator\">--</span>restart<span class=\"token operator\">=</span>unless<span class=\"token operator\">-</span>stopped \\\n<span class=\"token operator\">--</span>privileged <span class=\"token operator\">-</span>p <span class=\"token number\">80</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token operator\">-</span>p <span class=\"token number\">443</span><span class=\"token punctuation\">:</span><span class=\"token number\">443</span> \\\n<span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>host<span class=\"token operator\">/</span>certs<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>container<span class=\"token operator\">/</span>certs \\\n<span class=\"token operator\">-</span><span class=\"token class-name\">e</span> SSL_CERT_DIR<span class=\"token operator\">=</span><span class=\"token string\">\"/container/certs\"</span> \\\nrancher<span class=\"token operator\">/</span>rancher<span class=\"token punctuation\">:</span>latest</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>간단하게 설치를 하면 GCP의 External Ip로 대쉬보드 접근이 가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94093474-3f40a600-fe58-11ea-96a4-f39b52a40e5c.png\" alt=\"스크린샷, 2020-09-24 11-22-26\">\n이후 관리자 PWD 설정등을 마무리 해줍시다</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"이제-k8s-클러스터를-생성-후-노드를-연결-해봅시다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0%EB%A5%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"이제 k8s 클러스터를 생성 후 노드를 연결 해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 K8S 클러스터를 생성 후 노드를 연결 해봅시다</h3>\n<br/>\n<ul>\n<li>\n<p>Clusters > Add Cluster<br>\n클러스터 유형 Custom, Cluster 제공자 Custom 나머지 옵션은 기본 값으로 진행합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94103036-80dc4b80-fe6e-11ea-97a0-8e337e937af2.png\" alt=\"스크린샷, 2020-09-24 14-01-52\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>기본 구성을 마치면 Cluster의 Node를 추가 할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/94102680-a9177a80-fe6d-11ea-8817-c3ce799320ec.png\" alt=\"스크린샷, 2020-09-24 13-55-47\">\n위에서 각 Node의 역할 별 체크박스에 체크 후 아래의 스크립트를 붙혀넣으면 됩니다.<br>\n추가로 <code class=\"language-text\">Show Advance options</code> tab에서 Node의 IP, 이름을 추가로 설정 가능합니다</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>저의 경우 Master는 ALL, Node1-2는 Worker로 사용할 겁니다 </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@rancher<span class=\"token operator\">-</span>node2 <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># sudo docker run <span class=\"token operator\">-</span>d <span class=\"token operator\">--</span>privileged <span class=\"token operator\">--</span>restart<span class=\"token operator\">=</span>unless<span class=\"token operator\">-</span>stopped <span class=\"token operator\">--</span>net<span class=\"token operator\">=</span>host <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span> <span class=\"token operator\">--</span><span class=\"token class-name\">server</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.79</span><span class=\"token number\">.179</span> <span class=\"token operator\">--</span>token rpkc8zzs7mvzq4ng8lszpp5ncpfvfl6tm7c2bkmlcvfjb9ncgtzq49 <span class=\"token operator\">--</span>ca<span class=\"token operator\">-</span>checksum e9f82b3c16848a400fa3c5839dd1f7e23dbfbd1a2912dace1cbfca72366581f0 <span class=\"token operator\">--</span>node<span class=\"token operator\">-</span>name rancher<span class=\"token operator\">-</span>node2 <span class=\"token operator\">--</span>address <span class=\"token number\">34.64</span><span class=\"token number\">.144</span><span class=\"token number\">.38</span> <span class=\"token operator\">--</span><span class=\"token keyword\">internal</span><span class=\"token operator\">-</span>address <span class=\"token number\">34.64</span><span class=\"token number\">.144</span><span class=\"token number\">.38</span> <span class=\"token operator\">--</span>worker\nUnable to find image 'rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span>' locally\nv2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span><span class=\"token punctuation\">:</span> Pulling <span class=\"token keyword\">from</span> rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span><span class=\"token class-name\">agent</span>\nf08d8e2a3ba1<span class=\"token punctuation\">:</span> Pull complete \n3baa9cb2483b<span class=\"token punctuation\">:</span> Pull complete \n94e5ff4c0b15<span class=\"token punctuation\">:</span> Pull complete \n1860925334f9<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \ne5d12d0f9a84<span class=\"token punctuation\">:</span> Pull complete \n5116e686c448<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nd4f72327bfd0<span class=\"token punctuation\">:</span> Pull complete \n61bcbcce7861<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nfca783017521<span class=\"token punctuation\">:</span> Pull complete \n29ab00ed6801<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nDigest<span class=\"token punctuation\">:</span> sha256<span class=\"token punctuation\">:</span><span class=\"token class-name\">c8a111e6250a313f1dd5d34696ddbef9068f70ddf4b15ab4c9cefd0ea39b76c1</span>\nStatus<span class=\"token punctuation\">:</span> Downloaded newer image <span class=\"token keyword\">for</span> rancher<span class=\"token operator\">/</span>rancher<span class=\"token operator\">-</span>agent<span class=\"token punctuation\">:</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">4.8</span>\ndb357cd36dc9c2fda9cfce9e42177b560e0e5d25faae743747541bba4b0b92b5</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>각 노드에 스크립트를 입력 후 5~8분정도 지나면 아래와 같이 클러스터가 생성됩니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94103986-dd406a80-fe70-11ea-858e-3b27ef50a871.png\" alt=\"스크린샷, 2020-09-24 14-18-44\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 k8s의 배포가 완료 되었는지 Rancher에서 지원하는 CLI로 확인해봅시다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104127-458f4c00-fe71-11ea-8e6b-6d21402da47c.png\" alt=\"스크린샷, 2020-09-24 14-21-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 노드 정보를 받아옵니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104178-6192ed80-fe71-11ea-911a-7f8350316725.png\" alt=\"스크린샷, 2020-09-24 14-22-27\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>추가적으로 대쉬보드의 Cluster 탭을 확인해보면 Cluster들의 상태를 모니터링 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/94104307-aae33d00-fe71-11ea-938e-da9101a39fef.png\" alt=\"스크린샷, 2020-09-24 14-24-29\"></p>\n</li>\n</ul>\n<h3 id=\"자-이제-rancher로-기본적인-클러스터-구성이-완료되었습니다\" style=\"position:relative;\"><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-rancher%EB%A1%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1%EC%9D%B4-%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"자 이제 rancher로 기본적인 클러스터 구성이 완료되었습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자 이제 Rancher로 기본적인 클러스터 구성이 완료되었습니다.!</h3>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Rancher를 사용해서 k8s 클러스터를 생성하는 법을 알아봤습니다.<br>\n사실 이전까지는 클러스터를 구축할때 kubeadm으로 하나하나 설정을 잡아주면서 구축했었는데<br>\n우연히 Rancher라는 툴을 알게되어 사용해봤는데 만족합니다<br>\nRancher에 대한 추가포스트로 모니터링이나 툴등을 연동하는 포스트도 추후에 올릴 예정이구요!<br>\n다음 포스트에는 GKE 기반의 클러스터를 Rancher로 생성, 연동하는 포스트입니다!!.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-ranche-%ED%99%98%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B5%AC%EC%B6%95%EC%9D%84-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">✔ RANCHE 환경으로 서비스 구축을 해봅시다.</a></p>\n<ul>\n<li><a href=\"#rancher%EB%A1%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1\">RANCHER로 K8S 클러스터 구성</a></li>\n<li><a href=\"#docker-in-rancher\">Docker in RANCHER</a></li>\n<li><a href=\"#%EC%84%A4%EC%B9%98\">설치</a></li>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-k8s-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0%EB%A5%BC-%EC%83%9D%EC%84%B1-%ED%9B%84-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%97%B0%EA%B2%B0-%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">이제 K8S 클러스터를 생성 후 노드를 연결 해봅시다</a></li>\n<li><a href=\"#%EC%9E%90-%EC%9D%B4%EC%A0%9C-rancher%EB%A1%9C-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1%EC%9D%B4-%EC%99%84%EB%A3%8C%EB%90%98%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4\">자 이제 Rancher로 기본적인 클러스터 구성이 완료되었습니다.!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 05, 2021","title":"[DEVOPS] - Rancher를 사용한 Kubernetes Cluster 구축","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-rancher/"}},"prev":{"id":"85410047-efe9-5c0d-aa1f-e10ed1571e2d","html":"<p>머리말  </p>\n<p>안녕하세요 NASA입니다!!.<br>\n이번 포스트에서는 Open Source인 Gitops기반의 Argo-CD 를 이용한 배포에 대해서 포스트했습니다<br>\n앞서 다룬 포스트에서 기본적인 환경구성은 모두 완료되었고 이제부터 진정한 파이프라인 구성입니다!!</p>\n<hr>\n<ul>\n<li>사용 할 툴을 다음과 같습니다.  </li>\n<li>Rancher (GKE)</li>\n<li>Argo-cd</li>\n</ul>\n<hr>\n<h2 id=\"-환경구성\" style=\"position:relative;\"><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\" aria-label=\" 환경구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 환경구성</h2>\n<ul>\n<li>환경구성의 경우 이전 포스트에서 모두 완료했습니다!!</li>\n<li>다만 클러스터 내부에 직접 들어가 Argo-CD를 설치하는게 아닌 Rancher의 카탈로그를 사용해서 자동 Helm 배포를 진행합니다</li>\n</ul>\n<hr>\n<h2 id=\"-rancher-argo-cd-plugin을-설치\" style=\"position:relative;\"><a href=\"#-rancher-argo-cd-plugin%EC%9D%84-%EC%84%A4%EC%B9%98\" aria-label=\" rancher argo cd plugin을 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Rancher Argo-CD Plugin을 설치</h2>\n<p>구축중인 파이프라인의 전제적인 Service Flow는 다음과 같습니다</p>\n<ul>\n<li><code class=\"language-text\">CI : Jenkins -> DockerHUB / CD : Gitlab -> Argo-CD -> Rancher Cluseter</code>   <br>\nApi를 통한 이미지 배포 (Rolling update) 진행 및 히스토리 관리 예정.</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"작업-시작-전-정보\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85-%EC%8B%9C%EC%9E%91-%EC%A0%84-%EC%A0%95%EB%B3%B4\" aria-label=\"작업 시작 전 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작업 시작 전 정보!</h3>\n<p>— > Docker Containor Restart</p>\n<p>도커의 경우 VM과는 다르다 컨테이너란 프로세스의 개념으로 생각하면된다<br>\nGCP 인스턴스의 Docker로 실행한 Jenkins가 이로 인해 문제를 발생시켰다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker ps <span class=\"token operator\">-</span>a\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS                      PORTS               NAMES\nd8cbbb69e267        jenkins<span class=\"token operator\">/</span>jenkins<span class=\"token punctuation\">:</span>latest   <span class=\"token string\">\"/sbin/tini -- /usr/…\"</span>   <span class=\"token number\">18</span> hours <span class=\"token return-type class-name\">ago</span>        Exited <span class=\"token punctuation\">(</span><span class=\"token number\">143</span><span class=\"token punctuation\">)</span> <span class=\"token number\">17</span> hours ago                       jenkins\n<span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<p>이렇게 인스턴스를 재부팅하면 컨테이너가 죽는다…</p>\n<p>그럼 위의 명령어로 해당 컨테이너 아이디를 확인 후 Container restart 명령어로 되살리면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@jenkins <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker container restart d8cbbb69e267\nd8cbbb69e267</code></pre></div>\n<br/>\n<ul>\n<li>\n<p>Rancher 대쉬보드 -> APP -> Launch 탭에 접속</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95819968-285be800-0d62-11eb-810c-34a4666edeac.png\" alt=\"aaaa\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Argo-CD Plugin 검색 후 각 노드에 배포</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820019-47f31080-0d62-11eb-8b41-3952f785acac.png\" alt=\"스크린샷, 2020-10-13 14-42-08\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이런 설정들은 기본으로 두어도 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820058-5e00d100-0d62-11eb-8110-10b3149c4826.png\" alt=\"스크린샷, 2020-10-13 14-42-46\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같이 Rancher 대쉬보드에서 배포된 Apps에 대해서 확인 할 수 있습니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820133-838dda80-0d62-11eb-84d2-7ee6115b69cf.png\" alt=\"스크린샷, 2020-10-13 14-43-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>배포가 모두 완료된 후 ARGO-CD APPS에 들어가면 아래와 같이 Endpoint 주소를 띄웁니다.\n해당 주소로 접속!!\n<img src=\"https://user-images.githubusercontent.com/69498804/95820242-b6d06980-0d62-11eb-8bc9-5f0705adeb23.png\" alt=\"스크린샷, 2020-10-13 14-45-13\"></li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 다음과 같은 Argo-CD의 대쉬보드에 접속이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820317-db2c4600-0d62-11eb-8789-ef49d07cc6c6.png\" alt=\"스크린샷, 2020-10-13 14-46-16\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>하지만 관리자 PASSWORD는 서버명으로 설정되기 때문에 아래 POD에 접속합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820435-0a42b780-0d63-11eb-8bb3-9c73de758bbd.png\" alt=\"스크린샷, 2020-10-13 14-47-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>아래 POD의 전체 ID가 현재 관리자(ADMIN) 계정의 패스워드입니다. 입력 후 접속!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820534-3100ee00-0d63-11eb-8460-26824e97e779.png\" alt=\"스크린샷, 2020-10-13 14-48-38\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>정상적으로 접속이 되었다면 아래와 같이 배포 파이프라인을 설정 할 수 있는 창이 나오게 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820622-5aba1500-0d63-11eb-9f27-1ac1fdc3b5d4.png\" alt=\"스크린샷, 2020-10-13 14-49-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>설정 -> 저장소 탭에서 연동할 GITALB의 주소를 등록해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95822592-2d6f6600-0d67-11eb-8e0f-da14e9b434dd.png\" alt=\"스크린샷, 2020-10-13 15-17-13\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>New APP을 눌러 새로운 파이프라인을 설정해줍니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95820959-0499a180-0d64-11eb-832f-bf6a4f4fb2a8.png\" alt=\"스크린샷, 2020-10-13 14-54-35\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같은 PipeLINE App이 하나 만들어집니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821114-4fb3b480-0d64-11eb-94a1-eaa4df36079a.png\" alt=\"스크린샷, 2020-10-13 14-56-40\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>GITLAB 저장소에는 아래와 같은 두 파일이 존재하고 내용을 다음과 같다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821188-6fe37380-0d64-11eb-9d94-76b0837a8d56.png\" alt=\"스크린샷, 2020-10-13 14-57-33\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>deploy.yaml 예제.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Deployment</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\nlabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\nspec<span class=\"token punctuation\">:</span>\nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">deploy</span>\n    spec<span class=\"token punctuation\">:</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nasa1415<span class=\"token operator\">/</span>devops<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n        name<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">app</span>\n        ports<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>service.yaml 예제.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span><span class=\"token class-name\">svc</span>\nspec<span class=\"token punctuation\">:</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">NodePort</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span>\n    nodePort<span class=\"token punctuation\">:</span> <span class=\"token number\">31111</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa1515<span class=\"token operator\">-</span>deploy</code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>이제 만들어둔 App에서 SYNC를 누르게 되면</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95821383-c0f36780-0d64-11eb-8691-2538c3b7bc85.png\" alt=\"스크린샷, 2020-10-13 14-59-49\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 배포파일을 읽어와 노드에 배포합니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95823833-4547e980-0d69-11eb-842b-ea9e04341594.png\" alt=\"스크린샷, 2020-10-13 15-32-08\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 Rancher에서의 로그를 보면 다음과 같이 Argo-cd에서의 배포 로그를 확인가능합니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95823941-72949780-0d69-11eb-8e65-d016680a0a4e.png\" alt=\"스크린샷, 2020-10-13 15-33-22\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>추가적으로 Rancher에서 확인해보면 배포가 정상적이고 서비스 중임을 확인 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/95824040-9b1c9180-0d69-11eb-9c5b-4b09b626218a.png\" alt=\"스크린샷, 2020-10-13 15-34-33\"></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h3>\n<p>이번 포스트에서는 Argo-CD를 설치하고 툴을 통해서 배포하는 법을 알아봤습니다.<br>\n직접 설치한 것이 아니라 Rancher의 기능을 이용해서 다른 불필요한 트러블 슈팅을 줄여서 그나마 짧게 끝난 것 같습니다.<br>\n이렇게 메니페스트 파일을 통해서 자동으로 컨테이너를 올리고 오케스트레이션 하는 것들을 직접해보니<br>\n이제서야 DevOps 엔지니어에 대해서 쌀알 만큼 알아가고 있는 것 같은 느낌입니다. </p>\n<p>다음 포스트에는 실제 취약점 검사 툴 들을 올리고 서비스, DB 연동들까지 진행하겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1\">✔ 환경구성</a></li>\n<li>\n<p><a href=\"#-rancher-argo-cd-plugin%EC%9D%84-%EC%84%A4%EC%B9%98\">✔ Rancher Argo-CD Plugin을 설치</a></p>\n<ul>\n<li><a href=\"#%EC%9E%91%EC%97%85-%EC%8B%9C%EC%9E%91-%EC%A0%84-%EC%A0%95%EB%B3%B4\">작업 시작 전 정보!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 07, 2021","title":"[DEVOPS] - Argo-CD를 이용한 배포 자동화","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-argocd/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/devops-rancher-gke/","nextSlug":"/devops-rancher/","prevSlug":"/devops-argocd/"}},"staticQueryHashes":["1073350324","2938748437"]}