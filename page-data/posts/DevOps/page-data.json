{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/DevOps","result":{"pageContext":{"currentCategory":"DevOps","categories":["All","LINUX","AZURE","DATA","Kubernetes","GCP","DevOps","DOCKER","Error-Report","NETWORK","AWS"],"edges":[{"node":{"id":"0c0f7578-bb81-557a-8d80-32a4858eeb47","excerpt":"머리말   이번 포스트로 이제 파이프라인에서 동작하는 전체적인 보안툴에 대한 포스트는 끝났습니다. 최종적으로는    SonarQube로 Build 될 이미지의 소스코드에 대한 전략적 정적분석을    Anchore로 빌드된 이미지에 대한 분석을   OWASP ZAP으로 배포 된 서비스에 대한 동적분석   위 세가지 보안 항복을 Jenkins를 이용해 자동화 하였습니다. 사용 할 툴을 다음과 같습니다.   Jenkins Sonarqube ✔ SonarQube ?? 위키백과 왈 소나큐브(SonarQube, 이전 이름: 소나/Sonar)는 20개 이상의 프로그래밍 언어에서 버그, 코드 스멜, 보안 취약점을 발견할 목적으로 정…","fields":{"slug":"/devops-sonarqube/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - SonarQube With Jenkins","date":"August 12, 2021"}},"next":{"fields":{"slug":"/devops-anchor/"}},"previous":{"fields":{"slug":"/date-spark/"}}},{"node":{"id":"db35f671-1882-5449-b83f-40eecad72930","excerpt":"머리말   지난 포스트에서 간단하게 전체적인 파이프라인에 대해서 포스트를 했습니다. 이번 포스트는 Harbor에 배포 될 Container Image 분석 오픈소스 Anchore를 도입했던 포스트를 작성했습니다. 사용 할 툴을 다음과 같습니다.   Jenkins Anchore ✔ Anchore ?? 정말 간단히 설명해서 Docker Image의 취약점을 스캔하는 스캐너라고 생각하면 됩니다. Anchore 오픈 소스 버전은 다음에서 참고할 수 있습니다. https://anchore.com/opensource/ 이미지 분석 컨테이너 이미지의 심층 검사를 수행하여 모든 OS의 패키지, 파일 및 소프트웨어 아티팩트 (Ruby…","fields":{"slug":"/devops-anchor/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - 이미지 분석 툴 Anchore With Jenkins","date":"August 11, 2021"}},"next":{"fields":{"slug":"/devops-harbor/"}},"previous":{"fields":{"slug":"/devops-sonarqube/"}}},{"node":{"id":"f1f3cd19-e979-5f14-987a-47d3f564c240","excerpt":"머리말   그동안 빌드된 이미지를 관리하거나 정적분석 할 때 Docker hub를 기반으로 구성했으나 이번 프로젝트에서는 어떻게 하면 보안에 조금 더 중점을 둘 수 있을까를 생각하다 Harbor를 사용하여 독립적인 저장소로 이미지를 관리하기로 결정하였습니다. 사용 할 툴을 다음과 같습니다.   Jenkins OWASP ZAP ✔ Harbor 설치 (Docker) Harbor 설치의 경우 이미 많은 분들이 더 쉽게 설명해놓으셔서 간단히 넘어가겠습니다.   img 우선 Harbor는 특정 OS에 맞는 docker, docker-compose가 요구됩니다 Centos 7을 기반으로 진행하였습니다. docker-compose…","fields":{"slug":"/devops-harbor/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Private 이미지 저장소 Harbor 도입","date":"August 10, 2021"}},"next":{"fields":{"slug":"/devops-owaspzap/"}},"previous":{"fields":{"slug":"/devops-anchor/"}}},{"node":{"id":"08b7b481-d22d-5769-b198-a051e19e0c19","excerpt":"머리말   이번 포스트에서는 구축된 DevSecOps 파이프라인에서 보안쪽을 강화하기 위해서 OWASP ZAP을 도입한 도입기 포스트입니다. 보통 외부 서버로 두고 서비스의 Port나 IP등을 스캔하지만 저희는 k8s 클러스터에 직접 올려 pod들을 스캐닝 하려고 했습니다. 사용 할 툴을 다음과 같습니다.   Jenkins OWASP ZAP ✔ GCP의 LB IP를 고정 저는 gcloud-sdk를 이용하여 Cloud Shell에서 작업을 진행했습니다 아래와 같이 CLoud Shell에 원격 접속 후 GKE 클러스터에 대한 권한을 받아옵니다 그 후 아래 명령어로 외부 고정 IP를 생성해줍니다 이후에 배포 할 서비스의 메…","fields":{"slug":"/devops-owaspzap/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Jenkins Pipeline에 OWASP ZAP 도입기","date":"August 09, 2021"}},"next":{"fields":{"slug":"/devops-jenkinspush/"}},"previous":{"fields":{"slug":"/devops-harbor/"}}},{"node":{"id":"b022c64e-b03d-5890-807a-f79d479433c2","excerpt":"머리말   이전 포스트에서 간단하게 이미지를 빌드한 뒤 ArgoCD와 SYNC를 맞춰 배포를 자동화한 파이프 라인을 완성했습니다. 이번 포스트에서는 Jenkins에서 해당 이미지를 빌드하는 부분에 대해서 포스트 했습니다. 사용 할 툴을 다음과 같습니다.   Jenkins maven github ArgoCD ✔ 전체 Jenkins 파이프라인 파이프라인 스크립트 파이프라인의 프로세스 소스코드를 Clone 해온 뒤 Build 테스트   Dependency-Check Analysis 로 코드 정적분석   Sonarqube and Quality gate 정적분석   위의 검사에서 에러가 없으면 Docker image build…","fields":{"slug":"/devops-jenkinspush/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Jenkins로 Dvmn 앱 이미지 자동 빌드 및 푸시하기","date":"August 08, 2021"}},"next":{"fields":{"slug":"/devops-gcpfilestore/"}},"previous":{"fields":{"slug":"/devops-owaspzap/"}}},{"node":{"id":"801845e2-ac0a-5de8-bf0a-12fd8d8036e2","excerpt":"머리말   이번 포스트에서는 앱 구동을 위한 MYSQL 이중화입니다 이전 포스트에서 앱 배포를 완료했지만 MYSQL pod의 경우 볼륨의 문제로 하나밖에 뜨지 않아 DB 데이터를 어떻게 저장할지에 대한 고민이 있었습니다. 고민해본 결과 NFS를 만들어서 그쪽에 데이터를 저장해놓고 POD가 실행될때마다 NFS를 읽어오자! 라는 결론이 나왔습니다 그래서 NFS 서버를 구축하려고 하려는 찰나 GCP에서 API 서비스로 제공한다는 소식을 듣고 바로 사용해 보았습니다 사용 할 툴을 다음과 같습니다.   GCP FileStore k8s PV,PVC ArgoCD ✔ 발생 이슈 MYSQL Pod를 두개 이상 띄우려고 할때 아래와 같…","fields":{"slug":"/devops-gcpfilestore/"},"frontmatter":{"categories":"DevOps GCP","title":"[DEVOPS] - GCP의 FileStore (NFS) 를 PV로 사용해보자","date":"August 07, 2021"}},"next":{"fields":{"slug":"/devops-cicd2/"}},"previous":{"fields":{"slug":"/devops-jenkinspush/"}}},{"node":{"id":"bdbab45f-6ba1-56d5-9b14-88db8da9d77d","excerpt":"머리말   이전에 구성한 파이프라인의 전체적인 자동화는 아직 구성이 안됐지만 CI, CD 각각의 자동화는 마쳤습니다. 그렇기에 이번에는 실제 보안 취약점 검사를 위한 오픈소스 툴을 Rancher 클러스터 환경에 배포해봤습니다.!! 사용할 툴은 DVMN인데 기본적으로 PHP 배포판이 대부분이지만 저는 Jenkins에서 Junit등의 취약점 분석을 조금 더 쉽게 하기 위해서 JAVA 기반의 배포판으로 MSA를 만들어 배포했습니다. 사용 할 툴을 다음과 같습니다.   GITHUB ArgoCD Helm kompose ✔ DVWA MSA 생성 DVMN JAVA 링크 해당 주소에서 JAVA기반의 DVWA앱을 확인했습니다!! 그러…","fields":{"slug":"/devops-cicd2/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - 보안 취약점 검사를 위한 Dvmn 앱 자동 배포하기","date":"August 07, 2021"}},"next":{"fields":{"slug":"/gcp-cloudshell/"}},"previous":{"fields":{"slug":"/devops-gcpfilestore/"}}},{"node":{"id":"85410047-efe9-5c0d-aa1f-e10ed1571e2d","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source인 Gitops기반의 Argo-CD 를 이용한 배포에 대해서 포스트했습니다 앞서 다룬 포스트에서 기본적인 환경구성은 모두 완료되었고 이제부터 진정한 파이프라인 구성입니다!! 사용 할 툴을 다음과 같습니다.   Rancher (GKE) Argo-cd ✔ 환경구성 환경구성의 경우 이전 포스트에서 모두 완료했습니다!! 다만 클러스터 내부에 직접 들어가 Argo-CD를 설치하는게 아닌 Rancher의 카탈로그를 사용해서 자동 Helm 배포를 진행합니다 ✔ Rancher Argo-CD Plugin을 설치 구축중인 파이프라인의 전제적인 Service …","fields":{"slug":"/devops-argocd/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Argo-CD를 이용한 배포 자동화","date":"August 07, 2021"}},"next":{"fields":{"slug":"/devops-rancher-gke/"}},"previous":{"fields":{"slug":"/gcp-cloudshell/"}}},{"node":{"id":"3530a618-aa45-5512-8771-62a86a0ea7dc","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다 이전 포스트와 다른점은 이전에는 이미 구성되어있는 클러스터를 사용했다면 이번 포스트에서는 GKE를 사용했다는 점입니다!! 사용 할 툴을 다음과 같습니다.   docker, Rancher (GKE) k8s ✔ 환경구성 환경구성은 다음과 같습니다. 스크린샷, 2020-10-13 17-18-15 Rancher : Rancher master가 띄워져있는 Cluster 관리 서버 Jenkins : 이전 포스트에서 설정한 CI 작동 서버 gke : GKE 클러스터 노드 GKE SERV…","fields":{"slug":"/devops-rancher-gke/"},"frontmatter":{"categories":"DevOps GCP","title":"[DEVOPS] - GKE Cluster를 Rancher에 연동하기","date":"August 06, 2021"}},"next":{"fields":{"slug":"/devops-rancher/"}},"previous":{"fields":{"slug":"/devops-argocd/"}}},{"node":{"id":"369278cb-c762-599f-ba00-0a2a53a49b54","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source인 Rancher를 이용한 k8s 클러스터 구축에 대한 포스트입니다   사용 할 툴을 다음과 같습니다.   Rancher (GCP INSTANCE) k8s (GKE), ON-PRE로 구성된 클러스터 ARgoCD ✔ RANCHE 환경으로 서비스 구축을 해봅시다. Rancher는 Rancher Labs에서 개발한 오픈 소스컨테이너 오케스트레이션 플랫폼 Rancher 2.0(현재 버전)은 Kubernetes 기반으로 개발되었으며 기존 온프레미스 환경을 비롯한 멀티 클라우드 환경을 통합 관제할 수 있도록 지원합니다.  스크린샷, 2020-10-22…","fields":{"slug":"/devops-rancher/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Rancher를 사용한 Kubernetes Cluster 구축","date":"August 05, 2021"}},"next":{"fields":{"slug":"/devops-cicd1/"}},"previous":{"fields":{"slug":"/devops-rancher-gke/"}}},{"node":{"id":"057af5e7-bd29-5bbc-86f2-61487fe7337f","excerpt":"머리말   안녕하세요 NASA입니다!!. 이번 포스트에서는 Open Source를 이용한 DevSecOps CI/CD PIPELINE 구축에 대한 포스트입니다. 다만 포스트의 양이 매우 많아 질 것 같아. CI, CD 별 그리고 툴 별로 포스트를 나눌 예정입니다. 이번 포스트에서는 Jenkins를 이용한 CI 구성 부분을 포스트 했습니다!.. 사용 할 툴을 다음과 같습니다.   gitlab Jenkins Docker, dockerhub ✔ 환경구성 우선 환경 구성은 아래와 같습니다\n캡처 jenkins : 젠킨스 서버의 역할을 하는 서버 (Docker in Docker) Rancher-master : Rancher 기반…","fields":{"slug":"/devops-cicd1/"},"frontmatter":{"categories":"DevOps","title":"[DEVOPS] - Jenkins를 이용한 CI 자동화 구축","date":"August 04, 2021"}},"next":{"fields":{"slug":"/azure-synapse/"}},"previous":{"fields":{"slug":"/devops-rancher/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}