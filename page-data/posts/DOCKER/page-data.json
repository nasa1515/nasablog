{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/DOCKER","result":{"pageContext":{"currentCategory":"DOCKER","categories":["All","LINUX","AZURE","DATA","Kubernetes","GCP","DevOps","DOCKER","Error-Report","NETWORK","AWS"],"edges":[{"node":{"id":"91aeb602-995f-5d6f-bf10-8331113bcafe","excerpt":"머리말    이번 포스트에서는 Docker에서 조금도 간편화된 방법으로 이미지를 제작할 수 있는 Dockerfile에 대해서 포스팅합니다. ✔ DOCKERFILE 은 컨테이너를 만들고 해야하는 일련의 작업들을 미리 선언함으로써 매번 해당 작업을 하지않고도, 컨테이너 생성시 자동으로 등록된 작업이 실행된 후 컨테이너를 생성할 수 있는 파일입니다. Dockerfile은 어플리케이션 개발 외에도 도커 허브에 배포할때,이미지가 아닌, Dockerfile을 이용하여 배포할 수도 있습니다. Dockerfile은 COMMAND-VALUE 쌍으로 구성된 지시어로 이루어진 도커 이미지 설정 파일입니다. 베이스 이미지를 지정, 컨테이너…","fields":{"slug":"/docker-file/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - Dockerfile","date":"June 27, 2021"}},"next":{"fields":{"slug":"/docker-volume/"}},"previous":{"fields":{"slug":"/linux-sed/"}}},{"node":{"id":"bb26cdb7-0ad3-53cc-9c61-d071c65fbd2b","excerpt":"머리말    이전 포스트에서는 도커 컨테이너의 전반적인 운영법에 대해서 포스팅 했었습니다.  이번 포스트에서는 볼륨을 이용해서 실제 도커의 데이터 관리 방법과 그와 관련된 명령어들을 포스트 했습니다. ✔ 도커 볼륨 기본적으로 컨테이너에 생성되는 모든 파일은 컨테이너 레이어에 저장됩니다. 이 데이터들은 컨테이너와 함께 삭제되는 런타임 데이터인데  이 데이터를 영구적으로 저장하려면 반드시 을 사용해야 합니다. 도커의 볼륨-마운트 구조    도커 볼륨을 사용 방법  초기 도커부터 사용했던 방식입니다. 호스트의 특정 디렉토리와 컨테이너의 디렉토리를 연결하는 방식입니다. bind mount는 쉽게 사용할 수 있지만 도커에 의해…","fields":{"slug":"/docker-volume/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - VOLUMES","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker-net2/"}},"previous":{"fields":{"slug":"/docker-file/"}}},{"node":{"id":"19140e2a-39e6-528d-83b0-b371a0d9a02d","excerpt":"머리말    이전 포스트에서는 도커의 네트워크에 대해서 포스팅했습니다.  이번 포스트에서는 이전 포스트에서 포스팅한 네트워크의 종류가 아니라  실제 컨테이너에 사용자가 네트워크 대역대를 직접 설정할 수 있는 MACVLAN과 LINK에 대해서 포스팅합니다. ✔ MACVLAN MacVLan은 브릿지가 없습니다. 대신 서브 인터페이스라는 개념이 등장해서 사용합니다.   물리적인 NIC eth0은 존재하며 에서 여러 하위 인터페이스를 만듬으로써 여러개의 mac 주소를 가질 수 있도록 합니다. 그렇게 되면 생성된 하위 인터페이스들에 여러개의 컨테이너들이 연결되면서 VLAN을 구성할 수 있습니다.   즉 하나의 NIC를 가상화함…","fields":{"slug":"/docker-net2/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - MACVLAN, LINK","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker-network/"}},"previous":{"fields":{"slug":"/docker-volume/"}}},{"node":{"id":"a5cac2cd-ed18-5dc7-8042-ae4cd3358d7b","excerpt":"머리말    이번 포스트에서는 컨테이너들의 서비스와 중요하게 연관되어있는 도커의 네트워크에 대해서 포스트 했습니다.   ✔ DOCKER - 네트워크 유형 도커에는 다양한 네트워크가 존재해 용도에 맞게 네트워크를 선택 할 수 있습니다.    기본으로 사용하는 네트워크는 ,,이 존재하고  명령어로 네트워크 목록을 확인 할 수 있습니다. ✌ BRIDGE NETWORK Bridge는 컨테이너가 사용하는 프라이빗 네트워크입니다. 같은 Bridge로 연결되어 있으면 컨테이너의 IP 주소로 통신할 수 있습니다. 외부로 통신 할 때에는  통신을 사용하며 외부에서 Bridge로 통신을 위해선 을 사용해야 합니다.   도커를 설치하면 …","fields":{"slug":"/docker-network/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - Network","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker-image/"}},"previous":{"fields":{"slug":"/docker-net2/"}}},{"node":{"id":"59e72fe7-ba09-5687-9fb1-d0c5b71d1bba","excerpt":"머리말    이전 포스트에서는 도커의 설치방법에 대해서 간단하게 포스팅 했었습니다.  이번 포스트에서는 실제 도커의 컨테이너의 생성 관리 방법 및 명령어들을 포스트 했다. ✔ 도커 이미지 도커는 기본적으로 라고 하는 중앙 이미지 저장소에서 이미지를 내려받습니다. 도커 허브는 도커가 공식적으로 제공하고 있는 이미지 저장소로 쉽게 올리고 내려받을 수 있습니다.  Docker Hub 도커 허브는 도커에서 제공하는 기본 이미지 저장소로 ubuntu, centos, debian등의 베이스 이미지와 ruby, golang, java, python 등의 공식 이미지가 저장되어 있습니다. 일반 사용자들이 만든 이미지도 50만 개가 …","fields":{"slug":"/docker-image/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - IMAGE","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker-container/"}},"previous":{"fields":{"slug":"/docker-network/"}}},{"node":{"id":"17ac3a0c-cbd6-554f-a341-f5738ed79af3","excerpt":"머리말   이전 포스트에서는 도커의 이론적이 내용에 대해서 간단하게 정리한 포스팅을 했었습니다. 이번 포스트에서는 이미지를 이용해서 실제 도커의 컨테이너 생성 관리 방법과 그와 관련된 명령어들을 포스트 했습니다. ✔ 도커 컨테이너 드디어 컨테이너를 실행해 보려고 합니다. 컨테이너의 위대함을 보기위해 여러개의 프로그램을 마구잡이로 띄워보겠습니다. 컨테이너를 실행하는 명령어는 다음과 같습니다. 다음은 자주 사용하는 옵션들입니다. Ubuntu OS 기반의 컨테이너를 생성해보겠습니다. 명령어를 사용하면 사용할 이미지가 저장되어 있는지 확인하고 없다면 다운로드를 한 후 컨테이너를 하고  합니다. 위 예제는  이미지를 다운받은 …","fields":{"slug":"/docker-container/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - CONTAINER","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker/"}},"previous":{"fields":{"slug":"/docker-image/"}}},{"node":{"id":"86ebeb5f-f270-5f35-ac2b-da9d5887dfe4","excerpt":"머리말    데브옵스나, 인프라엔지니어들에겐 필수적으로 익혀야 하는 기술이지만 나는 이제야 처음 접하기 시작해서 남들보다 쪼금 늦은 것 같다.  약간의 실습만 해봤는데도 이렇게 편하게 할 수 있는 작업들을 나는 그동안 make && install 명령어를 낭비했던 것 같다.  이번 포스트에서는 도커란 무엇인지에 대해 설명한다.   ✔ 도커란 무엇인가?  도커는 의 (오픈소스) 가상화 플랫폼입니다. 라 하면 배에 실는 네모난 화물 수송용 박스를 생각할 수 있는데 각각의 컨테이너 안에는 옷, 신발, 전자제품, 술, 과일등 다양한 화물을 넣을 수 있고 규격화되어 컨테이너선이나 트레일러등 다양한 운송수단으로 쉽게 옮길 수 있…","fields":{"slug":"/docker/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - DOCKER란?","date":"June 26, 2021"}},"next":{"fields":{"slug":"/docker-install/"}},"previous":{"fields":{"slug":"/docker-container/"}}},{"node":{"id":"42ce3601-f03b-5fec-b93c-308b868bf3a5","excerpt":"머리말    이전 포스트에서는 도커에 대해서, 도커와 VM과의 차이 에서 포스팅 했었다.  이번 포스트에서는 실제 도커의 설치방법 및 확인 방법등에 대해 간단하게 포스트 했다. ✔ 도커 설치 도커는 리눅스 컨테이너 기술이므로 macOS나 windows에 설치할 경우 가상머신에 설치가 됩니다. 리눅스 컨테이너 말고 윈도우즈 컨테이너라는 것도 존재하지만 이 포스트는 리눅스를 전제로 합니다.   Linux 리눅스에 도커를 설치하는 방법은 자동 설치 스크립트를 이용하는 것이 가장 쉽습니다. 다음 명령어를 입력하면 root 권한을 요구하고 잠시 기다리면 설치가 완료됩니다. 스크립트를 사용하는 방법 외에도 패키지 저장소에 연결하…","fields":{"slug":"/docker-install/"},"frontmatter":{"categories":"DOCKER","title":"[DOCKER] - Install","date":"June 26, 2021"}},"next":{"fields":{"slug":"/gcp-semi/"}},"previous":{"fields":{"slug":"/docker/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}