{"componentChunkName":"component---src-templates-blog-template-js","path":"/kubernetes-controller/","result":{"data":{"cur":{"id":"059e8eef-76f8-5d37-9aac-1ad3fc2d4868","html":"<p>머리말  </p>\n<p>이번 포스트에서는 자동적으로 POD 및 시스템을 관리 할 수 있는 컨트롤러에 대해서 알아보겠습니다</p>\n<hr>\n<h2 id=\"-라이브니스-프로브\" style=\"position:relative;\"><a href=\"#-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C\" aria-label=\" 라이브니스 프로브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 라이브니스 프로브</h2>\n<p>라이브니스 프로브 개념</p>\n<p>사용자가 모든 오브젝트를 일일이 관리할 수는 없다.<br>\n관리하고자 하더라도 사용자의 사각지대에 있는 오브젝트를 실제 프로덕션 환경에서 관리하기 위해서는 수동 작업은 권장되지 않는다.</p>\n<p>실제 환경에서는 자동적으로 정상적이고 안정적인 상태가 유지되어야 한다.<br>\n쿠버네티스가 이러한 요구를 충족시키기 위해서 사용하는 것이 <code class=\"language-text\">라이브니스 프로브</code>이다.</p>\n<p>라이브니스 프로브는 파드에 의해 컨테이너를 동작시키고 동작중인 컨테이너의 상태를 주기적으로 모니터링한다.<br>\n파드에서 오류가 발생하면 해당 컨테이너를 재시작시킨다.<br>\n쿠버네티스의 핵심이라고 할 수 있는 동작이 바로 이 라이브니스 프로브 덕분에 가능한 것이다.</p>\n<p>​\n<br/></p>\n<p>라이브니스 프로브는 세 가지 방식으로 컨테이너의 상태를 모니터링한다.</p>\n<ul>\n<li><code class=\"language-text\">HTTP GET 프로브</code> : HTTP 요청 / 응답으로 확인</li>\n<li><code class=\"language-text\">TCP 소켓 프로브</code> : 포트 연결 시도해서 확인</li>\n<li><code class=\"language-text\">Exec 프로브</code> : 컨테이너 내부의 바이너리를 실행하고 종료 코드 확인  </li>\n</ul>\n<p>라이브니스 프로브는 현재 동작중인 파드의 상태를 감지하고 재시작 하는데서 그 역할을 다 하지만<br>\n여러 사유로 인해 파드가 삭제되거나 노드 자체에 장애가 발생하는 경우에는 파드를 재 시작 할 수 없다.<br>\n이러한 상황에 대비해 가용성을 높이기 위해서는 RC, RS, DS 등의 컨트롤러를 사용해야 한다.</p>\n<br/>\n<br/>\n<h3 id=\"라이브니스-프로브-생성\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1\" aria-label=\"라이브니스 프로브 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브니스 프로브 생성</h3>\n<p>라이브니스 프로브 생성 - <code class=\"language-text\">정상 상태</code></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">liveness</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    livenessProbe<span class=\"token punctuation\">:</span>\n    httpGet<span class=\"token punctuation\">:</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>\n        port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<p>HTTP GET 프로브를 사용하였으며, 경로는 / 포트는 8080이다.</p>\n<br/>\n<ul>\n<li>\n<p>컨피그 설명</p>\n<ul>\n<li><code class=\"language-text\">livenessProbe</code>: 라이브니스 프로브 정의 </li>\n<li><code class=\"language-text\">httpGet</code> : HTTP GET 프로브 정의</li>\n<li><code class=\"language-text\">tcpSocket</code> : TCP 소켓 프로브 정의 </li>\n<li><code class=\"language-text\">Exec</code>: Exec 프로브 정의</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<p>작성한 YAML 파일로 POD를 생성한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>watch\nNAME                READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          19s</code></pre></div>\n<p>라이브니스의 확인을 위해 <code class=\"language-text\">--watch</code> 옵션을 사용해 지속적으로 모니터링!</p>\n<br/>\n<br/>\n<p>정상적인 상태를 확인했으니 비정상 상태를 만들어 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nkind: Pod\nmetadata:\nname: nasa-pod-liveness-error\nspec:\ncontainers:\n- image: nginx:latest\n    name: nasa\n    ports:\n    - containerPort: 8081\n    protocol: TCP\n    livenessProbe:\n    httpGet:\n        path: /\n        port: 8082</code></pre></div>\n<p>위의 YAML파일과 모두 동일하지만 <code class=\"language-text\">PORT</code>를 임의로 다르게 주어 <code class=\"language-text\">error</code>상태 발생</p>\n<br/>\n<br/>\n<p>POD 를 생성 후 모니터링 해보겠습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>livness<span class=\"token operator\">-</span>error<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error created</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>watch\nNAME                  READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          30s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Pending   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Pending   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     ContainerCreating   <span class=\"token number\">0</span>          0s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          5s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">1</span>          62s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">2</span>          2m1s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">3</span>          3m1s</code></pre></div>\n<br/>\n<br/>\n<p>WATCH로 모니터링중이던 터미널을 확인해보면 변화가 생겼다.<br>\nRESTARTS 필드가 0 에서 양수로 변경된 것은 라이브니스 프로브가 해당 파드를 이상이 있는 것으로 판단하고<br>\n재 시작 시도중임을 의미한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">4</span>          4m2s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">5</span>          5m1s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     CrashLoopBackOff    <span class=\"token number\">5</span>          5m58s</code></pre></div>\n<p>잠시 후에 다시 확인해보면 상태가 CrashLoopBackOff 인 것을 확인할 수 있다.</p>\n<br/>\n<br/>\n<p>POD의 Describe를 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>liveness<span class=\"token operator\">-</span>error\n    <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n    <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n    State<span class=\"token punctuation\">:</span>          <span class=\"token class-name\">Running</span>\n    Started<span class=\"token punctuation\">:</span>      Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    <span class=\"token class-name\">Last</span> State<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">Terminated</span>\n    Reason<span class=\"token punctuation\">:</span>       Error\n    <span class=\"token class-name\">Exit</span> Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">137</span>\n    Started<span class=\"token punctuation\">:</span>      Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    Finished<span class=\"token punctuation\">:</span>     Fri<span class=\"token punctuation\">,</span> <span class=\"token number\">17</span> Aug <span class=\"token number\">2020</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n    Ready<span class=\"token punctuation\">:</span>          True\n    <span class=\"token class-name\">Restart</span> Count<span class=\"token punctuation\">:</span>  <span class=\"token number\">3</span></code></pre></div>\n<br/>\n<br/>\n<p>Exit Code는 프로세스를 종료하기 위한 코드이다(137=128+9 , 9번 시그널 : SIGKILL)  </p>\n<p><code class=\"language-text\">종류</code></p>\n<ul>\n<li>delay</li>\n<li>timeout</li>\n<li>period 가 추가로 존재 한다.<br>\n</li>\n</ul>\n<p>컨테이너 실행 후로부터 모니터링을 시작하기까지 시간을 delay<br>\n모니터링사이에 시간 간격을 timeout으로 표기한다.<br>\n파드가 실행되고 어플리케이션이 제대로 동작하기까지 시간이 걸리므로 초기 지연 시간을 initialDlaySecond 로 정의할 수 있다.<br>\nEvent 필드는 파드의 상태를 시간대별로 확인할 수 있으며 이 경우 라이브니스 프로브에 문제가 있다는 사실을 확인할 수 있다.<br>\n이들은 모두 yaml파일에 정의할 수 있는 내용들이다.</p>\n<br/>\n<hr>\n<h2 id=\"-레플리카셋\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B\" aria-label=\" 레플리카셋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 레플리카셋</h2>\n<p>쿠버네티스가 처음 나왔을 때는 파드를 복제하고 항상성을 유지시키기 위한 수단은 <code class=\"language-text\">레플리케이션 컨트롤러</code>가 유일했습니다  </p>\n<p>그러나 레플리케이션 컨트롤러의 몇몇 문제점과 기능 개선을 위해 레플리카셋이라는 컨트롤러가 추가되었습니다.<br>\n최근에는 레플리케이션 컨트롤러를 사용하지 않고 대부분 레플리카셋을 사용하기에<br>\n이번 포스트에서는 레플리케이션 컨트롤러에 대해서 다루진 않겠습니다. 뭐 어짜피 둘이 거의 비슷합니다!</p>\n<p>​</p>\n<p>레플리케이션 컨트롤러와 레플리카셋의 비교</p>\n<ul>\n<li><code class=\"language-text\">파드의 다중 레이블 지원</code></li>\n<li><code class=\"language-text\">파드에 설정된 레이블의 키만 선택 가능</code></li>\n</ul>\n<p>레플리케이션 컨트롤러에서는 파드의 여러 레이블 중 하나의 레이블에 대해서만 레이블 셀렉터로 관리 파드를 지정할 수 있었고<br>\n반드시 레이블의 key=value가 모두 일치해야만 파드를 지정할 수 있었습니다.<br>\n그러나 레플리카셋은 다중 레이블을 지정할 수 있고 key만 가지고도 레이블을 지정할 수 있습니다.</p>\n<br/>\n<br/>\n<h3 id=\"레플리카셋-생성\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B-%EC%83%9D%EC%84%B1\" aria-label=\"레플리카셋 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레플리카셋 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span> \nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ReplicaSet</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> replicaset<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \nspec<span class=\"token punctuation\">:</span> \nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> \nselector<span class=\"token punctuation\">:</span> \n    matchLabels<span class=\"token punctuation\">:</span> \n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \ntemplate<span class=\"token punctuation\">:</span> \n    metadata<span class=\"token punctuation\">:</span> \n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \n    labels<span class=\"token punctuation\">:</span> \n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \n    spec<span class=\"token punctuation\">:</span> \n    containers<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> replicaset<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \n        image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n        ports<span class=\"token punctuation\">:</span> \n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>레플리케이션 컨트롤러에서는 레이블 셀렉터 항목에 레이블을 직접 지정하지만<br>\n레플리카셋은 <code class=\"language-text\">matchLabels</code> 및 <code class=\"language-text\">matchExpressions</code> 필드로 <code class=\"language-text\">레이블을 선택</code>한다.<br>\n레플리카셋의 레이블 셀렉터는 kubectl explain replicaset.spec.selector로 지정할 수 있다.</p>\n<p>pod와 다르게 추가된 내용만 있습니다. replicas는 생성할 pod의 개수를 설정합니다.<br>\n그리고 레플리카가 포드를 생성할 때 사용할 템플릿을 정의합니다. </p>\n<br/>\n<br/>\n<p>생성 후 RS확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \nreplicaset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa created</code></pre></div>\n<br/>\n<br/>\n<p>레플리카셋 동작 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> replicasets<span class=\"token punctuation\">.</span>apps\nNAME              DESIRED   CURRENT   READY   AGE\nreplicaset<span class=\"token operator\">-</span>nasa   <span class=\"token number\">3</span>         <span class=\"token number\">3</span>         <span class=\"token number\">3</span>       3m9s</code></pre></div>\n<br/>\n<br/>\n<p>POD 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS    RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>7fvdx   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>gbft4   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>r84dt   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          2m21s</code></pre></div>\n<p>모두 정상적을 동작 한다!! 하지만 RS의 기능 중의 하나를 더 알아 봅시다!</p>\n<br/>\n<br/>\n<p>레플리카셋 <code class=\"language-text\">레이블 셀렉터</code> 사용</p>\n<ul>\n<li><code class=\"language-text\">matchLabels</code> 레이블 셀렉터</li>\n</ul>\n<p>matLabels 레이블 셀렉터는 오브젝트 파일에서 다음과 같은 형식으로 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nspec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n    key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">value</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>matchLabels로 레이블 셀렉터를 사용하는 경우<br>\n레플리케이션 컨트롤러와 레플리카셋이 동일하게 동작한다.</p>\n<br/>\n<br/>\n<p>matchExpressions 레이블 셀렉터</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    matchExpressions<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> key<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>stirng<span class=\"token operator\">></span>\n    <span class=\"token keyword\">operator</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>In <span class=\"token operator\">|</span> NotIn <span class=\"token operator\">|</span> Exists <span class=\"token operator\">|</span> DoesNotExist<span class=\"token operator\">></span>\n    values<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token operator\">></span></code></pre></div>\n<p>위의 매치레이블과 다른 점은 <code class=\"language-text\">key</code>와 <code class=\"language-text\">values</code>를 따로 지정한다는 점이다.<br>\noperator 필드는 key와 value 사이의 연산을 담당하는 부분으로 아래 네 가지 중 하나를 선택해서 매칭시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">In <span class=\"token punctuation\">:</span> 레이블의 키와 값이 지정된 값으로 일치해야 함\nNotIn<span class=\"token punctuation\">:</span> 레이블의 키와 값이 지정된 값과 일치하지 않아야 함\nExists<span class=\"token punctuation\">:</span> 레이블의 키가 포함되어야 함\nDoesNotExists<span class=\"token punctuation\">:</span> 레이블의 키가 포함되지 않아야 함</code></pre></div>\n<br/>\n<br/>\n<p>이번에는 같은 label을 갖고있는 replicas의 수를 증가시켜보겠습니다.<br>\nyaml 파일의 replicas를 4로 변경하고 다시 실행하면 변경된 것을 확인 할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">replicas<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> </code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># vim nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>rs<span class=\"token punctuation\">.</span>yml \nreplicaset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa configured</code></pre></div>\n<br/>\n<p>이전에는 <code class=\"language-text\">created</code>라는 출력이 나왔는데<br>\n이번에는 <code class=\"language-text\">configured</code>라는 출력이 나왔습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS    RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          32s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          52s</code></pre></div>\n<p>POD도 확인해보면 이전에 생성되었던 POD는 종료되지 않고<br>\n새로운 POD만 추가 실행 된 것을 확인 할 수 있습니다.</p>\n<br/>\n<br/>\n<h3 id=\"동작-원리\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 원리</h3>\n<p>레플리카셋은 자동으로 복구해주고 생성을 확인하는 것을 보면 <code class=\"language-text\">tracking</code> 하고 있는 것 같습니다.</p>\n<p>이러한 것은 어떻게 이루어 지는 것일까요??</p>\n<p>이는 레플리카셋이 라벨셀렉터로 같은 라벨을 갖고 있는 포드들을 계속 확인합니다.<br>\n실제로 동일한 라벨이 설정한 라플리카 개수만큼 다시 복구해줍니다.<br>\n그리고 동일한 포드의 개수가 레플리카에 설정한 개수와 같다면 특별한 작업을 진행하지 않습니다. </p>\n<p>결론적으로 레플리카셋은 포드의 개수를 일정한 개수를 유지하는 기능을 합니다.</p>\n<br/>\n<br/>\n<p>그리고 추가로 pod의 metadata 변경도 가능합니다. </p>\n<p><code class=\"language-text\">edit</code> 옵션을 사용해 특정 POD의 라벨을 edit-test로 바꾸어 보았습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl edit pod replicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg\npod<span class=\"token operator\">/</span>replicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg edited\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME                    READY   STATUS              RESTARTS   AGE\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>72hgn   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     ContainerCreating   <span class=\"token number\">0</span>          4s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          5m45s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running             <span class=\"token number\">0</span>          6m5s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME                    READY   STATUS    RESTARTS   AGE     LABELS\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>72hgn   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          66s     app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>bpmbg   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>edit<span class=\"token operator\">-</span>test\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>lkv4h   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          6m47s   app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>s2tlp   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>wxhq6   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7m7s    app<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span>label</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-데몬셋\" style=\"position:relative;\"><a href=\"#-%EB%8D%B0%EB%AA%AC%EC%85%8B\" aria-label=\" 데몬셋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 데몬셋</h2>\n<p>데몬셋은 모든 노드가 파드의 사본을 실행하도록 하는 역할을 한다.<br>\n쿠버네티스 클러스터에서 노드가 추가되면 파드도 추가된다.<br>\n노드가 클러스터에서 제거되면 해당 파드는 가비지(garbage)로 넘어간다.<br>\n데몬셋을 삭제하면 데몬셋이 생성한 파드들도 정리된다.  </p>\n<p>대몬셋의 정확한 용도는 다음과 같다.</p>\n<p>​</p>\n<ul>\n<li>모든 노드에서 클러스터 스토리지 데몬 실행</li>\n<li>모든 노드에서 로그 수집 데몬 실행</li>\n<li>모든 노드에서 노드 모니터링 데몬 실행</li>\n</ul>\n<p>​</p>\n<p>이러한 작업의 처리를 위해서 모든 노드 단위로 커버하는 데몬셋이 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">DaemonSet</span>\nmetadata<span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\nspec<span class=\"token punctuation\">:</span>\n  selector<span class=\"token punctuation\">:</span>\n    matchLabels<span class=\"token punctuation\">:</span>\n      app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\n  template<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n      labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">ds</span>\n    spec<span class=\"token punctuation\">:</span>\n      nodeSelector<span class=\"token punctuation\">:</span>\n        node<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>  \n      containers<span class=\"token punctuation\">:</span>\n      <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n        image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n        ports<span class=\"token punctuation\">:</span>\n          <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<ul>\n<li>apiVersion apps/v1 → 쿠버네티스의 apps/v1 API를 사용 합니다.</li>\n<li>kind: DaemonSet → DaemonSet의 작업으로 명시 합니다.</li>\n<li>metadata.name → DaemonSet의 이름을 설정 합니다.</li>\n<li>metadata.namespace → 네임스페이스를 지정 합니다.</li>\n<li>metadata.labels → DaemonSet를 식별할 수 있는 레이블을 지정 합니다.</li>\n<li>spec.selector.matchLabels → 어떤 레이블의 파드를 선택하여 관리할 지 설정 합니다.</li>\n<li>spec.template.metadata.labels.name → 생성할 파드의 레이블을 파드명: ” ” 으로 지정 합니다.</li>\n<li>spec.template.spec.containers → 하위 옵션들은 컨테이너의 설정을 정의합니다.</li>\n</ul>\n<br/>\n<br/>\n<p>데몬 셋 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>ds<span class=\"token punctuation\">.</span>yml \ndaemonset<span class=\"token punctuation\">.</span>apps<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>ds created\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> ds\nNAME      DESIRED   CURRENT   READY   UP<span class=\"token operator\">-</span>TO<span class=\"token operator\">-</span>DATE   AVAILABLE   NODE SELECTOR   AGE\nnasa<span class=\"token operator\">-</span>ds   <span class=\"token number\">0</span>         <span class=\"token number\">0</span>         <span class=\"token number\">0</span>       <span class=\"token number\">0</span>            <span class=\"token number\">0</span>           node<span class=\"token operator\">=</span>nasa       32s</code></pre></div>\n<p>시간이 충분이 지난 후에도 <code class=\"language-text\">DESIRED, CURRENT, READY</code> 탭의 값이 모두 0이다. 파드가 아예 생성되지 않는다.<br>\n이유는 정의할 때 노드 셀렉터로 node=nasa 레이블을 선택하도록 했기에 매칭되는 노드가 없으므로 아무 POD도 생성되지 않은 것이다.</p>\n<br/>\n<br/>\n<p>데몬 셋 동작을 위해 노드를 지정해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label nodes nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node1</span> node<span class=\"token operator\">=</span>nasa\nnode<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>node1 labeled</code></pre></div>\n<br/>\n<br/>\n<p>다시 한번 데몬 셋을 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> nodes nasa<span class=\"token operator\">-</span>node1 <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME         STATUS   ROLES    AGE   VERSION   LABELS\nnasa<span class=\"token operator\">-</span>node1   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   <span class=\"token number\">24d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span>   <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span> <span class=\"token range operator\">..</span><span class=\"token range operator\">..</span> <span class=\"token punctuation\">,</span>node<span class=\"token operator\">=</span>nasa</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> daemonsets<span class=\"token punctuation\">.</span>apps \nNAME      DESIRED   CURRENT   READY   UP<span class=\"token operator\">-</span>TO<span class=\"token operator\">-</span>DATE   AVAILABLE   NODE SELECTOR   AGE\nnasa<span class=\"token operator\">-</span>ds   <span class=\"token number\">1</span>         <span class=\"token number\">1</span>         <span class=\"token number\">1</span>       <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           node<span class=\"token operator\">=</span>nasa       6m1s</code></pre></div>\n<br/>\n<br/>\n<p>데몬 셋이 동작함에 의해 POD가 1개 생성 되었다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME                    READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>ds<span class=\"token operator\">-</span>7jsgd           <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          106s</code></pre></div>\n<br/>\n<br/>\n<p>테스트를 모두 완료했으니 NODE와 DS를 삭제한다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label nodes nasa<span class=\"token operator\">-</span>node1 node<span class=\"token operator\">-</span>\nnode<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>node1 labeled</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-잡\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1\" aria-label=\" 잡 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐱‍🏍 잡</h2>\n<p>JOB 컨트롤러는 파드의(컨테이너)의 어플리케이션(JOB) 실행이 완료되는 것에 초점을 맞춘 컨트롤러이다.<br>\n즉, 끝이 정해진 작업을 하는 어플리케이션을 잡 컨트롤러가 관리한다.<br>\n파드가 작업을 마치고 성공적으로 종료되면 잡 컨트롤러는 성공적으로 완료된 잡을 추적한다.<br>\n잡을 삭제하면 잡이 생성한 파드도 정리된다.<br>\n물론 파드가 중간에 실패하는 경우 잡 오브젝트는 새로운 파드를 가동시킨다.<br>\n잡은 임시 작업, 배치 작업에 유용하게 사용될 수  있다.</p>\n<p>​잡 컨트롤러는 RC, RS, DS처럼 계속 동작하는 방식이 아니라<br>\n재시작 정책(restartPolicy)을 기본값이 Always가 아닌 Onfailuer나 Never로 선언해야 한다.<br>\n이렇게 하면 잡 컨트롤러의 파드는 재실행되지 않는다.</p>\n<ul>\n<li>\n<p>job.spec.template.spec.restartPolicy </p>\n<ul>\n<li>Always : 종료/실패시 항상 재시작(default)</li>\n<li>Onfailure: 실패식 재시작 (정상 종료시 재시작하지 않음)</li>\n<li>Never : 종료 또는 오류 발생시 재시작하지 않음</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<p>잡 컨트롤러 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> batch<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Job</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">job</span>\nspec<span class=\"token punctuation\">:</span>\ntemplate<span class=\"token punctuation\">:</span>\n    metadata<span class=\"token punctuation\">:</span>\n    labels<span class=\"token punctuation\">:</span>\n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">job</span>\n    spec<span class=\"token punctuation\">:</span>\n    restartPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">OnFailure</span>\n    containers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n        image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">busybox</span>\n        command<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sleep\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"60\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>jop<span class=\"token punctuation\">.</span>yml \njob<span class=\"token punctuation\">.</span>batch<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>job created</code></pre></div>\n<br/>\n<br/>\n<p>잡 컨트롤러를 확인해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> job<span class=\"token punctuation\">.</span>batch\nNAME       COMPLETIONS   DURATION   AGE\nnasa<span class=\"token operator\">-</span>job   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>           33s        33s\n\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>84s8x   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          40s</code></pre></div>\n<br/>\n<br/>\n<p>하나의 파드가 있고 아직 잡이 완료되지 않아서 COMPLETIONS에 0/1이라고 표기된다.<br>\n파드는 정상 동작중이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> job<span class=\"token punctuation\">.</span>batch\nNAME       COMPLETIONS   DURATION   AGE\nnasa<span class=\"token operator\">-</span>job   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>           64s        104s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods\nNAME             READY   STATUS      RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>84s8x   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          107s</code></pre></div>\n<p>잠시 후에 파드를 다시 확인 해보니 STATUS가 Completed로 표기되고  </p>\n<p>잡 컨트롤러에서도 확인해보니 COMPLETIONS가 1/1로 바뀌었다.<br>\n잡이 완료되었음을 알 수 있다.</p>\n<br/>\n<br/>\n<p>다중 잡 컨트롤러</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\ncompletions<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></code></pre></div>\n<p><code class=\"language-text\">completions: 3</code> 설정만 YAML 파일에 추가해주면 여러 번의 작업을 값만 큼 순차적으로 실행한다.<br>\n하나의 파드가 생성되어 잡이 실행되고 완료되면 두 번째 파드가 생성되고 완료되고 ,<br>\n그 다음 파드가 생성되고 완료되기를 지정된 횟수만큼 반복하는 것이다.</p>\n<br/>\n<br/>\n<p>병렬 다중 잡 컨트롤러</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\ncompletions<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\nparallelism<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></code></pre></div>\n<p>병렬로 처리하기 위해서는 <code class=\"language-text\">parallelism: 3</code> 설정을 추가해주면 된다<br>\n그럼 3개의 3이 동시에 3번의 작업을 진행한다!!</p>\n<br/>\n<hr>\n<h2 id=\"-크론잡\" style=\"position:relative;\"><a href=\"#-%ED%81%AC%EB%A1%A0%EC%9E%A1\" aria-label=\" 크론잡 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎶 크론잡</h2>\n<p>잡 컨트롤러에서 잡을 실행하는 목적은 끝이 있는 작업을 하는 어플리케이션 때문이다.<br>\n크론잡은 이름에서 알 수 있듯이 주기적으로 반복된 작업을 하며,<br>\n그 작업이 시작과 끝이 있는 작업일 때 사용한다. <code class=\"language-text\">리눅스의 crontab과 같다.</code>  </p>\n<br/>\n<br/>\n<p>이론 보다는 실습!! 바로 크론잡을 생성해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> batch<span class=\"token operator\">/</span><span class=\"token class-name\">v1beta1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CronJob</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> hello <span class=\"token class-name\">World</span>\nspec<span class=\"token punctuation\">:</span>\nschedule<span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/1 * * * *\"</span>\njobTemplate<span class=\"token punctuation\">:</span>\n    spec<span class=\"token punctuation\">:</span>\n    template<span class=\"token punctuation\">:</span>\n        spec<span class=\"token punctuation\">:</span>\n        containers<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> hello <span class=\"token class-name\">World</span>\n            image<span class=\"token punctuation\">:</span> <span class=\"token class-name\">busybox</span>\n            args<span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">-</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>sh\n            <span class=\"token operator\">-</span> <span class=\"token operator\">-</span>c\n            <span class=\"token operator\">-</span> date<span class=\"token punctuation\">;</span> echo Hello NASA<span class=\"token operator\">!</span> <span class=\"token keyword\">from</span> the Kubernetes <span class=\"token class-name\">cluster</span>\n        restartPolicy<span class=\"token punctuation\">:</span> OnFailure</code></pre></div>\n<br/>\n<p>가장 중요한 부분은 스케줄 필드로, cronjob.spec.schedule 필드를 사용해 주기적인 시간을 구성한다.<br>\n스케줄을 구성하는 값은 다섯 개의 필드로 구분되어 다음과 같은 순서이다.</p>\n<p><code class=\"language-text\">그냥 리눅스랑 똑같다!</code></p>\n<ul>\n<li>분</li>\n<li>시</li>\n<li>일</li>\n<li>월</li>\n<li>요일(0 : 일요일, 1: 월요일, 6: 토요일)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>cron<span class=\"token punctuation\">.</span>yml \ncronjob<span class=\"token punctuation\">.</span>batch<span class=\"token operator\">/</span>hello created</code></pre></div>\n<br/>\n<br/>\n<p>생성 후 크론 잡 컨트롤러 및 파드 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> cronjobs<span class=\"token punctuation\">.</span>batch\nNAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nhello   <span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>   False     <span class=\"token number\">0</span>        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>          28s</code></pre></div>\n<br/>\n<br/>\n<p>최초 생성된 직후 ACTIVE 상태의 잡은 없다.  마지막으로 동작한 LAST SCHEDULE도 없다.<br>\n잠시 기다린 후에 다시 조회해보면 다음과 같이 변한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> cronjobs<span class=\"token punctuation\">.</span>batch\nNAME    SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nhello   <span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>   False     <span class=\"token number\">1</span>        10s             <span class=\"token number\">4m</span></code></pre></div>\n<br/>\n<br/>\n<p>파드를 조회해보면 다음과 같다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\n\\NAME                     READY   STATUS      RESTARTS   AGE\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331820</span><span class=\"token operator\">-</span>5jmd4   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          2m36s\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331880</span><span class=\"token operator\">-</span>jhs6s   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          96s\nhello<span class=\"token operator\">-</span><span class=\"token number\">1600331940</span><span class=\"token operator\">-</span>kkzwh   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Completed   <span class=\"token number\">0</span>          36s</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"크론잡-컨트롤러의-제한사항\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%A0%EC%9E%A1-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"크론잡 컨트롤러의 제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크론잡 컨트롤러의 제한사항</h3>\n<p>크론잡 컨트롤러는 일정 실행시간마다 하나의 잡 오브젝트를 생성한다.<br>\n특정한 상황에서는 하나가 아닌 여러 개의 잡이 생성되는 경우도 있다.<br>\n이러한 상황을 제어하기 위해서 크론잡 컨트롤러에서는 잡의 제한사항을 지정할 수 있다.</p>\n<p>​</p>\n<ul>\n<li><code class=\"language-text\">cronjob.spec.startingDeadlineSeconds</code> : 시작 데드라인 시간<br>\n어떤 이유든 예정된 시간에 잡을 시작해야 하는 데드라인.<br>\n초단위로 입력해서 현재로부터 n초 안에 일정을 놓친 잡이 있는지 확인.</li>\n</ul>\n<p>​</p>\n<ul>\n<li>\n<p><code class=\"language-text\">cronjob.spec.concurrrencyPolicy</code> : 동시 실행 정책  </p>\n<ul>\n<li>Allow: 잡이 동시 실행될 수 있음(default)</li>\n<li>Forbid: 동시 실행 금지. 잡이 아직 완료되지 않은 경우 다음 잡을 건너 뜀.</li>\n<li>Replace: 현재 실행중인 잡을 취소하고 새 잡으로 교체  </li>\n</ul>\n<p>위 설정들을 쉽게 예를 들어보자면<br>\nstartingDeadlineSeconds가 100초이고, concurrencyPolicy가 Allow이면<br>\n이전에 놓친 잡이 있으면 해당 잡을 실행하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">spec<span class=\"token punctuation\">:</span>\nschedule<span class=\"token punctuation\">:</span> <span class=\"token string\">\"*/1 * * * *\"</span>\nstartingDeadlineSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\nconcurrencyPolicy<span class=\"token punctuation\">:</span> Forbid</code></pre></div>\n</li>\n</ul>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C\">✔ 라이브니스 프로브</a></p>\n<ul>\n<li><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%8B%88%EC%8A%A4-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1\">라이브니스 프로브 생성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B\">✌ 레플리카셋</a></p>\n<ul>\n<li><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%B9%B4%EC%85%8B-%EC%83%9D%EC%84%B1\">레플리카셋 생성</a></li>\n<li><a href=\"#%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\">동작 원리</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EB%8D%B0%EB%AA%AC%EC%85%8B\">👀 데몬셋</a></li>\n<li><a href=\"#-%EC%9E%A1\">🐱‍🏍 잡</a></li>\n<li>\n<p><a href=\"#-%ED%81%AC%EB%A1%A0%EC%9E%A1\">🎶 크론잡</a></p>\n<ul>\n<li><a href=\"#%ED%81%AC%EB%A1%A0%EC%9E%A1-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%9D%98-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\">크론잡 컨트롤러의 제한사항</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"머리말   이번 포스트에서는 자동적으로 POD 및 시스템을 관리 할 수 있는 컨트롤러에 대해서 알아보겠습니다 ✔ 라이브니스 프로브 라이브니스 프로브 개념 사용자가 모든 오브젝트를 일일이 관리할 수는 없다. 관리하고자 하더라도 사용자의 사각지대에 있는 오브젝트를 실제 프로덕션 환경에서 관리하기 위해서는 수동 작업은 권장되지 않는다. 실제 환경에서는 자동적으로 정상적이고 안정적인 상태가 유지되어야 한다. 쿠버네티스가 이러한 요구를 충족시키기 위해서 사용하는 것이 이다. 라이브니스 프로브는 파드에 의해 컨테이너를 동작시키고 동작중인 컨테이너의 상태를 주기적으로 모니터링한다. 파드에서 오류가 발생하면 해당 컨테이너를 재시작시…","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 컨트롤러","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-controller/"}},"next":{"id":"3e819d0c-cf4a-5cab-84f4-1a08c1b7532d","html":"<p>머리말  </p>\n<p>이전 포스트에서는 기본적인 POD의 정의 및 생성에 대해서 알아봤다<br>\n이번 포스트에서는 POD를 더 효율적으로 관리하기 위한 레이블과 셀렉터에 대해서 알아보자</p>\n<hr>\n<h2 id=\"-레이블\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94\" aria-label=\" 레이블 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 레이블</h2>\n<p>레이블 은 파드와 같은 오브젝트에 첨부된 키와 값의 쌍이다.<br>\n레이블은 오브젝트의 특성을 식별하는 데 사용되어 사용자에게 중요하지만, 코어 시스템에 직접적인 의미는 없다.<br>\n레이블로 오브젝트의 하위 집합을 선택하고, 구성하는데 사용할 수 있다.<br>\n레이블은 오브젝트를 생성할 때에 붙이거나 생성 이후에 붙이거나 언제든지 수정이 가능하다.<br>\n오브젝트마다 키와 값으로 레이블을 정의할 수 있다. 오브젝트의 키는 고유한 값이어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"key1\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"key2\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"value2\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>레이블은 UI와 CLI에서 효율적인 쿼리를 사용하고 검색에 사용하기에 적합하다.<br>\n식별되지 않는 정보는 <code class=\"language-text\">어노테이션</code>으로 기록해야 한다.</p>\n<ul>\n<li>\n<p>사용 동기  </p>\n<p>레이블을 이용하면 사용자가 느슨하게 결합한 방식으로 조직 구조와 시스템 오브젝트를 매핑할 수 있으며,<br>\n클라이언트에 매핑 정보를 저장할 필요가 없다.</p>\n</li>\n<li>\n<p>레이블 예시 :</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">-</span> <span class=\"token string\">\"release\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"stable\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"release\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"canary\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"qa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"production\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"frontend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"backend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tier\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"cache\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"partition\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"customerA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"partition\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"customerB\"</span>\n<span class=\"token operator\">-</span> <span class=\"token string\">\"track\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"daily\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"track\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"weekly\"</span></code></pre></div>\n<p>일반적으로 사용하는 예시들의 종류이다.<br>\n사용자가 원하는 규약에 따라 자유롭게 사용 할 수 있지만, 오브젝트에 붙여진 레이블 키는 고유해야 한다.</p>\n</li>\n</ul>\n<br/>\n<h3 id=\"레이블을-이용한-파드-정의\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8C%8C%EB%93%9C-%EC%A0%95%EC%9D%98\" aria-label=\"레이블을 이용한 파드 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레이블을 이용한 파드 정의</h3>\n<br/>\n<p>nasa-label.yml 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nlabels<span class=\"token punctuation\">:</span>\n    env<span class=\"token punctuation\">:</span> <span class=\"token class-name\">dev</span>\n    tier<span class=\"token punctuation\">:</span> <span class=\"token class-name\">frontend</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<br/>\n<p>yml 파일 기반의 파드 생성 및 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>lebel<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          7s</code></pre></div>\n<br/>\n<br/>\n<p>레이블 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          68s   env<span class=\"token operator\">=</span>dev<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<br/>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> \nName<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       env<span class=\"token operator\">=</span><span class=\"token class-name\">dev</span>\n            tier<span class=\"token operator\">=</span><span class=\"token class-name\">frontend</span>\nAnnotations<span class=\"token punctuation\">:</span>  kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span>\"d\nev<span class=\"token string\">\",\"</span>tier<span class=\"token string\">\":\"</span>frontend<span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span>\"<span class=\"token punctuation\">:</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p><code class=\"language-text\">-L 옵션</code>을 사용해 특정 label을 지정하여 표시 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">L</span> env<span class=\"token punctuation\">,</span>tier\nNAME             READY   STATUS    RESTARTS   AGE   ENV   TIER\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">15m</span>   dev   frontend</code></pre></div>\n<br/>\n<hr>\n<h3 id=\"파드-레이블-수정\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%88%98%EC%A0%95\" aria-label=\"파드 레이블 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드 레이블 수정</h3>\n<p>현재 존재하는 POD에 레이블을 추가하거나, 이미 존재하는 레이블을 수정 할 수 있다.<br>\n이미 레이블을 가지고 있는 POD에 레이블을 추가하면 아래와 같은 이슈가 발생한다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> env<span class=\"token operator\">=</span><span class=\"token class-name\">test</span>\nerror<span class=\"token punctuation\">:</span> 'env' already has a <span class=\"token keyword\">value</span> <span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">--</span>overwrite <span class=\"token keyword\">is</span> <span class=\"token class-name\">false</span></code></pre></div>\n<br/>\n<br/>\n<p>이 경우 <code class=\"language-text\">-overwrite</code> 옵션을 추가로 정의하면 된다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl label pods nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span><span class=\"token class-name\">label</span> env<span class=\"token operator\">=</span>test <span class=\"token operator\">--</span>overwrite\npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label labeled\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">20m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<p>다음과 같이 <code class=\"language-text\">env=test</code> 값이 변경 됨을 확인!</p>\n<br/>\n<hr>\n<h2 id=\"-레이블-셀렉터\" style=\"position:relative;\"><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0\" aria-label=\" 레이블 셀렉터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 레이블 셀렉터</h2>\n<p>특별한 개념은 아니고, 오브젝트에 부여된 레이블을 기반으로 검색할 수 있는 개념이다.<br>\n레이블은 고유하지 않다. 많은 오브젝트에 다양한 레이블을 부여할 수 있다.<br>\n사용자는 레이블 셀렉터를 이용하여 오브젝트를 식별할 수 있으며 레이블 셀렉터는 쿠버네티스 코어 그룹에 속한다.</p>\n<p>모든 컨트롤러가 같은 특징을 가지는데<br>\n예를 들어 레플리케이션 컨트롤러가 따로 존재하고 컨트롤러는 replica=3을 만들어달라고 요청받는다.<br>\n이 때 a=123이라는 label을 파드에 지정하면 마찬가지로 컨트롤러는 a=123 레이블셀렉터를 갖게된다.<br>\n그리고 컨트롤러는 이 레이블이 달린 파드를 자신이 관리한다는 사실을 인지한다.</p>\n<ul>\n<li>\n<p>레이블 셀렉터를 이용해서 검색하는 방법은 두 가지가 있다.</p>\n<ul>\n<li>특정 키의 유무로 레이블 검색</li>\n<li>특정 키와 값의 유무로 레이블 검색</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"균등-기반-레이블-셀렉터--\" style=\"position:relative;\"><a href=\"#%EA%B7%A0%EB%93%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0--\" aria-label=\"균등 기반 레이블 셀렉터   permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>균등 기반 레이블 셀렉터(=, !, !=)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">## tier키가 포함된 레이블</span>\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l tier\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">26m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## tier키를 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l '<span class=\"token operator\">!</span>tier'\nNAME         READY   STATUS    RESTARTS   AGE    LABELS\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">101m</span>   env<span class=\"token operator\">=</span>dev\n\n<span class=\"token preprocessor property\">## env키에 test값이 있는 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">28m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## env키는 있지만 dev값은 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l env<span class=\"token operator\">!=</span>dev\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">29m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend</code></pre></div>\n<br/>\n<h3 id=\"집합성-기반-레이블-셀렉터in-notin\" style=\"position:relative;\"><a href=\"#%EC%A7%91%ED%95%A9%EC%84%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0in-notin\" aria-label=\"집합성 기반 레이블 셀렉터in notin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>집합성 기반 레이블 셀렉터(in, notin)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">## env키에 debug나 dev값이 포함된 레이블</span>\n\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l 'env <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span>dev<span class=\"token punctuation\">)</span>'\nNAME             READY   STATUS    RESTARTS   AGE   LABELS\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">31m</span>   env<span class=\"token operator\">=</span>test<span class=\"token punctuation\">,</span>tier<span class=\"token operator\">=</span>frontend\n\n<span class=\"token preprocessor property\">## tier키에 frontend값은 제외한 레이블</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>show<span class=\"token operator\">-</span>labels <span class=\"token operator\">-</span>l '<span class=\"token return-type class-name\">tier</span> notin <span class=\"token punctuation\">(</span>frontend<span class=\"token punctuation\">)</span>'\nNAME         READY   STATUS    RESTARTS   AGE    LABELS\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">103m</span>   env<span class=\"token operator\">=</span>dev</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-어노테이션\" style=\"position:relative;\"><a href=\"#-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\" 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 어노테이션</h2>\n<p>어노테이션이란?</p>\n<p>오브젝트에 메타데이터를 할당할 수 있는 주석과 같은 개념이다.<br>\n레이블과 같이 key-value 구조를 띄지만 차이가 있다. 레이블은 레이블 셀렉터를 이용해서 검색과 식별이 가능하나,<br>\n어노테이션은 메타데이터의 입력만 가능할 뿐 주석과 같으므로 검색이 되지 않는다.<br>\n쿠버네티스 클러스터의 API 서버가 어노테이션에 지정된 메타데이터를 참조해서<br>\n동작한다는 점에서 우리가 기존에 알고 있는 주석처럼 완전 투명한 상태는 아니다.</p>\n<p><br/>​</p>\n<p>어노테이션은 다음과 같은 메타데이터를 기록할 수 있다.</p>\n<ul>\n<li>필드</li>\n<li>이미지 정보(타임 스탬프, 릴리즈 ID, 빌드 버전, git 브랜치, 이미지 해시, 레지스트리 주소 등)</li>\n<li>로깅, 모니터링 정보</li>\n<li>디버깅에 필요한 정보(이름,버전,빌드정보)</li>\n<li>책임자 연락처</li>\n<li>사용자 지시 사항</li>\n</ul>\n<p>​<br/></p>\n<p>파일을 만들어 예시를 들어보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nannotations<span class=\"token punctuation\">:</span>\n    imageregistry<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://hub.docker.com/\"</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nginx</span>\n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<br/>\n<p>해당 파일로 POD 생성!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f ano<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>annotations<span class=\"token operator\">-</span>nasa created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME               READY   STATUS    RESTARTS   AGE\nannotations<span class=\"token operator\">-</span>nasa   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5s\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label     <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">38m</span></code></pre></div>\n<br/>\n<br/>\n<p>어노테이션은 <code class=\"language-text\">describe</code>옵션으로 확인이 가능하다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods <span class=\"token class-name\">annot</span>\nName<span class=\"token punctuation\">:</span>         annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  imageregistry<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>         <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span>######<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n            kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"imageregistry\"</span><span class=\"token punctuation\">:</span>\"<span class=\"token class-name\">htt</span>\nps<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>annotations<span class=\"token operator\">-</span>nasa<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nStatus<span class=\"token punctuation\">:</span>       <span class=\"token class-name\">Running</span>\nIP<span class=\"token punctuation\">:</span>           <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이 외에 <code class=\"language-text\">annotate</code> 명령을 이용해 변경도 가능하다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl annotate pods annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> mynameis<span class=\"token operator\">=</span><span class=\"token string\">\"John Smith\"</span>\npod<span class=\"token operator\">/</span>annotations<span class=\"token operator\">-</span>nasa annotated\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods <span class=\"token class-name\">annot</span>\nName<span class=\"token punctuation\">:</span>         annotations<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">08</span><span class=\"token punctuation\">:</span><span class=\"token number\">49</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  imageregistry<span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>\n            kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"imageregistry\"</span><span class=\"token punctuation\">:</span>\"<span class=\"token class-name\">htt</span>\nps<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>hub<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token string\">\"},\"</span>name<span class=\"token string\">\":\"</span>annotations<span class=\"token operator\">-</span>nasa<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n            mynameis<span class=\"token punctuation\">:</span> John Smith         <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>#######</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"-네임스페이스\" style=\"position:relative;\"><a href=\"#-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\" 네임스페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 네임스페이스</h2>\n<p>네임스페이스란?</p>\n<p>쿠버네티스는 동일한 물리 클러스터를 기반으로 하는 여러 개의 가상 클러스터를 지원한다.<br>\n이러한 가상 클러스터 단위를 네임스페이스라고 한다.<br>\n네임스페이스는 여러 개의 팀이나 프로젝트에 걸쳐 다수의 사용자가 존재하는 경우에<br>\n사용하도록 고안된 개념이다. 공식 문서에서는 사용자가 수 십명 정도에 불과한 경우는<br>\n네임스페이스를 고려할 필요가 <code class=\"language-text\">'전혀'</code>없다고 하고 있다.</p>\n<p>네임스페이스는 이름의 범위를 제공한다.<br>\n이게 무슨 말이냐 하면, 리소스의 이름은 네임스페이스 내에서 유일해야 하지만<br>\n서로 다른 네임스페이스 안에서는 같은 이름을 가진 리소스가 존재할 수도 있다는 뜻이다.<br>\n단, <code class=\"language-text\">kube-</code> 로 시작하는 네임스페이스는 이미 쿠버네티스 시스템 네임스페이스로 예약되어있으므로 사용하지 않는다.</p>\n<br/>\n<p>네임스페이스 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> namespaces \nNAME              STATUS   AGE\n<span class=\"token keyword\">default</span>           Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>lease   Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span><span class=\"token keyword\">public</span>       Active   <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>system       Active   <span class=\"token number\">23d</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">default</code> :  오브젝트 생성 시 따로 지정하지 않으면 default 네임스페이스를 사용하게 되어있다.  </li>\n<li><code class=\"language-text\">kube-system</code> : 쿠버네티스 시스템에서 생성한 오브젝트를 위한 네임스페이스  </li>\n<li><code class=\"language-text\">kube-public</code> : 전체 클러스터에서 공개되어 예약된 네임스페이스. 모든 사용자가 읽기 권한으로 접근 가능하다.  </li>\n<li><code class=\"language-text\">kube-node-lease</code> : 클러스터가 스케일링될 때 노드 health check 성능을 향상시키는 lease 오브젝트에 대한 네임스페이스  </li>\n</ul>\n<br/>\n<br/>\n<p>네임스페이스 상의 오브젝트 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system\nNAME                                    READY   STATUS    RESTARTS   AGE\ncoredns<span class=\"token operator\">-</span>5c98db65d4<span class=\"token operator\">-</span>8cg79                <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">2</span>          <span class=\"token number\">23d</span>\ncoredns<span class=\"token operator\">-</span>5c98db65d4<span class=\"token operator\">-</span>zbvbn                <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\netcd<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>controller<span class=\"token operator\">-</span>manager<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master     <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>6w9dk                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>jqks7                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>kr9sb                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>proxy<span class=\"token operator\">-</span>lxn6d                        <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkube<span class=\"token operator\">-</span>scheduler<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>master              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nkubernetes<span class=\"token operator\">-</span>dashboard<span class=\"token operator\">-</span>6b8c96cf8c<span class=\"token operator\">-</span>g985n   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">1</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>dd6f2                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>k2jc9                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>k2tcb                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span>\nweave<span class=\"token operator\">-</span>net<span class=\"token operator\">-</span>v7bff                         <span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     Running   <span class=\"token number\">3</span>          <span class=\"token number\">23d</span></code></pre></div>\n<p>네임스페이스를 지정할 때는 -n 또는 —namespace 옵션을 사용하며 지정하지 않으면 default 네임스페이스 기준이다.</p>\n<br/>\n<br/>\n<p>네임스페이스 생성 및 조회</p>\n<p>yaml 파일로도 가능하지만 커맨드로도 간단히 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl create <span class=\"token keyword\">namespace</span> nasa\n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>nasa created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> <span class=\"token keyword\">namespace</span> nasa\nNAME   STATUS   AGE\nnasa   Active   28s</code></pre></div>\n<br/>\n<br/>\n<p>yaml파일로 네임스페이스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Namespace</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f name<span class=\"token punctuation\">.</span>yml \n<span class=\"token keyword\">namespace</span><span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span> created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> <span class=\"token keyword\">namespace</span> nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             STATUS   AGE\nnasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>   Active   19s</code></pre></div>\n<br/>\n<br/>\n<p>특정 네임스페이스에 파드 오브젝트 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             READY   STATUS              RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     ContainerCreating   <span class=\"token number\">0</span>          17s</code></pre></div>\n<br/>\n<br/>\n<p>이 작업도 yaml 파일로 작성해보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>pod\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n        protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasaname<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>pod created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa\nNAME       READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          12s</code></pre></div>\n<br/>\n<br/>\n<p>리소스 삭제 : 리소스는 세 가지 방법으로 가능하다.</p>\n<p>오브젝트 이름으로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete pod nasa<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>n nasa \npod <span class=\"token string\">\"nasa-pod\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>n nasa\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>오브젝트 정의파일(yaml 및 json파일)로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNAME             READY   STATUS             RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     CrashLoopBackOff   <span class=\"token number\">6</span>          9m57s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete <span class=\"token operator\">-</span>f name<span class=\"token punctuation\">.</span>yml \n<span class=\"token keyword\">namespace</span> <span class=\"token string\">\"nasa-namespace\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod <span class=\"token operator\">-</span>n nasa<span class=\"token operator\">-</span><span class=\"token keyword\">namespace</span>\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>오브젝트 레이블로 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>label   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">68m</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\npod <span class=\"token string\">\"nasa-pod-label\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> env<span class=\"token operator\">=</span>test\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<p>파드에 이어 네임스페이스도 제거한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94\">✔ 레이블</a></p>\n<ul>\n<li><a href=\"#%EB%A0%88%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8C%8C%EB%93%9C-%EC%A0%95%EC%9D%98\">레이블을 이용한 파드 정의</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%88%98%EC%A0%95\">파드 레이블 수정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0\">✌ 레이블 셀렉터</a></p>\n<ul>\n<li><a href=\"#%EA%B7%A0%EB%93%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0--\">균등 기반 레이블 셀렉터(=, !, !=)</a></li>\n<li><a href=\"#%EC%A7%91%ED%95%A9%EC%84%B1-%EA%B8%B0%EB%B0%98-%EB%A0%88%EC%9D%B4%EB%B8%94-%EC%85%80%EB%A0%89%ED%84%B0in-notin\">집합성 기반 레이블 셀렉터(in, notin)</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">👏 어노테이션</a></li>\n<li><a href=\"#-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4\">👍 네임스페이스</a></li>\n</ul>\n</div>\n<hr>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 레이블 및 셀렉터","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-label/"}},"prev":{"id":"6c1b0b6c-a003-5855-a2b1-30c61c4e5df0","html":"<p>머리말  </p>\n<p>이번 포스트에서는 쿠버네티스의 네트워크 및 내부 서비스들에 대해서 알아보겠습니다.</p>\n<hr>\n<h2 id=\"-service\" style=\"position:relative;\"><a href=\"#-service\" aria-label=\" service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Service</h2>\n<p>이전 포스트들에서 쿠버네티스 클러스터안에 컨트롤러들을 이용해서 POD를 정의했습니다.     </p>\n<ul>\n<li>POD 특성상 생성 및 정의 될때 지정되는 IP가 랜덤하고 </li>\n<li>또한 리스타트 때마다 IP가 변동됩니다.  </li>\n</ul>\n<p>위 두개의 이유로 POD는 <code class=\"language-text\">고정된 엔드포인트</code>로 호출이 어렵습니다. 또한 여러 POD에 같은 애플리케이션을 운용할 경우<br>\n이 POD 간의 로드밸런싱을 지원해줘야 하는데 이러한 기능들을 수행하는게 <code class=\"language-text\">Service(서비스)</code> 입니다.  </p>\n<p>간략한 서비스들의 기능을 요약해보면 아래 4가지 정도입니다.</p>\n<ul>\n<li>서비스를 사용하게 되면 고정된 주소를 이용해서 접근이 가능해 집니다.  </li>\n<li>서비스를 통해 클러스터 외부에서 POD에 접근하는것도 가능합니다.  </li>\n<li>여러 POD를 묶어 로드 밸런싱이 가능합니다.</li>\n<li>고유한 DNS 이름을 가질 수 있습니다.</li>\n</ul>\n<br/>\n<br/>\n<p>서비스는 <code class=\"language-text\">get service</code> 명령을 통해 목록을 받아 올 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> service\nNAME         TYPE        CLUSTER<span class=\"token operator\">-</span>IP   EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>   <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nkubernetes   ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP   <span class=\"token number\">24d</span></code></pre></div>\n<p>명령을 입력하면 default 네임스페이스에 항상 존재하는 서비스가 보이네요<br>\n이전 아키텍쳐 포스트에서도 설명했지만 Master Node의 API로 접근하기 위한 서비스입니다!!</p>\n<br/>\n<br/>\n<h3 id=\"서비스-템플릿\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"서비스 템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 템플릿</h3>\n<p>서비스는 다음과 같이 구성이 가능하며, 라벨 셀렉터 (label selector)를 이용하여 관리하고자 하는 Pod 들을 정의할 수 있습니다.</p>\n<p>서비스 템플릿 기본 구조는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span><span class=\"token class-name\">svc</span>\nspec<span class=\"token punctuation\">:</span>\n  type<span class=\"token punctuation\">:</span> ClusterIP <span class=\"token punctuation\">(</span>LoadBalancer<span class=\"token punctuation\">)</span>\n  clusterIP<span class=\"token punctuation\">:</span> <span class=\"token number\">10.0</span><span class=\"token number\">.10</span><span class=\"token number\">.10</span>\n  selector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span>\n  ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<p>다른 부분은 일반적인 형태입니다  </p>\n<ul>\n<li><code class=\"language-text\">spec.type</code> : 서비스 타입을 지정할수 있습니다. spec.type을 지정하지 않으면 기본 타입은 ClusterIP입니다.  </li>\n<li><code class=\"language-text\">spec.clusterIP</code> : 사용하려는 클러스터IP를 직접 지정하는것도 가능합니다.  </li>\n<li><code class=\"language-text\">spec.selector</code> : 서비스와 연결할 POD에 지정된 라벨을 지정합니다.   </li>\n<li><code class=\"language-text\">spec.ports</code> :  배열 형태의 값입니다.<br>\n서비스가 포트를 외부에 제공할때 하나가 아니라 여러개를 한꺼번에 제공가능한데 spec.ports 하위에 값을 넣어주면 됩니다.</li>\n</ul>\n<br/>\n<br/>\n<p>이런 형태의 멀티 포트 서비스가 가능합니다  </p>\n<p>예를 들어 웹서버의 HTTP와 HTTPS 포트가 대표적인 예인데<br>\n아래와 같이 ports 부분에 두개의 포트 정보를 정의해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span><span class=\"token class-name\">svc</span>\nspec<span class=\"token punctuation\">:</span>\n  selector<span class=\"token punctuation\">:</span>\n     app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node</span>\n  ports<span class=\"token punctuation\">:</span>\n     <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">http</span>\n     port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n     protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n     targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n     <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">https</span>\n     port<span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n     protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n     targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8082</span></code></pre></div>\n<br/>\n<br/>\n<p>위의 템플릿으로 생성을 해보면 아래와 같이 멀티 포트로 생성이 됩니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token operator\">-</span>svcm<span class=\"token punctuation\">.</span>yml \nservice<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> svc\nNAME            TYPE        CLUSTER<span class=\"token operator\">-</span>IP      EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>   <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>          AGE\nkubernetes      ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP          <span class=\"token number\">24d</span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc   ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.147</span><span class=\"token number\">.197</span>   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span><span class=\"token operator\">/</span>TCP<span class=\"token punctuation\">,</span><span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP   8s</code></pre></div>\n<br/>\n<br/>\n<h3 id=\"엔드포인트\" style=\"position:relative;\"><a href=\"#%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8\" aria-label=\"엔드포인트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>엔드포인트</h3>\n<p>엔트포인트란 서비스의 <code class=\"language-text\">레이블 셀렉터</code>에 의해 연결된 POD의 IP 목록입니다. <code class=\"language-text\">kube get endpoints</code> 명령어로 확인 할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> endpoints\nNAME            ENDPOINTS         AGE\nkubernetes      <span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.6</span><span class=\"token punctuation\">:</span><span class=\"token number\">6443</span>   <span class=\"token number\">24d</span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>            7m30s</code></pre></div>\n<p>방금 만든 서비스의 경우 연결되어있는 POD가 없기에 <code class=\"language-text\">none</code>으로 정의 되어있다</p>\n<br/>\n<br/>\n<p><code class=\"language-text\">label</code>을 맞춰준 POD를 하나 생성해봅시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\nlabels<span class=\"token punctuation\">:</span> \n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node</span>\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">nasa</span>\n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    ports<span class=\"token punctuation\">:</span>\n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n        protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>pod<span class=\"token operator\">-</span>s<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>o wide\nNAME   READY   STATUS    RESTARTS   AGE   IP          NODE         NOMINATED NODE   READINESS G\nATES\nnasa   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          97s   <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>   nasa<span class=\"token operator\">-</span>node3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<br/>\n<p>이렇게 <code class=\"language-text\">label</code>을 연결해준 POD가 생성되면 <code class=\"language-text\">ENDPOINT</code>가 생성된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> endpoints\nNAME            ENDPOINTS                       AGE\nkubernetes      <span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.6</span><span class=\"token punctuation\">:</span><span class=\"token number\">6443</span>                 <span class=\"token number\">24d</span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc   <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span><span class=\"token punctuation\">:</span><span class=\"token number\">8082</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>   <span class=\"token number\">17m</span></code></pre></div>\n<br/>\n<br/>\n<p>테스트 POD를 하나 돌려서 클러스터끼리의 통신을 확인해봅시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl run nasatest <span class=\"token operator\">-</span>it <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>c1t1d0s7<span class=\"token operator\">/</span>network<span class=\"token operator\">-</span>multitool <span class=\"token operator\">--</span>generator<span class=\"token operator\">=</span>run<span class=\"token operator\">-</span>pod<span class=\"token operator\">/</span>v1 <span class=\"token operator\">--</span>rm<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> bash\nIf you don't see a <span class=\"token class-name\">command</span> prompt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">try</span> pressing enter<span class=\"token punctuation\">.</span>\nbash<span class=\"token operator\">-</span><span class=\"token number\">5.0</span># \nbash<span class=\"token operator\">-</span><span class=\"token number\">5.0</span># <span class=\"token class-name\">curl</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    body <span class=\"token punctuation\">{</span>\n        width<span class=\"token punctuation\">:</span> 35em<span class=\"token punctuation\">;</span>\n        margin<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n        font<span class=\"token operator\">-</span>family<span class=\"token punctuation\">:</span> Tahoma<span class=\"token punctuation\">,</span> Verdana<span class=\"token punctuation\">,</span> Arial<span class=\"token punctuation\">,</span> sans<span class=\"token operator\">-</span>serif<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>If you see <span class=\"token keyword\">this</span> page<span class=\"token punctuation\">,</span> the nginx web server <span class=\"token keyword\">is</span> <span class=\"token class-name\">successfully</span> installed <span class=\"token keyword\">and</span>\nworking<span class=\"token punctuation\">.</span> Further configuration <span class=\"token keyword\">is</span> <span class=\"token class-name\">required</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>For online documentation <span class=\"token keyword\">and</span> support please refer to\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.org/\"</span><span class=\"token operator\">></span>nginx<span class=\"token punctuation\">.</span>org<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\nCommercial support <span class=\"token keyword\">is</span> <span class=\"token class-name\">available</span> at\n<span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.com/\"</span><span class=\"token operator\">></span>nginx<span class=\"token punctuation\">.</span>com<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Thank you <span class=\"token keyword\">for</span> <span class=\"token keyword\">using</span> nginx<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></code></pre></div>\n<p>통신이 너무 잘 댑니다!</p>\n<br/>\n<hr>\n<h2 id=\"-서비스-세션-어피니티\" style=\"position:relative;\"><a href=\"#-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%84%B8%EC%85%98-%EC%96%B4%ED%94%BC%EB%8B%88%ED%8B%B0\" aria-label=\" 서비스 세션 어피니티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 서비스 세션 어피니티?</h2>\n<p>세션 어피니티란????  </p>\n<p>위의 테스트처럼 1개의 POD가 아닌 RS,RC,DS 처럼 여러개의 POD가 생성되면<br>\n당연히 LB로 POD를 묶어 여러개의 ENDPOINT를 가지고 있게 될 것이다<br>\n그런 경우 클라이언트에서 요청을 보내면 로드밸런싱되어 매번 다른 파드로 연결된다.<br>\n그러나 만약 특정 클라이언트에서 요청이 들어오면 매번 특정 파드로 연결하고 싶은 경우 사용하는 것이 세션 어피니티입니다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> mynapp<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span>ses<span class=\"token operator\">-</span><span class=\"token class-name\">aff</span>\nspec<span class=\"token punctuation\">:</span>\nsessionAffinity<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ClientIP</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> mynapp<span class=\"token operator\">-</span>rs</code></pre></div>\n<p>세션 어피니티 구성은 None과 ClientIP가 있으며 디폴트는 None이다.<br>\nClientIP를 설정하면 쿠버네티스 클러스터의 프록시(kube-proxy)는 클라이언트의 IP를 보고 매번 같은 파드로 연결해줍니다</p>\n<p><code class=\"language-text\">sessionAffinity</code> 로 정의 할 수 있다</p>\n<ul>\n<li>none : (기본) 세션 어피니티 없음</li>\n<li>ClientIP : 클라이언트의 IP를 확인해 같은 파드로 연결됨 </li>\n</ul>\n<br/>\n<br/>\n<h2 id=\"-service-type\" style=\"position:relative;\"><a href=\"#-service-type\" aria-label=\" service type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐱‍🏍 Service Type</h2>\n<p>서비스는 IP 주소 할당 방식과 연동 서비스등에 따라 크게 4가지로 구별할 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">Cluster IP</code><br>\n디폴트 설정으로, 서비스에 클러스터 IP (내부 IP)를 할당한다. 쿠버네티스 클러스터 내에서는 이 서비스에 접근이 가능하지만<br>\n클러스터 외부에서는 외부 IP 를 할당 받지 못했기 때문에, 접근이 불가능하다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">Load Balancer</code><br>\n보통 클라우드 벤더에서 제공하는 설정 방식으로 외부 IP 를 가지고 있는 로드밸런서를 할당한다<br>\n외부 IP를 가지고 있기  때문에, 클러스터 외부에서 접근이 가능하다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">Node IP</code><br>\n클러스터 IP로만 접근이 가능한것이 아니라 모든 노드의 IP와 포트를 통해서도 접근이 가능하게 된다.<br>\n예를 들어 아래와 같이 <code class=\"language-text\">hello-node-svc</code> 라는 서비스를 NodePort 타입으로 선언을 하고<br>\nnodePort를 30036으로 설정하면 아래 설정에 따라 클러스터 IP의 80포트로도 접근이 가능하지만<br>\n모든 노드의 30036 포트로도 서비스를 접근할 수 있다. </li>\n</ul>\n<br/>\n<br/>\n<p>hello-node-svc-nodeport.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span><span class=\"token class-name\">svc</span>\nspec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span><span class=\"token class-name\">node</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">NodePort</span>\nports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">http</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    nodePort<span class=\"token punctuation\">:</span> <span class=\"token number\">30036</span></code></pre></div>\n<p>그림의 로직을 보면 이해가 쉬울 것이다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93557027-fbabef00-f9b4-11ea-80b6-c03f9a26892f.png\" alt=\"스크린샷, 2020-09-18 13-43-43\"></p>\n<br/>\n<br/>\n<h3 id=\"external-name\" style=\"position:relative;\"><a href=\"#external-name\" aria-label=\"external name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>External name</h3>\n<p>ExternalName은 외부 서비스를 쿠버네티스 내부에서 호출하고자할때 사용할 수 있다.<br>\n클러스터내의 Pod들은 클러스터 IP를 가지고 있기 때문에 IP 대역 밖의 서비스를 호출하려면 NAT 설정등 복잡한 설정이 필요하다.<br>\n특히 클라우드 환경을 사용할 경우 데이타 베이스 또는 클라우드에서 제공되는 매지니드 서비스 (RDS, CloudSQL)등을 사용 할 경우<br>\n쿠버네티스 클러스터 밖이기 때문에, 호출이 어려운 경우가 있는데 이를 쉽게 해결할 수 있는 방법이 <code class=\"language-text\">ExternalName</code> 타입이다.</p>\n<p>아래와 같이 서비스를 ExternalName 타입으로 설정하고<br>\n주소를 DNS로  my.database.example.com으로 설정해주면<br>\n이 my-service는 들어오는 모든 요청을 my.database.example.com 으로 포워딩 해준다.<br>\n(일종의 프록시와 같은 역할) </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\napiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> my<span class=\"token operator\">-</span>service\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">prod</span>\nspec<span class=\"token punctuation\">:</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ExternalName</span>\nexternalName<span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>com</code></pre></div>\n<br/>\n<br/>\n<p>다음과 같은 구조로 서비스가 배포된다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93558324-2e0b1b80-f9b8-11ea-876a-231e2d4e533c.png\" alt=\"스크린샷, 2020-09-18 14-06-37\"></p>\n<br/>\n<br/>\n<p>DNS가 아닌 직접 IP를 이용하는 방식 </p>\n<p>위의 경우 DNS를 이용하였는데, DNS가 아니라 직접 IP 주소를 이용하는 방법도 있다.</p>\n<br/>\n<br/>\n<p>서비스 ClusterIP 서비스로 생성을 한 후 서비스 네임만 정의하고 서비스에 속해있는 Pod를 지정하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">ext</span>\nspec<span class=\"token punctuation\">:</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<br/>\n<p>다음으로, 아래와 같이 서비스의 EndPoint를 별도로 지정해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Endpoints</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">ext</span>\nsubsets<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> addresses<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> ip<span class=\"token punctuation\">:</span> <span class=\"token number\">35.225</span><span class=\"token number\">.75</span><span class=\"token number\">.124</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>이 때 <code class=\"language-text\">서비스명</code>과 서비스 <code class=\"language-text\">EndPoints의 이름</code>이 동일해야 한다.<br>\n위의 경우에는 <code class=\"language-text\">nasa-svc-ext</code>로 같은 서비스명을 사용하였고 이 서비스는 35.225.75.124:80 서비스를 가르키도록 되어 있다.</p>\n<br/>\n<hr>\n<h3 id=\"헤드리스-서비스\" style=\"position:relative;\"><a href=\"#%ED%97%A4%EB%93%9C%EB%A6%AC%EC%8A%A4-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"헤드리스 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>헤드리스 서비스</h3>\n<p>Headless Service</p>\n<p>서비스는 접근을 위해서 Cluster IP 또는 External IP 를 지정받는다.</p>\n<p>즉 서비스를 통해서 제공되는 기능들에 대한 엔드포인트를 쿠버네티스 서비스를 통해서 통제하는 개념인데<br>\nMSA 에서는 기능 컴포넌트에 대한 엔드포인트 (IP 주소)를 찾는 기능을 서비스 디스커버리 (Service Discovery) 라고 하고<br>\n서비스의 위치를 등록해놓는 서비스 디스커버리 솔루션을 제공한다.<br>\n<code class=\"language-text\">Etcd</code> 나 <code class=\"language-text\">hashcorp</code>의 consul (<a href=\"https://www.consul.io/\">https://www.consul.io/</a>)과 같은 솔루션<br>\n이 경우 쿠버네티스 서비스를 통해서 마이크로 서비스 컴포넌트를 관리하는 것이 아니라<br>\n서비스 디스커버리 솔루션을 이용하기 때문에 서비스에 대한 IP 주소가 필요없다.</p>\n<p>이런 시나리오를 지원하기 위한 쿠버네티스의 서비스를 헤드리스라고 하는데<br>\n이러한 헤드리스 서비스는 Cluster IP 등의 주소를 가지지 않는다.<br>\n단 DNS이름을 가지게 되는데 이 DNS 이름을 lookup 해보면 서비스 (로드밸런서)의 IP 를 리턴하지 않고<br>\n이 서비스에 연결된 Pod 들의 IP 주소들을 리턴하게 된다.</p>\n<br/>\n<br/>\n<p>간단하게 테스트를 해보자</p>\n<p>RS로 여러개의 POD를 정의해놓은 상태이다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>o wide\nNAME                       READY   STATUS    RESTARTS   AGE    IP          NODE         NOMINATED NODE   READINESS GATES\nnasatest<span class=\"token operator\">-</span>5bdd7d57f<span class=\"token operator\">-</span>s8b7d   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">27m</span>    <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.4</span>   nasa<span class=\"token operator\">-</span>node3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>47skg      <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5m6s   <span class=\"token number\">10.46</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>   nasa<span class=\"token operator\">-</span>node1   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>7j58x      <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5m6s   <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>   nasa<span class=\"token operator\">-</span>node3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>8ncc5      <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5m6s   <span class=\"token number\">10.42</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>   nasa<span class=\"token operator\">-</span>node2   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nreplicaset<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>ktzpq      <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          5m6s   <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>   nasa<span class=\"token operator\">-</span>node3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<br/>\n<p>여기에 다음과 같은 헤드리스 서비스를 하나 가동시켜보자</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless</span>\nspec<span class=\"token punctuation\">:</span>\nclusterIP<span class=\"token punctuation\">:</span> <span class=\"token class-name\">None</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pods<span class=\"token operator\">-</span><span class=\"token class-name\">label</span>\nports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">http</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span></code></pre></div>\n<p>POD들의 레이블을 묶어준 뒤 서비스를 정의하게되면</p>\n<br/>\n<br/>\n<p>아래와 같이 ClusterIP가 할당되지 않는 것을 확인 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> svc\nNAME                     TYPE        CLUSTER<span class=\"token operator\">-</span>IP   EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>   <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nkubernetes               ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP   <span class=\"token number\">31m</span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span>headless   ClusterIP   None         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span><span class=\"token operator\">/</span>TCP    6m12s</code></pre></div>\n<br/>\n<br/>\n<p>그러나 다른 POD를 생성해서 <code class=\"language-text\">NSLOOKUP</code>을 날려 DNS를 조회해보면</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl run nasatest <span class=\"token operator\">-</span>it <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>c1t1d0s7<span class=\"token operator\">/</span>network<span class=\"token operator\">-</span>multitool <span class=\"token operator\">--</span>generator<span class=\"token operator\">=</span>run<span class=\"token operator\">-</span>pod<span class=\"token operator\">/</span>v1 <span class=\"token operator\">--</span>rm<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> bash\nIf you don't see a <span class=\"token class-name\">command</span> prompt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">try</span> pressing enter<span class=\"token punctuation\">.</span>\nbash<span class=\"token operator\">-</span><span class=\"token number\">5.0</span># nslookup nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless</span>\nServer<span class=\"token punctuation\">:</span>         <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.10</span>\nAddress<span class=\"token punctuation\">:</span>        <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.10</span>#<span class=\"token number\">53</span>\nName<span class=\"token punctuation\">:</span>   nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local</span>\nAddress<span class=\"token punctuation\">:</span> <span class=\"token number\">10.46</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>\nName<span class=\"token punctuation\">:</span>   nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local</span>\nAddress<span class=\"token punctuation\">:</span> <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>\nName<span class=\"token punctuation\">:</span>   nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local</span>\nAddress<span class=\"token punctuation\">:</span> <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>\nName<span class=\"token punctuation\">:</span>   nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>svc<span class=\"token operator\">-</span><span class=\"token class-name\">headless<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local</span>\nAddress<span class=\"token punctuation\">:</span> <span class=\"token number\">10.42</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span></code></pre></div>\n<p>위과 같이 서비스에 의해 제공되는 pod 들의 IP 주소 목록이 나오는 것을 확인할 수 있다.</p>\n<br/>\n<hr>\n<h3 id=\"로드밸런서\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%84%9C\" aria-label=\"로드밸런서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드밸런서</h3>\n<ul>\n<li>Loabbalancer  </li>\n</ul>\n<p>현재 클러스터 환경은 GCP의 인스턴스에 KUBEADM으로 구성한 상태이다<br>\n현재 환경에서 GCP의 외부 IP로 LB를 이용해 URL을 받아와 보자!<br>\n외부 IP를 가지고 있기  때문에, 클러스터 외부에서 접근이 가능하다. 방화벽 문제만 없다면…;;;</p>\n<br/>\n<br/>\n<p>우선 다음과 같은 RS를 하나 정의한다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> apps<span class=\"token operator\">/</span><span class=\"token class-name\">v1</span> \nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ReplicaSet</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> rs<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \nspec<span class=\"token punctuation\">:</span> \nreplicas<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> \nselector<span class=\"token punctuation\">:</span> \n    matchLabels<span class=\"token punctuation\">:</span> \n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>rs<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\ntemplate<span class=\"token punctuation\">:</span> \n    metadata<span class=\"token punctuation\">:</span> \n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">rs</span>\n    labels<span class=\"token punctuation\">:</span> \n        app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>rs<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\n    spec<span class=\"token punctuation\">:</span> \n    containers<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> rs<span class=\"token operator\">-</span><span class=\"token class-name\">nasa</span> \n        image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n        ports<span class=\"token punctuation\">:</span> \n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<br/>\n<p>그리고 아래와 같은 LB 서비스를 하나 정의한다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span><span class=\"token class-name\">lb</span>\nspec<span class=\"token punctuation\">:</span>\nselector<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>rs<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">http</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LoadBalancer</span>\nexternalIPs<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token number\">34.84</span><span class=\"token number\">.172</span><span class=\"token number\">.31</span></code></pre></div>\n<br/>\n<p><code class=\"language-text\">externalIPs</code>의 경우 GCP 인스턴스에서 고정으로 할당한 IP입니다\n<img src=\"https://user-images.githubusercontent.com/69498804/93566536-2c495400-f9c8-11ea-98d6-3ffefa470af0.png\" alt=\"스크린샷, 2020-09-18 16-01-07\"></p>\n<br/>\n<br/>\n<p>위의 정의된 템플릿들을 생성하면 아래와 같이 정상적으로 생성됩니다!!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po <span class=\"token operator\">-</span>o wide\nNAME                       READY   STATUS    RESTARTS   AGE   IP          NODE         NOMINATE\nD NODE   READINESS GATES\nrs<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>fvzm6              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">64m</span>   <span class=\"token number\">10.46</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>   nasa<span class=\"token operator\">-</span>node1   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>  \n        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nrs<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>hqhjs              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">64m</span>   <span class=\"token number\">10.42</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span>   nasa<span class=\"token operator\">-</span>node2   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>  \n        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nrs<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>jn6jz              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">64m</span>   <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>   nasa<span class=\"token operator\">-</span>node3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>  \n        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nrs<span class=\"token operator\">-</span>nasa<span class=\"token operator\">-</span>zfh2n              <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          <span class=\"token number\">64m</span>   <span class=\"token number\">10.46</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span>   nasa<span class=\"token operator\">-</span>node1   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>  \n        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> svc <span class=\"token operator\">-</span>o wide\nNAME                     TYPE           CLUSTER<span class=\"token operator\">-</span>IP     EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>    <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE    SEL\nECTOR\nkubernetes               ClusterIP      <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>      <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>         <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP        <span class=\"token number\">119m</span>   <span class=\"token operator\">&lt;</span>no\nne<span class=\"token operator\">></span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>lb             LoadBalancer   <span class=\"token number\">10.101</span><span class=\"token number\">.13</span><span class=\"token number\">.59</span>   <span class=\"token number\">34.84</span><span class=\"token number\">.172</span><span class=\"token number\">.31</span>   <span class=\"token number\">80</span><span class=\"token punctuation\">:</span><span class=\"token number\">30850</span><span class=\"token operator\">/</span>TCP   <span class=\"token number\">36m</span>    app\n<span class=\"token operator\">=</span>nasa<span class=\"token operator\">-</span>rs<span class=\"token operator\">-</span>pod\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> endpoints\nNAME                     ENDPOINTS                                            AGE\nkubernetes               <span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.6</span><span class=\"token punctuation\">:</span><span class=\"token number\">6443</span>                                      <span class=\"token number\">120m</span>\nnasa<span class=\"token operator\">-</span>node<span class=\"token operator\">-</span>lb             <span class=\"token number\">10.32</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.42</span><span class=\"token number\">.0</span><span class=\"token number\">.3</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.46</span><span class=\"token number\">.0</span><span class=\"token number\">.2</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> more<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>   <span class=\"token number\">36m</span></code></pre></div>\n<p>POS 정상기동, 서비스 정상기동, EndPoint에 정상적으로 Pod가 동기화 됨을 확인</p>\n<br/>\n<br/>\n<p>자 그럼 이제 서비스를 위한 정의는 모두 끝났습니다!!</p>\n<p>테스트를 하기전 GCP 방화벽에서 HTTP에 대한 PORT를 허용해줍니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93566868-ac6fb980-f9c8-11ea-87b7-828996360064.png\" alt=\"스크린샷, 2020-09-18 16-04-43\"></p>\n<br/>\n<br/>\n<p>모두 확인이 완료 되었으면 외부 ubuntu os에서 curl로 요청해봅시다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">curl <span class=\"token number\">34.84</span><span class=\"token number\">.172</span><span class=\"token number\">.31</span><span class=\"token punctuation\">:</span><span class=\"token number\">30850</span></code></pre></div>\n<br/>\n<p>LB SVC에서 외부 PORT가 30850으로 설정되어있어 해당 포트로 요청해야합니다!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93567090-15573180-f9c9-11ea-9163-e5023b1dc46f.png\" alt=\"스크린샷, 2020-09-18 16-06-31\"></p>\n<p>정상적으로 LB SVC의 외부IP로 URL을 받아오네요!! 성공!!</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-service\">✔ Service</a></p>\n<ul>\n<li><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%85%9C%ED%94%8C%EB%A6%BF\">서비스 템플릿</a></li>\n<li><a href=\"#%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8\">엔드포인트</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%84%B8%EC%85%98-%EC%96%B4%ED%94%BC%EB%8B%88%ED%8B%B0\">👍 서비스 세션 어피니티?</a></li>\n<li>\n<p><a href=\"#-service-type\">🐱‍🏍 Service Type</a></p>\n<ul>\n<li><a href=\"#external-name\">External name</a></li>\n<li><a href=\"#%ED%97%A4%EB%93%9C%EB%A6%AC%EC%8A%A4-%EC%84%9C%EB%B9%84%EC%8A%A4\">헤드리스 서비스</a></li>\n<li><a href=\"#%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%84%9C\">로드밸런서</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 Service","categories":"Kubernetes","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-service/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/kubernetes-controller/","nextSlug":"/kubernetes-label/","prevSlug":"/kubernetes-service/"}},"staticQueryHashes":["1073350324","2938748437"]}