{"componentChunkName":"component---src-templates-blog-template-js","path":"/azure-lb/","result":{"data":{"cur":{"id":"89037838-0ae9-5f0b-980b-071e6772142f","html":"<p>머리말  </p>\n<p>아마 클라우드나 IDC나 어떠한 서비스를 운영하는데 가장 중요한건 부하분산이라고 생각합니다.<br>\n어떤 서비스든 전체적인 서비스에 대한 안정성이 가져야 하는 가장 중요한 것이기 때문이죠<br>\n그래서 이번 포스트에서는 AZURE에서 제공하는 L7 LB Application GateWay에 대해서 포스트 했습니다.  </p>\n<hr>\n<h2 id=\"-application-gateway\" style=\"position:relative;\"><a href=\"#-application-gateway\" aria-label=\" application gateway permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Application GateWay</h2>\n<p>Application GateWay는 웹 트래픽 부하 분산 장치, 즉 L7 LB 입니다.<br>\n요청 URL이나 호스트 헤더등의 HTTP 특성을 기반으로 트래픽을 웹 서버 풀로 보내 부하 분산합니다.  </p>\n<br/>\n<h3 id=\"구성요소\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성요소</h3>\n<p>APPlication GateWay의 구성요소는 다음과 같습니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107314961-1ce2b880-6ad9-11eb-9909-88b48e5f4627.png\" alt=\"how-application-gateway-works\"></p>\n<ul>\n<li>Front-end IP Address : 공용 IP(필수), 개인 IP(선택)모두 할당 가능합니다. AG위치와 Vnet,PIP의 위치는 같아야 합니다.  </li>\n<li>HTTP/HTTPS 수신기 : 들어오는 요청을 받기 위해 하나 이상을 추가합니다.  </li>\n<li>Routing rules : Rules을 사용해 허용 트래픽을 다른위치로 리디렉션 합니다.  </li>\n<li>HTTP 설정 :AG와 Back-end pool 간의 암호화 여부를 설정합니다.  </li>\n<li>상태 프로브 :Back-end pool에서 부하를 받아 줄 서버를 결정합니다. (정상 반환 코드 : 200~399)    </li>\n<li>Back-end Pool : NIC, PIP,INP,FQDN,VM set을 포함해 요청을 백 엔드 서버로 라우팅합니다.  </li>\n<li>WAF(Web Application Firewall) : 수신기가 요청을 받기 전 공격을 감지합니다. </li>\n</ul>\n<br/>\n<p>이론적으로 나열해봤자 이해하는 시간만 길어지니깐 일단 만들어봅시다</p>\n<br/>\n<hr>\n<h2 id=\"-application-gateway-생성\" style=\"position:relative;\"><a href=\"#-application-gateway-%EC%83%9D%EC%84%B1\" aria-label=\" application gateway 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Application GateWay 생성</h2>\n<br/>\n<p>[Create a Resoure] -> [Network] -> [Application Gateway] Tab 으로 이동해 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107316549-320d1680-6adc-11eb-9903-bec6f8ba89f0.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>AG에서는 2개의 Subnet이 필요합니다. 저는 아래처럼 SubNet을 새로 생성했습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107316957-122a2280-6add-11eb-954d-6489f59367c6.JPG\" alt=\"캡처4\"></p>\n<ul>\n<li>1.AG01-Subnet-nasa1515 : AG 용 Subnet</li>\n<li>2.BE-Subnet-nasa1q515 : Back-end Server 용 Subnet</li>\n</ul>\n<br/>\n<br/>\n<p>🤳 SubNet 설정까지 완료되었으면 Front-end 설정을 진행합니다.</p>\n<br/>\n<br/>\n<p>Front-end Tab에서 새로운 PIP를 생성, 설정 후 Back-end 설정으로 넘어갑니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317214-9381b500-6add-11eb-92fe-c26ff8e8ac39.JPG\" alt=\"캡처5\"></p>\n<br/>\n<br/>\n<h3 id=\"back-end-pool-설정\" style=\"position:relative;\"><a href=\"#back-end-pool-%EC%84%A4%EC%A0%95\" aria-label=\"back end pool 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back-end PooL 설정</h3>\n<br/>\n<p>Back-end Pool 설정에서 아래와 같이 새로운 PooL을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317506-23276380-6ade-11eb-85cc-59e25319d952.JPG\" alt=\"캡처6\"></p>\n<ul>\n<li>Add backend pool without targets : AG를 생성 후에 타겟을 추가 합니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"configuration-tab\" style=\"position:relative;\"><a href=\"#configuration-tab\" aria-label=\"configuration tab permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration Tab</h3>\n<br/>\n<p>Configuration Tab에서 Routing Rules을 추가 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317722-8c0edb80-6ade-11eb-9c1c-1ae01682d9e8.JPG\" alt=\"캡처22\"></p>\n<br/>\n<br/>\n<p>Listener (수신기) 설정에서 Frontend IP 설정을 Public으로 설정합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107317928-f162cc80-6ade-11eb-9c1b-a53fb6d2668d.JPG\" alt=\"캡처33\"></p>\n<br/>\n<br/>\n<p>Backend Targets 설정에서 이전에 설정했던 Backend 설정을 추가하고, HTTP 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318067-3ab31c00-6adf-11eb-9393-8827126b2011.JPG\" alt=\"캡처44\"></p>\n<br/>\n<br/>\n<p>다음과 같이 HTTP 설정을 추가하고 Routing Rules을 저장합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318128-66360680-6adf-11eb-9717-e2ca76d16ec4.JPG\" alt=\"캡처444\"></p>\n<br/>\n<br/>\n<p>다음과 같이 ReView Tab을 확인하고 AG를 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318410-0f7cfc80-6ae0-11eb-8cc6-7b0d67d60823.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>🤳 AGW는 생성하는데 5~8분정도 소요됩니다. </p>\n<br/>\n<hr>\n<h3 id=\"ag-생성-후-back-end-target-생성-및-추가\" style=\"position:relative;\"><a href=\"#ag-%EC%83%9D%EC%84%B1-%ED%9B%84-back-end-target-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%B6%94%EA%B0%80\" aria-label=\"ag 생성 후 back end target 생성 및 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AG 생성 후 Back-end Target 생성 및 추가</h3>\n<p>아까 Back-end를 생성할때 Target이 없이 생성했기에 Target을 만들어 추가해줍시다.  </p>\n<br/>\n<ol>\n<li>VM2개 생성, (VM 생성 시 Networking Tab의 SubNet이 AG와 겹치지 않게 해야함)</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107318926-25d78800-6ae1-11eb-8509-f26dcc6fe2e5.JPG\" alt=\"캡처4\"></p>\n<br/>\n<br/>\n<ol start=\"2\">\n<li>테스트를 위한 IIS 설치하기 위해 Power Shell을 엽니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107319469-3dfbd700-6ae2-11eb-83a5-a893e8e42b09.JPG\" alt=\"캡처6\"></p>\n<br/>\n<br/>\n<p>다음 스크립트를 실행하여 VM에 IIS를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-AzVMExtension `\n-ResourceGroupName AG01-NASA1515 `\n-ExtensionName IIS `\n-VMName VM01-NASA1515 `\n-Publisher Microsoft.Compute `\n-ExtensionType CustomScriptExtension `\n-TypeHandlerVersion 1.4 `\n-SettingString '{\"commandToExecute\":\"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \\\"C:\\\\inetpub\\\\wwwroot\\\\Default.htm\\\" -Value ($env:computername)\"}' `\n-Location EastUS</code></pre></div>\n<br/>\n<br/>\n<p>설치가 완료되었습니다. (두 개의 VM에 모두 진행해야 합니다.)</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320011-35f06700-6ae3-11eb-904e-beb6f3c2b38b.JPG\" alt=\"캡처5\"></p>\n<br/>\n<br/>\n<ol start=\"3\">\n<li>AG의 Blade를 접속 후 생성한 백 엔드 서버 Pool에 접속합니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320567-4b19c580-6ae4-11eb-99aa-d3ae437cf3a3.JPG\" alt=\"캡처444324\"></p>\n<br/>\n<br/>\n<p>다음과 같이 VM 2개를 추가하고 저장합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320518-2e7d8d80-6ae4-11eb-929a-dd40490068af.JPG\" alt=\"캡처44434343\"></p>\n<br/>\n<br/>\n<hr>\n<h2 id=\"-ag-test\" style=\"position:relative;\"><a href=\"#-ag-test\" aria-label=\" ag test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 AG TEST!!</h2>\n<p>AG가 제대로 구성되었는지 확인하기 위해 VM내에 IIS를 설치했으니 이제 테스트 해봅시다.  </p>\n<br/>\n<p>설정한 AG의 OverView Tab에서 PIP 정보를 확인하고 해당 PIP로 접속해봅시다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320724-9fbd4080-6ae4-11eb-99af-3e54455d822b.JPG\" alt=\"캡처5544554\"></p>\n<br/>\n<br/>\n<p>다음과 같이 IIS 페이지가 정상적으로 구동되고 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320859-e14deb80-6ae4-11eb-92fd-481735c929b5.JPG\" alt=\"vm1\"></p>\n<br/>\n<br/>\n<p>물론 AG이기 때문에 F5(새로고침)을 여러번 하면 다음과 같이 VM2로 트래픽이 분산됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107320906-fa569c80-6ae4-11eb-9d1d-18f5e57417e2.JPG\" alt=\"vm2\"></p>\n<br/>\n<h3 id=\"테스트-완료\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%99%84%EB%A3%8C\" aria-label=\"테스트 완료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 완료!</h3>\n<hr>\n<h2 id=\"-loadbalancer\" style=\"position:relative;\"><a href=\"#-loadbalancer\" aria-label=\" loadbalancer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ LoadBalancer</h2>\n<p>기본적으로 Front-end로 들어오는 Inbound Traffic을 Backend-PooL로 분산하는 동작방식은<br>\n이전 포스트에서 다뤘던 L7 LB인 Application Gateway와 동일합니다.  </p>\n<p>다만 LoadBalancer의 알고리즘은 배포 모드에 따라 결정됩니다. 기본 값은 아래 그림처럼 튜플 해시로 동작합니다  </p>\n<br/>\n<p>Azure LoadBalancer의 동작</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107323107-0cd2d500-6ae9-11eb-8513-8a934c22f6f0.png\" alt=\"load-balancer-distribution\"></p>\n<br/>\n<br/>\n<p>L4 LB는 아래와 같이 Public, Internal 두가지로 설정 할 수 있습니다.    </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107323867-64257500-6aea-11eb-9891-5232c5802636.JPG\" alt=\"캡처2\"></p>\n<p>Public LB : 외부의 트래픽을 내부로 분산시키는 역할<br>\nInternal LB : 대표 Private IP를 가지고 내부 VM의 트래픽을 분산시키는 역할  </p>\n<ul>\n<li>예를 들면 Public LB단에 연결된 VM은 Web으로만 사용하고</li>\n<li>Internal LB단은 DB 연결로만 사용해서 Private하게 설정이 가능합니다.  </li>\n</ul>\n<br/>\n<br/>\n<p>이제 LB를 생성해보면서 자세한 Option들에 대해서 설명하겠습니다!!.</p>\n<br/>\n<hr>\n<h2 id=\"🤞-loadbalancer-생성\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%9E-loadbalancer-%EC%83%9D%EC%84%B1\" aria-label=\"🤞 loadbalancer 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤞 LoadBalancer 생성</h2>\n<br/>\n<p>Create a Resource Tab에서 LoadBalancer를 만들어 줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107325659-7ce35a00-6aed-11eb-87e6-d11e40c90b46.JPG\" alt=\"캡처3333\"></p>\n<ul>\n<li>TYPE : 위에서 설명한 Internal, Public 두가지를 선택할 수 있습니다.</li>\n<li>\n<p>SKU (가격 계층) : Basic, Standard 두가지를 선택 할 수 있습니다. </p>\n<ul>\n<li>Basic : SLA를 지원하지 않습니다</li>\n<li>Standard : SLA : 99.99%, 만약 AZ를 사용한다면 사용해야함.</li>\n</ul>\n</li>\n<li>PIP의 경우 새롭게 만들었습니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"back-end-pool-생성하기\" style=\"position:relative;\"><a href=\"#back-end-pool-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"back end pool 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back-end PooL 생성하기</h3>\n<br/>\n<p>LB의 설정 Tab에서 Back-end PooL을 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107451079-e31dba80-6b89-11eb-8dda-0d27e4c7f556.JPG\" alt=\"캡처555\"></p>\n<ul>\n<li>저는 미리 생성해놨던 VM 3를 PooL에 추가했습니다.</li>\n</ul>\n<br/>\n<br/>\n<p>추가된 backend-PooL 확인</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107325960-0004b000-6aee-11eb-9e72-d27855a22a1c.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<hr>\n<h3 id=\"healthprobe-상태-프로브-생성하기\" style=\"position:relative;\"><a href=\"#healthprobe-%EC%83%81%ED%83%9C-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"healthprobe 상태 프로브 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HealthProbe [상태 프로브] 생성하기</h3>\n<p>HealthProbe는 Back-end PooL의 VM 상태를 모니터링 하는 기능입니다.  </p>\n<br/>\n<p>동일하게 LB의 Configure Tab에서 HealthProbe 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107326110-40fcc480-6aee-11eb-9539-7c9f93c3e3f6.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>해당 설정은 VM에게 2번 (Interbal 15초)간 응답이 없으면 Traffic을 분산하지 않습니다.</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"load-balancer-rule-부하-분산-규칙-생성\" style=\"position:relative;\"><a href=\"#load-balancer-rule-%EB%B6%80%ED%95%98-%EB%B6%84%EC%82%B0-%EA%B7%9C%EC%B9%99-%EC%83%9D%EC%84%B1\" aria-label=\"load balancer rule 부하 분산 규칙 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>load balancer rule [부하 분산 규칙] 생성</h3>\n<p>Back-end PooL의 VM에 Traffice을 분산 시키는 방법을 정의합니다.</p>\n<br/>\n<p>동일하게 LB의 Configure Tab에서 load balancer rule 설정을 추가합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107452641-ed8d8380-6b8c-11eb-8493-a504ddd28f25.JPG\" alt=\"캡처\"></p>\n<ul>\n<li>Port : LB에서 Traffic을 받을 Port</li>\n<li>Backend Port : Backend-PooL에 연결된 VM들이 사용할 Port</li>\n<li>Session persitence : 부하분산 하는 규칙을 3가지 정할 수 있음</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-lb-test\" style=\"position:relative;\"><a href=\"#-lb-test\" aria-label=\" lb test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 LB TEST</h2>\n<p>위에서 LB에 필요한 Backend-Pool, HealthProbe, LB Rule을 모두 설정했으니 테스트를 해보겠습니다.<br>\n간단하게 TEST를 하기 위해 VM들에 IIS를 설치를 진행하겠습니다.</p>\n<br/>\n<p>VM 1,2,3에 Bastion으로 접속해 Windows PowerShell을 실행합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107330024-5ffe5500-6af4-11eb-8282-411e322441b2.JPG\" alt=\"캡처333\"></p>\n<br/>\n<br/>\n<p>PowerShell 창에서 아래 명령을 실행하여 다음을 수행합니다.</p>\n<ul>\n<li>IIS 서버를 설치합니다.</li>\n<li>기본 iisstart.htm 파일을 제거합니다.</li>\n<li>VM 이름을 표시하는 새 iisstart.htm 파일을 추가합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"># install IIS server role\nInstall-WindowsFeature -name Web-Server -IncludeManagementTools\n\n# remove default htm file\nremove-item  <span class=\"token property\">C</span><span class=\"token punctuation\">:</span>\\inetpub\\wwwroot\\iisstart.htm\n\n# Add a new htm file that displays server name\nAdd-Content -Path <span class=\"token string\">\"C:\\inetpub\\wwwroot\\iisstart.htm\"</span> -Value $<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World from \"</span> + $<span class=\"token property\">env</span><span class=\"token punctuation\">:</span>computername<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107333027-3fd09500-6af8-11eb-886e-30d324850e10.JPG\" alt=\"4444\"></p>\n<br/>\n<br/>\n<p>이후 LB의 PIP로 접속하면 정상적으로 WEB Page가 접속됩니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107337984-609be900-6afe-11eb-9855-82cc54be5673.JPG\" alt=\"캡처333444\"></p>\n<br/>\n<hr>\n<h3 id=\"추가--inbound-nat-설정\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80--inbound-nat-%EC%84%A4%EC%A0%95\" aria-label=\"추가  inbound nat 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 : Inbound NAT 설정</h3>\n<br/>\n<p>LB에서 Inbound NAT를 설정하면 PIP를 통해 특정 VM에 접속이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107454011-8b824d80-6b8f-11eb-83ea-45d7fa71554d.JPG\" alt=\"캡처2\"></p>\n<p>SSH 연결을 위한 Inbound NAT를 설정했습니다.</p>\n<ul>\n<li>Port : Port Mapping을 위해 임의의 포트로 지정합니다.</li>\n<li>Target VM : 연결할 VM을 설정합니다.  </li>\n<li>Target Port : VM과 연결할 Port를 지정합니다.</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"추가-정보-사항\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-%EC%82%AC%ED%95%AD\" aria-label=\"추가 정보 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 정보 사항</h3>\n<p>Azure의 L4 LoadBalancer는 RR(Round-robin) 방식의 Routing이 지원되지 않습니다.<br>\n기본 방식이 HASH 이고 ClientIP, ClientIP &#x26; Protocol로 총 3가지 방식이 있습니다.<br>\n위의 3가지 방식에서 HASH를 제외하고는 Client &#x3C;-> Server 매칭의 방식이기 때문에<br>\n제대로된 LoadBalancing이 되지 않을 수 있습니다.<br>\n따라서 RR 방식의 Routing 방식을 사용하고 싶으면 Application Gateway나 Traffic Manager를 사용해야합니다.</p>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 모든 기능들이 줄줄이 이론을 써놓으니깐 어려워보이는 거지<br>\n실제로 동작원리와 설정방법은 그렇게 어렵지 않다는 것을 계속 깨닫고 있습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-application-gateway\">✔ Application GateWay</a></p>\n<ul>\n<li><a href=\"#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">구성요소</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-application-gateway-%EC%83%9D%EC%84%B1\">✌ Application GateWay 생성</a></p>\n<ul>\n<li><a href=\"#back-end-pool-%EC%84%A4%EC%A0%95\">Back-end PooL 설정</a></li>\n<li><a href=\"#configuration-tab\">Configuration Tab</a></li>\n<li><a href=\"#ag-%EC%83%9D%EC%84%B1-%ED%9B%84-back-end-target-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%B6%94%EA%B0%80\">AG 생성 후 Back-end Target 생성 및 추가</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-ag-test\">👏 AG TEST!!</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%99%84%EB%A3%8C\">테스트 완료!</a></li>\n</ul>\n</li>\n<li><a href=\"#-loadbalancer\">✔ LoadBalancer</a></li>\n<li>\n<p><a href=\"#%F0%9F%A4%9E-loadbalancer-%EC%83%9D%EC%84%B1\">🤞 LoadBalancer 생성</a></p>\n<ul>\n<li><a href=\"#back-end-pool-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">Back-end PooL 생성하기</a></li>\n<li><a href=\"#healthprobe-%EC%83%81%ED%83%9C-%ED%94%84%EB%A1%9C%EB%B8%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">HealthProbe 상태 프로브 생성하기</a></li>\n<li><a href=\"#load-balancer-rule-%EB%B6%80%ED%95%98-%EB%B6%84%EC%82%B0-%EA%B7%9C%EC%B9%99-%EC%83%9D%EC%84%B1\">load balancer rule 부하 분산 규칙 생성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-lb-test\">🙌 LB TEST</a></p>\n<ul>\n<li><a href=\"#%EC%B6%94%EA%B0%80--inbound-nat-%EC%84%A4%EC%A0%95\">추가 : Inbound NAT 설정</a></li>\n<li><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%95%EB%B3%B4-%EC%82%AC%ED%95%AD\">추가 정보 사항</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   아마 클라우드나 IDC나 어떠한 서비스를 운영하는데 가장 중요한건 부하분산이라고 생각합니다. 어떤 서비스든 전체적인 서비스에 대한 안정성이 가져야 하는 가장 중요한 것이기 때문이죠 그래서 이번 포스트에서는 AZURE에서 제공하는 L7 LB Application GateWay에 대해서 포스트 했습니다.   ✔ Application GateWay Application GateWay는 웹 트래픽 부하 분산 장치, 즉 L7 LB 입니다. 요청 URL이나 호스트 헤더등의 HTTP 특성을 기반으로 트래픽을 웹 서버 풀로 보내 부하 분산합니다.   구성요소 APPlication GateWay의 구성요소는 다음과 같습니다…","frontmatter":{"date":"August 01, 2021","title":"[AZURE] Application GateWay, LoadBalancer","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-lb/"}},"next":{"id":"8a05a396-fc68-5762-a348-1f0fb07f765d","html":"<p>머리말  </p>\n<p>스토리지에 대한 내용은 앞에서 간단하게 다뤘지만\n세부적인 내용들이 많이 부족합니다, 더 구체화 한 포스트를 이번에 작성했습니다. </p>\n<hr>\n<h2 id=\"-스토리지storage\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80storage\" aria-label=\" 스토리지storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 스토리지(STORAGE)</h2>\n<br/>\n<p>모든 데이터는 비정형데이터, 반정형데이터, 정형 데이터라는 3가지 유형으로 나눌 수 있습니다.</p>\n<br/>\n<p>데이터 유형</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">유형</th>\n<th align=\"left\">설명</th>\n<th align=\"left\">예</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">비정형 데이터</td>\n<td align=\"left\">데이터가 개체로 존재, 구조화 되지 않아 연산이 불가능</td>\n<td align=\"left\">문서, 동영상, 이미지 등 이진 파일</td>\n</tr>\n<tr>\n<td align=\"left\">반정형 데이터</td>\n<td align=\"left\">스키마에 해당하는 메타데이터가 데이터 내부에 있으며 연산 불가능</td>\n<td align=\"left\">HTML, XML, JSON, YAML 형식 데이터</td>\n</tr>\n<tr>\n<td align=\"left\">정형 데이터</td>\n<td align=\"left\">고정된 칼럼에 저장되거나 행과 열에 의해 데이터 속성이 구분 되는 데이터, 연산가능</td>\n<td align=\"left\">RDBMS 테이블, 스프레드시트</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<br/>\n<p>Azure 스토리지는 위 3가지 유형 뿐 아니라 빅데이터 등의 시나리오도 지원합니다.</p>\n<ul>\n<li>가상 컴퓨터의 디스크와 공유 폴더용 스토리지</li>\n<li>정의된 데이터 모델을 가지고 있지 않은 비정형 데이터(Blob 데이터)용 스토리지</li>\n<li>관계형 DB 데이터, 스트레드시트처럼 스키마 구조를 따르는 구조화 데이터 스토리지</li>\n<li>반 구조화된 데이터 (반정형)용 스토리지</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-계정storage-account\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account\" aria-label=\" 스토리지 계정storage account permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 스토리지 계정(Storage Account)</h2>\n<p>Azure 스토리지 서비스는 Storage Account를 통해 관리합니다.<br>\n즉 스토리지 계정이 Storage 서비스의 최상위 NameSpace이며 하위의 스토리지를 사용할 수 있게 권한을 부여합니다.<br>\n그래서 스토리지 서비스를 사용하기 위한 첫 번째 작업이 Storage Account를 만드는 것입니다.<br>\n이제 스토리지 계정을 생성하며 세부 옵션들에 대해 알아봅시다</p>\n<br/>\n<ul>\n<li>\n<p>스토리지 계정 생성 Tab</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107182135-8acaa980-6a1f-11eb-9cc4-a74f1e67bb5f.JPG\" alt=\"캡처4444\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Storage Account Name : 아래 3가지 조건을 만족해야 합니다.</p>\n<ul>\n<li>Azure 전체에서 고유한 이름</li>\n<li>이름의 길이는 3~24자</li>\n<li>소문자 및 숫자(소문자로 시작해야 함)  </li>\n</ul>\n<br>\n</li>\n<li>\n<p>Performance : Perfomance는 생성 후 변경 할 수 없습니다.   </p>\n<p>Performance에 따라 선택할 수 있는 Account Kind가 달라 집니다.</p>\n<ul>\n<li>Storage(범용 v1) : Blob 및 파일, 큐, 테이블을 지원하는 레거시 계정</li>\n<li>StorageV2(범용 v2) : 기본 스토리지 계정 v1과 동일 기능 지원</li>\n<li>BlobStorage : Blob 전용 레거시 스토리지 계정</li>\n<li>FileStorage : 프리미엄 성능 계층에서 사용, 파일 공유 전용 스토리지 계정입니다. (SQL 등)</li>\n<li>BlockblobStorage : 프리미엄 계층에서 사용, 개체 데이터를 저장하는 Blob과 추가 Blob 전용 스토리지 계정</li>\n</ul>\n</li>\n</ul>\n <br/>\n<ul>\n<li>\n<p>Replication : 일시적인 하드웨어 오류, 네트워크 이슈에 데이터를 보호하기 위한 복제 옵션</p>\n<p> <img src=\"https://user-images.githubusercontent.com/69498804/107182831-d3369700-6a20-11eb-9842-f450e61e6689.JPG\" alt=\"캡처66666\"></p>\n</li>\n</ul>\n<br/>\n<h3 id=\"기본-지역-내-redundancy-옵션\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\" aria-label=\"기본 지역 내 redundancy 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 지역 내 Redundancy 옵션</h3>\n<br/>\n<p>Azure Storage 계정은 기본 지역으로 설정한 곳에서(예: 한국 중부) 항상 세 차례 복제됩니다.<br>\n기본 지역에서 데이터가 복제되는 옵션은 두 가지 중에서 선택이 가능합니다.</p>\n<br/>\n<ul>\n<li>\n<h3 id=\"lrslocally-redundant-storage\" style=\"position:relative;\"><a href=\"#lrslocally-redundant-storage\" aria-label=\"lrslocally redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LRS(Locally Redundant Storage)</h3>\n<p>-> 물리적으로 동일한 지역 내에 데이터를 세 번 복제하는 방식\n저렴한 방법이지만 해당 데이터센터에 장애가 발생한 경우에는 데이터를 복구할 수 없어 가용성이 떨어집니다</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183136-8dc69980-6a21-11eb-8ea3-f63e76ad1eee.png\" alt=\"다운로드\"></p>\n<p>data가 세개의 복제본에 완전히 동기화되어야 하기 때문에 쓰기 작업의 경우 세 개의 복제본에 작업이 마쳐야 완료 됩니다.</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"zrszone-redundant-storage\" style=\"position:relative;\"><a href=\"#zrszone-redundant-storage\" aria-label=\"zrszone redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZRS(Zone Redundant Storage)</h3>\n<p>-> 기본 지역 내의 세 개의 다른 가용성 영역에 데이터를 복제하는 방식입니다. (LRS 방식보다 높은 가용성을 제공합니다.)<br>\n한 장소에 세 개의 복제를 모두 저장하는 LRS 방식에 비해서는 더 안전할 수 있지만<br>\nRegion 자체에 문제가 발생하게 되는 경우에는 복구할 수 없습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183291-e5fd9b80-6a21-11eb-8f55-1a43bf7765f5.png\" alt=\"다운로드\"></p>\n<ul>\n<li>현재 한국 Region에서는 사용할 수 없는 옵션입니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"보조-지역-내-redundancy-옵션\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\" aria-label=\"보조 지역 내 redundancy 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조 지역 내 Redundancy 옵션</h3>\n<br/>\n<p>고가용성을 필요로 하는 프로그램의 경우 기본 지역 이외에 보조 지역에 복제해서 보관이 가능합니다.<br>\n단 보조 지역을 선택할 수 없고, 주 지역의 리전 쌍(Paired Region)으로 자동 지정됩니다.<br>\n주의 사항은 보조 지역에 저장되어 있는 데이터는 동기화 되어 있지 않아, 주 지역과 싱크가 정확히 맞지 않을 수 있습니다.  </p>\n<br/>\n<ul>\n<li>\n<h3 id=\"grsgeo-redundant-storage\" style=\"position:relative;\"><a href=\"#grsgeo-redundant-storage\" aria-label=\"grsgeo redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GRS(Geo Redundant Storage)</h3>\n<p>-> LRS 방식으로 기본 지역내에 데이터를 동기화해 보조 지역에 싱크</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183700-9ec3da80-6a22-11eb-917b-85b79f88b697.png\" alt=\"다운로드 (2)\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h3 id=\"gzrsgeo-zone-redundant-storage\" style=\"position:relative;\"><a href=\"#gzrsgeo-zone-redundant-storage\" aria-label=\"gzrsgeo zone redundant storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GZRS(Geo Zone Redundant Storage)</h3>\n<p>-> ZRS 방식으로 기본 지역 내 세곳의 가용성 영역에 동기화,복사.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107183813-cb77f200-6a22-11eb-9b32-a73b5f92a697.png\" alt=\"다운로드 (3)\"></p>\n<ul>\n<li>스토리지 계정 종류가 범용 v2의 경우에만 GZRS 혹은 RA-GZRS를 설정할 수 있습니다. 단, 현재 한국 지역에는 지원되지 않습니다.</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>위의 Storage Account 별 Redundancy 방식을 정리하면 아래와 같습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107184065-388b8780-6a23-11eb-8cbd-aa13e27d47de.JPG\" alt=\"캡처11221122\"></p>\n<ul>\n<li>GRS,GZRS의 경우 보조 지역의 데이터의 복제 데이터에 대한 읽기/쓰기 접근이 안됩니다.</li>\n<li>읽기 접근이 가능하기 위해선 표에 있는 RA-GRS,RA-GZRS를 사용해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>더 간단하게 스토리지 별 Account 기능 비교를 정리해봤습니다.</p>\n<table>\n<thead>\n<tr>\n<th>계정종류</th>\n<th>지원 서비스</th>\n<th>성능</th>\n<th>엑세스 계층</th>\n<th>복제 옵션</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Storage</td>\n<td>Blob,File Storage,큐,Table,Disk</td>\n<td>표준 프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS,RA-GRS</td>\n</tr>\n<tr>\n<td>StorageV2</td>\n<td>Blob,File Storage,큐,Table,Disk</td>\n<td>표준 프리미엄</td>\n<td>HOT,COLL</td>\n<td>LRS,ZRS,GRS,RA-GRS,RA-GZRS</td>\n</tr>\n<tr>\n<td>BlobStorage</td>\n<td>블록 Blob,추가 Blob</td>\n<td>표준</td>\n<td>HOT,COLL</td>\n<td>LRS,ZRS,RA-GRS</td>\n</tr>\n<tr>\n<td>BlockBlobStarage</td>\n<td>블록 Blob,추가 Blob</td>\n<td>프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS</td>\n</tr>\n<tr>\n<td>FileStorage</td>\n<td>파일 공유</td>\n<td>프리미엄</td>\n<td>N/A</td>\n<td>LRS,ZRS</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>Networking : 네트워크 연결 방법과 네트워크 라우팅 기본 설정이 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107185013-f82d0900-6a24-11eb-91ba-21acaec8d43a.JPG\" alt=\"캡처666666\"></p>\n<ul>\n<li>Public Endpoint(All Network) : 기본적인 공용 공유입니다.</li>\n<li>Public Endpoint (Selected Network) : 특정 네트워크에만 엑세스</li>\n<li>Pricate Endpoint : Vnet에서 사설 IP를 할당해 프라이빗 하게 엑세스</li>\n</ul>\n</li>\n</ul>\n<br>\n<br>\n<ul>\n<li>\n<p>엑세스 계층</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107185211-5b1ea000-6a25-11eb-8564-bed7c94fdd1e.JPG\" alt=\"캡처777676\"></p>\n<p>스토리지 계정을 생성할때 Blob 데이터의 엑세스 계층을 지정합니다.  </p>\n<ul>\n<li>HOT : 일반적인 시나리오, 자주 엑세스해야 하는 데이터에 적합</li>\n<li>Cool : HOT에 비해 저장소 비용은 낮고 엑세스 비용은 높다, 30일 동안 저장하는 데이터에 적합</li>\n<li>보관(Archive) : 저장소 비용은 가장 낮으나 검색 비용은 높습니다, 최소 180일 장기 보관 용입니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-계정storage-account-생성\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account-%EC%83%9D%EC%84%B1\" aria-label=\" 스토리지 계정storage account 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 스토리지 계정(Storage Account) 생성</h2>\n<p>위에 설명한 세부 설정 Tab들을 모두 Default로 놓고 간단하게 생성해보겠습니다.  </p>\n<ul>\n<li>\n<p>배포가 정상적으로 이뤄지면 다음과 같이 생성됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107186139-0ed45f80-6a27-11eb-9f9a-fb62b1eafa1d.JPG\" alt=\"캡처988989898\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Access Key Tab에서 발급된 Access Key를 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107186271-46430c00-6a27-11eb-898c-645317dcdb56.JPG\" alt=\"캡처6656656565\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-스토리지-service\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-service\" aria-label=\" 스토리지 service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌹 스토리지 Service</h2>\n<br/>\n<p>위에서 StorageV2 범용 계정을 생성했다면 기본적으로 모든 스토리지 서비스를 제공합니다.<br>\n각 스토리지 서비스는 HTTP/HTTPS를 통해 어디서나 엑세스 할 수 있습니다.<br>\n따라서 스토리지 서비스 마다 고유한 엑세스 URL을 제공합니다. </p>\n<ul>\n<li>컨테이너(Blob)스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).blob.core.windows.net/</li>\n<li>파일 공유 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).file.core.windows.net/</li>\n<li>큐 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).queue.core.windows.net/</li>\n<li>테이블 스토리지 : <a href=\"http://(%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80\">http://(스토리지</a> 계정).table.core.windows.net/</li>\n</ul>\n<br/>\n<p>이제 각 스토리지 서비스에 대해 살펴보겠습니다.</p>\n<br/>\n<h3 id=\"blob-컨테이너-storage-service\" style=\"position:relative;\"><a href=\"#blob-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-storage-service\" aria-label=\"blob 컨테이너 storage service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blob (컨테이너) Storage Service</h3>\n<br/>\n<p>구조화되지 않은 대량의 비정형 데이터를 저장하기 위한 개체 스토리지 솔루션입니다.<br>\n원래는 Blob이란 이름을 사용했으나 최근에 컨테이너로 변경되었습니다.<br>\n컨테이너 스토리지는 브라우저를 통해 이미지, 문서 파일에 직접 엑세스 하거나 저장할 경우<br>\n동영상, 오디오 스트리밍, 로그파일 등을 분석하기 위한 데이터 저장 시나리오에 적합합니다.</p>\n<br/>\n<ul>\n<li>\n<p>컨테이너 스토리지의 리소스 관계</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189039-06325800-6a2c-11eb-9105-45da19b6f7fc.png\" alt=\"blob1\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-컨테이너blob-스토리지-생성\" style=\"position:relative;\"><a href=\"#-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88blob-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\" aria-label=\" 컨테이너blob 스토리지 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 컨테이너(Blob) 스토리지 생성</h2>\n<br/>\n<p>컨테이너 스토리지에 Blob 데이터를 저장하기 위해선 우선 컨테이너를 만들어야 합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189266-717c2a00-6a2c-11eb-806c-7f633f01bf7c.JPG\" alt=\"캡처767676767\"></p>\n<br/>\n<p>여기서 컨테이너는 Blob들을 그룹화 하는 논리적인 개념입니다.<br>\n간단히 Blob 집합을 모아 놓은 논리적 개념으로 생각해야 합니다.  </p>\n<br/>\n<p>컨테이너 생성 Option 설명</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189434-b902b600-6a2c-11eb-9fd6-f2ae73e54ff5.JPG\" alt=\"캡처89797898798798\"></p>\n<ul>\n<li>Name : 소문자, 문자와 ”-“만 포함, 길이는 3~64자</li>\n<li>\n<p>Public access level : 컨테이너와 Blob에 익명 엑세스를 관리</p>\n<ul>\n<li>Private : 기본, 익명 엑세스 제공 X</li>\n<li>Blob : 인증 없이 읽을 수 있지만, Blob 목록 나열 x</li>\n<li>Container : Blob을 읽을 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<p>컨테이너를 생성하더라도 스토리지 계정의 다음 부분이 허용되어야 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107189964-84432e80-6a2d-11eb-96da-9b43345a8440.JPG\" alt=\"캡처89898898989\"></p>\n<br/>\n<p>Blob 데이터 관리  </p>\n<p>컨테이너를 만들고 나면 2가지 방법으로 데이터를 관리 할 수 있습니다.</p>\n<ul>\n<li>루트에 파일을 저장</li>\n<li>폴더를 생성해 폴더 내에 파일을 저장</li>\n</ul>\n<br/>\n<br/>\n<p>Blob 업로드 Blade의 Option을 살펴봅시다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107190238-eac84c80-6a2d-11eb-9c19-91ce0b488720.JPG\" alt=\"캡처899898989898989\"></p>\n<ul>\n<li>File : 하나 이상의 파일 선택 가능</li>\n<li>Authentication Type : Azure AD, Account Key 방식 제공  </li>\n<li>\n<p>Blob Type : 3가지 유형 존재, 변경 불가능</p>\n<ul>\n<li>블록 blob : 텍스트나 이진 데이터 최대 4.75TiB</li>\n<li>페이지 blob : 임의 엑세스 파일 VHD 파일, 최대 8TiB</li>\n<li>추가 blob : 로그 파일 처럼 데이터를 추가</li>\n</ul>\n</li>\n<li>\n<p>Block Size : 최대 50,000개의 블록을 지원, 기본 값은 4MB</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107190749-8d80cb00-6a2e-11eb-8688-a816293b477c.JPG\" alt=\"987978987987978978\"></p>\n<br/>\n</li>\n<li>Access tier : HOT,CooL을 선택 가능</li>\n<li>Upload to folder : 폴더에 업로드</li>\n<li>Encryption scope : Blob을 만들때 암호화 범위 지정</li>\n</ul>\n<br/>\n<br/>\n<p>이제 컨테이너를 생성하고 임의의 텍스트 파일을 컨테이너에 업로드 해보겠습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191268-434c1980-6a2f-11eb-8e47-bba9999d3e2e.JPG\" alt=\"캡처\"></p>\n<br/>\n<br/>\n<p>저는 NASA1515라는 폴더 안에 업로드 했습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191330-57901680-6a2f-11eb-9dbe-f471f683fa89.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<p>업로드 한 파일의 Overview Tab에서 정보들과, URL을 확인 가능 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191414-78f10280-6a2f-11eb-8f21-04048ff63ff8.JPG\" alt=\"캡처3\"></p>\n<br/>\n<br/>\n<p>URL로 접속 해보면 다음과 같이 임시 내용이 표시 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107191640-cbcaba00-6a2f-11eb-98fe-69e526bbfcb8.JPG\" alt=\"44\"></p>\n<br/>\n<hr>\n<h2 id=\"-file-share-스토리지-생성\" style=\"position:relative;\"><a href=\"#-file-share-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\" aria-label=\" file share 스토리지 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👏 File Share 스토리지 생성</h2>\n<p>File Share는 아주 간단합니다. 이름, 할당량만 지정하면 됩니다.<br>\nFile Share는 윈도우, 리눅스, 맥OS에서 연결 할 수 있습니다. 기본적으로 SMB 445 Port를 사용합니다.!!</p>\n<br/>\n<ul>\n<li>\n<p>저는 간단하게 Linux용 Windows Server용 2개를 만들었습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107192630-33cdd000-6a31-11eb-8b9f-fd7df573eb41.JPG\" alt=\"캡처4444\"></p>\n</li>\n</ul>\n<br/>\n<h2 id=\"🤳-windows-server-연결\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%B3-windows-server-%EC%97%B0%EA%B2%B0\" aria-label=\"🤳 windows server 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤳 Windows Server 연결</h2>\n<br/>\n<p>그럼 만들어져 있는 Windows Server에 연결 한뒤 Windows PowerShell ISE를 실행합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107193671-6cba7480-6a32-11eb-9f8a-a0d8ab32dd69.JPG\" alt=\"캡처222\"></p>\n<br/>\n<br/>\n<p>이제 연결 할 Fileshare의 Overview에서 Connect tab의 스크립트를 복사합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107193807-983d5f00-6a32-11eb-8d57-78def2a4eb43.JPG\" alt=\"캡처22313\"></p>\n<br/>\n<br/>\n<p>Windows Service PowerShell에 스크립트를 입력하면 다음과 같이 연결됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107194037-e3f00880-6a32-11eb-812c-b906e847e461.JPG\" alt=\"캡처4444\"></p>\n<br/>\n<br/>\n<p>정상적으로 연결이 되었다면 다음과 같이 탐색기에서 확인이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107194195-139f1080-6a33-11eb-8393-1a3b781d9856.JPG\" alt=\"캡처55555\"></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80storage\">✔ 스토리지(STORAGE)</a></li>\n<li>\n<p><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account\">✌ 스토리지 계정(Storage Account)</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\">기본 지역 내 Redundancy 옵션</a></li>\n<li><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%A7%80%EC%97%AD-%EB%82%B4-redundancy-%EC%98%B5%EC%85%98\">보조 지역 내 Redundancy 옵션</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EA%B3%84%EC%A0%95storage-account-%EC%83%9D%EC%84%B1\">👍 스토리지 계정(Storage Account) 생성</a></li>\n<li>\n<p><a href=\"#-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-service\">🌹 스토리지 Service</a></p>\n<ul>\n<li><a href=\"#blob-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-storage-service\">Blob (컨테이너) Storage Service</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88blob-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\">🙌 컨테이너(Blob) 스토리지 생성</a></li>\n<li><a href=\"#-file-share-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%83%9D%EC%84%B1\">👏 File Share 스토리지 생성</a></li>\n<li><a href=\"#%F0%9F%A4%B3-windows-server-%EC%97%B0%EA%B2%B0\">🤳 Windows Server 연결</a></li>\n</ul>\n</div>","frontmatter":{"date":"July 30, 2021","title":"[AZURE] Storage Account, Azure BLOG!","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-blob/"}},"prev":{"id":"1e4b185e-3a61-592b-a0a9-bffd601deb83","html":"<p>머리말  </p>\n<p>지금까지 단일로 만든 VM은 장애가 일어나면 워크로드 대응이 쉽지 않습니다.<br>\n이번 포스트에서는 Azure에서 생성한 VM에 대한 크기 조정과 가용성 구현에 대해서 알아보겠습니다.<br>\n가용성을 구현하는 방법은 여러가지가 있는데 이번 포스트는 Scail-up,down과 가용성에 대해 다룹니다.<br>\n이미 이전 Region &#x26; availability zones 포스트에서 가용성에 대한 설명은 했었지만 부족한 부분이 많아서 다시 설명합니다.  </p>\n<hr>\n<h2 id=\"-vm-scail-up--scail-down\" style=\"position:relative;\"><a href=\"#-vm-scail-up--scail-down\" aria-label=\" vm scail up  scail down permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ VM Scail-Up &#x26; Scail-Down</h2>\n<p>Scail-Up &#x26; Down 은 이미 배포된 VM의 CPU,MEM,DISK 등을 높거나, 낮게 변경하는 작업입니다.<br>\n가장 간단한 방법으로 가용성을 유지하는 방법이라 아래와 같은 시나리오에 사용합니다.  </p>\n<ul>\n<li>서비스를 제공하는 VM의 사용률이 전반적으로 낮은 경우 (크기 감소로 비용 감소)  </li>\n<li>VM의 갯수를 늘리지 않고 Scail-Up으로도 트래픽을 충분히 소화할 수 있는 경우  </li>\n</ul>\n<br/>\n<p>VM을 Scail-Up &#x26; Down 등 크기를 조정하는 일반적인 프로세스는 아래 3단계입니다.  </p>\n<ul>\n<li>VM 할당 해제</li>\n<li>VM 크기 조정</li>\n<li>VM 재시작</li>\n</ul>\n<br/>\n<p>VM을 실행 중일 때 크기를 조정하면 현재 HOST-Cluster가 지원하는 시리즈로만 변경 가능합니다.<br>\n때문에 할당을 해제해야 현재 Region에서 사용 가능한 모든 옵션을 볼수 있습니다.  </p>\n<hr>\n<h3 id=\"그럼-바로-scail-up-실습을-진행해봅시다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EB%B0%94%EB%A1%9C-scail-up-%EC%8B%A4%EC%8A%B5%EC%9D%84-%EC%A7%84%ED%96%89%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"그럼 바로 scail up 실습을 진행해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 바로 Scail-Up 실습을 진행해봅시다.</h3>\n<p>이전 포스트에서 생성한 VM01-linus-nasa1515 VM을 크기 조정 해보겠습니다.</p>\n<br/>\n<br/>\n<p>첫번째로 VM 서버의 할당을 해제합니다. (중지)</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107300405-cf585280-6abc-11eb-9e1d-ed44c79292a8.JPG\" alt=\"캡처1\"></p>\n<br/>\n<br/>\n<p>이제 VM의 Size Blade에서 여러가지의 Size를 설정 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107300577-252cfa80-6abd-11eb-8ab9-c196ea7f20a7.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<p>원하는 Size로 Resize하면 아래와 같이 VM의 Size가 변경됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107300792-881e9180-6abd-11eb-93d8-f808494796c9.JPG\" alt=\"캡처3\"></p>\n<br/>\n<hr>\n<h2 id=\"🤞-vm-availability-가용성-구현\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%9E-vm-availability-%EA%B0%80%EC%9A%A9%EC%84%B1-%EA%B5%AC%ED%98%84\" aria-label=\"🤞 vm availability 가용성 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤞 VM Availability [가용성 구현]</h2>\n<p>가용성(Availability)는 서버와 네트워크, 프로그램 등 시스템이 정상적으로 사용 가능한 정도를 뜻합니다.<br>\n즉 이상없이 서비스가 가동되는 것이 목적입니다.<br>\n이를 위해 Azure에서는 VM의 가용성이 영향받을 수 잇는 3가지 시나리오를 정리했습니다.  </p>\n<ul>\n<li>계획되지 않은 하드웨어 유지 보수</li>\n<li>계획된 유지보수 (MS의 정기적인 업데이트, 보안패치)</li>\n<li>예측하지 못한 서버다운  </li>\n</ul>\n<br/>\n<p>Single VM, Availability set, Availability zone, Region Pairs의 SLA 비교</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107301292-915c2e00-6abe-11eb-856d-c721dff85eff.jpg\" alt=\"azure-availability-zones_0\"></p>\n<ul>\n<li>SLA = Service-level agreements (서비스 레벨 수준)</li>\n</ul>\n<br/>\n<br/>\n<hr>\n<h2 id=\"-availability-set-가용성-집합\" style=\"position:relative;\"><a href=\"#-availability-set-%EA%B0%80%EC%9A%A9%EC%84%B1-%EC%A7%91%ED%95%A9\" aria-label=\" availability set 가용성 집합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👌 Availability Set [가용성 집합]</h2>\n<p>Availability Set [가용성 집합]은 단일 데이터센터에서 가상 머신의 중복성과 가용성을 제공하는 서비스 입니다.<br>\n즉 특정 물리서버에 호스팅, 특정 랙에 수납되어있으면 각각 단일 실패 지점이 됩니다.<br>\nAzure에서는 이를 보완하고자 AS를 제공합니다.<br>\nAS는 VM을 Provision 할때만 사용가능 하며, AZ 없이 만든 VM은 다시 생성해야합니다.</p>\n<p>MS의 AS는 아래 두가지로 나뉘어서 서비스됩니다.  </p>\n<br/>\n<h3 id=\"fault-domain-장애도메인\" style=\"position:relative;\"><a href=\"#fault-domain-%EC%9E%A5%EC%95%A0%EB%8F%84%EB%A9%94%EC%9D%B8\" aria-label=\"fault domain 장애도메인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fault Domain (장애도메인)</h3>\n<ul>\n<li>동일한 전원, 네트워크 스위치를 사용하는 도메인</li>\n<li>간단하게 말하면 물리적인 랙의 개념입니다.</li>\n<li>최대 3개까지 생성 가능</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"update-domain-업데이트-도메인\" style=\"position:relative;\"><a href=\"#update-domain-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EB%8F%84%EB%A9%94%EC%9D%B8\" aria-label=\"update domain 업데이트 도메인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update Domain (업데이트 도메인)</h3>\n<ul>\n<li>가상머신의 개념이라고 생각하면됩니다.</li>\n<li>APP, Service의 업데이트 목적으로만 사용되는 도메인입니다.</li>\n<li>최대 20개까지 생성 가능</li>\n</ul>\n<p>보통 AS는 LB와 같이 묶어서 사용하게 되는데 AS의 개념도 비슷합니다.</p>\n<br/>\n<br/>\n<p>두 도메인의 개념을 쉽게 이해 할 수 있는 영상입니다. - <a href=\"https://tikus.tistory.com/1\">출처</a></p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/105452626-fb549500-5cc1-11eb-9b09-17cb3ce5adfc.gif\" alt=\"2222\"></p>\n<p>그림과 같이 2개의 FD, 8개의 UD를 가지게 된다면 UD는 FD에 순서대로 나뉘어서 배포되게 됩니다.<br>\n그리고 두개의 FD에 배포되어있는 UD는 모든 데이터를 공유하고 있어 하드웨어 이슈로 인한 장애를 방지합니다.<br>\n이렇게 정리하고 보니 Bonding의 개념과 매우 비슷하네요</p>\n<br/>\n<hr>\n<h3 id=\"그럼-이제-as를-생성해봅시다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EC%9D%B4%EC%A0%9C-as%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"그럼 이제 as를 생성해봅시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 이제 AS를 생성해봅시다</h3>\n<br/>\n<p>우선은 AS에 필요한 Vnet과 Subnet들을 추가로 생성해주겠습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107302522-db461380-6ac0-11eb-974e-8438e18e0502.JPG\" alt=\"캡처4\"></p>\n<ul>\n<li>IP1개에 Subnet2개를 생성해줍니다!</li>\n</ul>\n<br/>\n<br/>\n<p>이후 새로운 VM을 AS 세팅 후 배포 합니다. (이후 동일한 VM1개를 추가로 배포)</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107303576-aaff7480-6ac2-11eb-83aa-c5e3e53f8008.JPG\" alt=\"캡처1\"></p>\n<br/>\n<br/>\n<p>새로 만들 AS 세팅을 다음과 같이 설정합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107303631-cb2f3380-6ac2-11eb-98ec-63534707eec2.JPG\" alt=\"캡처2\"></p>\n<br/>\n<br/>\n<p>배포가 완료된 VM의 Availability + Scaling Tab에서 설정을 확인합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107304063-aedfc680-6ac3-11eb-8c47-8499832a401b.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>FD/UD의 Index 번호는 0번부터 시작됩니다.</li>\n</ul>\n<br/>\n<br/>\n<p>새로 생성한 AS의 Overview에서 다음과 같이 배포된 VM의 배치 상태를 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107304195-f1a19e80-6ac3-11eb-9f58-73b7b61ea274.JPG\" alt=\"캡처4\"></p>\n<br/>\n<hr>\n<h2 id=\"-availability-zone-가용성-영역\" style=\"position:relative;\"><a href=\"#-availability-zone-%EA%B0%80%EC%9A%A9%EC%84%B1-%EC%98%81%EC%97%AD\" aria-label=\" availability zone 가용성 영역 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 Availability Zone [가용성 영역]</h2>\n<p>Availability Zone 은 하나 이상의 IDC로 구성된 3개 이상의 영역(Zone)에 걸쳐 FD/UD를 “자동” 배포 합니다.<br>\n가용성 영역을 통해 영역간의 APP 데이터를 복제해 IDC의 장애가 발생해도 가용성을 유지 할 수 있습니다.  </p>\n<p>예를 들어 정상 서비스를 위해 VM이 2대 필요하다고 가정합시다.<br>\n그러면 AZ를 2곳 사용한다면 각 영역에 2개씩 총 4대를 배포해야합니다. 3곳이면 6개겠죠?  </p>\n<ul>\n<li>\n<p>쉽게 생각하면 각 지역마다 AS가 존재하는데 해당 렉에 나눠서 배포한다고 이해가 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/105436520-b705cc80-5ca2-11eb-8517-c10bd740da42.png\" alt=\"az-graphic-two\"></p>\n</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"이론적인-개념은-위의-그림으로-쉽게-이해가-가능하니-바로-만들어보죠\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%A1%A0%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%85%90%EC%9D%80-%EC%9C%84%EC%9D%98-%EA%B7%B8%EB%A6%BC%EC%9C%BC%EB%A1%9C-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%EA%B0%80-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%88-%EB%B0%94%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%A3%A0\" aria-label=\"이론적인 개념은 위의 그림으로 쉽게 이해가 가능하니 바로 만들어보죠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이론적인 개념은 위의 그림으로 쉽게 이해가 가능하니 바로 만들어보죠</h3>\n<p>Vnet의 경우 AS를 만들때 사용했던 Vnet을 그대로 사용하겠습니다.  </p>\n<br/>\n<p>VM을 2대 배포합니다. (AZ를 사용하는 설정으로!)  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107305088-a1c3d700-6ac5-11eb-9c05-1a0bd8d0c6fc.JPG\" alt=\"캡처5\"></p>\n<br/>\n<br/>\n<p>VM 설정 옵션은 AS와 동일합니다, 정상 배포가 되면 VM에서 아래처럼 확인 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/107306207-d5076580-6ac7-11eb-92c8-158629fe49f7.JPG\" alt=\"캡처2\"></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-vm-scail-up--scail-down\">✔ VM Scail-Up &#x26; Scail-Down</a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%9F%BC-%EB%B0%94%EB%A1%9C-scail-up-%EC%8B%A4%EC%8A%B5%EC%9D%84-%EC%A7%84%ED%96%89%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">그럼 바로 Scail-Up 실습을 진행해봅시다.</a></li>\n</ul>\n</li>\n<li><a href=\"#%F0%9F%A4%9E-vm-availability-%EA%B0%80%EC%9A%A9%EC%84%B1-%EA%B5%AC%ED%98%84\">🤞 VM Availability 가용성 구현</a></li>\n<li>\n<p><a href=\"#-availability-set-%EA%B0%80%EC%9A%A9%EC%84%B1-%EC%A7%91%ED%95%A9\">👌 Availability Set 가용성 집합</a></p>\n<ul>\n<li><a href=\"#fault-domain-%EC%9E%A5%EC%95%A0%EB%8F%84%EB%A9%94%EC%9D%B8\">Fault Domain (장애도메인)</a></li>\n<li><a href=\"#update-domain-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EB%8F%84%EB%A9%94%EC%9D%B8\">Update Domain (업데이트 도메인)</a></li>\n<li><a href=\"#%EA%B7%B8%EB%9F%BC-%EC%9D%B4%EC%A0%9C-as%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">그럼 이제 AS를 생성해봅시다</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-availability-zone-%EA%B0%80%EC%9A%A9%EC%84%B1-%EC%98%81%EC%97%AD\">👍 Availability Zone 가용성 영역</a></p>\n<ul>\n<li><a href=\"#%EC%9D%B4%EB%A1%A0%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%85%90%EC%9D%80-%EC%9C%84%EC%9D%98-%EA%B7%B8%EB%A6%BC%EC%9C%BC%EB%A1%9C-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%EA%B0%80-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%88-%EB%B0%94%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%A3%A0\">이론적인 개념은 위의 그림으로 쉽게 이해가 가능하니 바로 만들어보죠</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 01, 2021","title":"[AZURE] Availability (가용성) VMSS, SCALE","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-scale/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/azure-lb/","nextSlug":"/azure-blob/","prevSlug":"/azure-scale/"}},"staticQueryHashes":["1073350324","2938748437"]}