{"componentChunkName":"component---src-templates-blog-template-js","path":"/kubernetes-command/","result":{"data":{"cur":{"id":"b1a77332-6f87-5631-8103-2ad76c5e959f","html":"<p>머리말  </p>\n<p>이제 실습전 알아야 할 이론적인 부분들은 모두 포스팅 했습니다.<br>\n이번 포스트 부터 이후 포스트까지는 실습에 대한 내용들을 다룰 것입니다.    </p>\n<hr>\n<h2 id=\"-kubectl-명령어\" style=\"position:relative;\"><a href=\"#-kubectl-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\" kubectl 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ kubectl 명령어</h2>\n<p>쿠버네티스는 <code class=\"language-text\">kubectl</code> 이라는 CLI 명령어를 통해서 쿠버네티스 및 클러스터 관리, 디버그 및 트러블 슈팅들을 할 수 있습니다.<br>\n자세한 내용을 알고 싶으면 <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">kubectl 치트 시트</a>를 참고하세요</p>\n<br/>\n<p><code class=\"language-text\">kubectl 명령어</code>는 기본적으로 아래와 같은 형태로 커맨드 라인에 입력하여 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">type</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">name</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">flags</span></span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">command</code> : 자원에 실행하려는 동작</p>\n<ul>\n<li>create : 생성</li>\n<li>ge` : 정보 가져오기</li>\n<li>describe : 자세한 상태 정보</li>\n<li>delete : 삭제  </li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">type</code> : 자원 타입</p>\n<ul>\n<li>pod : Pod</li>\n<li>service : 서비스</li>\n</ul>\n</li>\n<li><code class=\"language-text\">name</code> : 자원 이름</li>\n<li><code class=\"language-text\">flag</code> : 옵션</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"명령어-실습-전-사전-작업\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%8B%A4%EC%8A%B5-%EC%A0%84-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"명령어 실습 전 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 실습 전 사전 작업</h3>\n<p>아마 처음 kubectl을 사용하게 된다면 아래와 같은 에러 메세지를 띄울 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod\nThe connection to the server <span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.6</span><span class=\"token punctuation\">:</span><span class=\"token number\">6443</span> was refused <span class=\"token operator\">-</span> did you specify the right host <span class=\"token keyword\">or</span> port<span class=\"token punctuation\">?</span></code></pre></div>\n<br/>\n<br/>\n<p>위와 같은 경우는 현재 실행 권한이 없는 경우로 아래의 명령어를 진행하면 작동 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">mkdir <span class=\"token operator\">-</span>p $HOME<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kube\nsudo cp <span class=\"token operator\">-</span>i <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>admin<span class=\"token punctuation\">.</span>conf $HOME<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kube<span class=\"token operator\">/</span>config\nsudo chown $<span class=\"token punctuation\">(</span>id <span class=\"token operator\">-</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">(</span>id <span class=\"token operator\">-</span>g<span class=\"token punctuation\">)</span> $HOME<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kube<span class=\"token operator\">/</span>config</code></pre></div>\n<br/>\n<br/>\n<p>일반 사용자 권한에 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">export</span> KUBECONFIG<span class=\"token operator\">=</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>admin<span class=\"token punctuation\">.</span>conf</code></pre></div>\n<p>root권한에서 환경변수 등록</p>\n<br/>\n<br/>\n<p>kubelet 재시작</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># systemctl restart kubelet\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<br/>\n<br/>\n<p>이제 정상적으로 명령어 사용이 가능합니다!!!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> node\nNAME          STATUS   ROLES    AGE   VERSION\nnasa<span class=\"token operator\">-</span>master   Ready    master   <span class=\"token number\">23d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span>\nnasa<span class=\"token operator\">-</span>node1    Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   <span class=\"token number\">23d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span>\nnasa<span class=\"token operator\">-</span>node2    Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   <span class=\"token number\">23d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span>\nnasa<span class=\"token operator\">-</span>node3    Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   <span class=\"token number\">23d</span>   v1<span class=\"token punctuation\">.</span><span class=\"token number\">15.5</span></code></pre></div>\n<br/>\n<hr>\n<h3 id=\"kubectl-기본-사용법\" style=\"position:relative;\"><a href=\"#kubectl-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"kubectl 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kubectl 기본 사용법</h3>\n<p>간단히 에코 서버(=클라이언트가 전송해주는 데이터를 그대로 되돌려 전송하는 서버)를 동작시켜보죠</p>\n<p>먼저 아래 명령어를 통해서 nasaehco라는 pod를 하나 생성하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl run nasaecho <span class=\"token operator\">--</span>generator<span class=\"token operator\">=</span>run<span class=\"token operator\">-</span>pod<span class=\"token operator\">/</span>v1 <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span><span class=\"token string\">\"k8s.gcr.io/echoserver:1.10\"</span> <span class=\"token operator\">--</span>port<span class=\"token operator\">=</span><span class=\"token number\">8080</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl run nasaecho <span class=\"token operator\">--</span>generator<span class=\"token operator\">=</span>run<span class=\"token operator\">-</span>pod<span class=\"token operator\">/</span>v1 <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>\"k8s<span class=\"token punctuation\">.</span>gcr<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">echoserve</span>\nr<span class=\"token punctuation\">:</span><span class=\"token number\">1.10</span>\" <span class=\"token operator\">--</span>port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>\npod<span class=\"token operator\">/</span>nasaecho created\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<br/>\n<br/>\n<p>간단히 설명하면 <code class=\"language-text\">run 명령어</code>는 클러스터에 특정 이미지를 가지고 <code class=\"language-text\">pod를 생성</code>하는 명령어 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl run <span class=\"token punctuation\">[</span>생성할 POD 이름<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span>generator<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>Repolication Controller 지정<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>사용할 이미지<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span>port<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>포트정보<span class=\"token punctuation\">]</span></code></pre></div>\n<p>k8s.gcr.io는 구글의 Container Registry에서 가져오겠다는 의미입니다. –generator : Replication Controller를 지정합니다.</p>\n<br/>\n<p>아래 명령어를 입력하면 pod 들의 정보를 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl <span class=\"token keyword\">get</span> pods</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod\nNAME       READY   STATUS    RESTARTS   AGE\nnasaecho   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          4m12s\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># </code></pre></div>\n<br/>\n<p>각각의 의미는</p>\n<ul>\n<li><code class=\"language-text\">NAME</code> : Pod 이름</li>\n<li><code class=\"language-text\">READY</code> : 0/1(생성되었지만 사용 준비 X) / 1/1(생성되었지만 사용 준비 O)</li>\n<li><code class=\"language-text\">STATUS</code> : Running (실행) / Terminating / ContainerCreating</li>\n<li><code class=\"language-text\">RESTARTS</code> : 재시작 횟수</li>\n<li><code class=\"language-text\">AGE</code> : 생성 후 지난 시간</li>\n</ul>\n<br/>\n<br/>\n<p>이제 명령어를 통해서 만들어진 nasaecho pod의 <code class=\"language-text\">서비스</code>를 생성하도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl expose pod nasaecho <span class=\"token operator\">--</span>type<span class=\"token operator\">=</span>NodePort</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl expose pod nasaecho <span class=\"token operator\">--</span>type<span class=\"token operator\">=</span>NodePort\nservice<span class=\"token operator\">/</span>nasaecho exposed</code></pre></div>\n<br/>\n<br/>\n<p>아래 명령어로 현재 만들어진 서비스 정보들을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl <span class=\"token keyword\">get</span> services</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> service\nNAME         TYPE        CLUSTER<span class=\"token operator\">-</span>IP       EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>   <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>          AGE\nkubernetes   ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP          <span class=\"token number\">23d</span>\nnasaecho     NodePort    <span class=\"token number\">10.109</span><span class=\"token number\">.171</span><span class=\"token number\">.229</span>   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">30880</span><span class=\"token operator\">/</span>TCP   5m3s</code></pre></div>\n<br/>\n<p>각각의 의미는</p>\n<ul>\n<li><code class=\"language-text\">NAME</code> : 서비스 이름</li>\n<li><code class=\"language-text\">TYPE</code> : 서비스 타입</li>\n<li><code class=\"language-text\">Cluster IP</code> : 서비스에 클러스터 IP (내부 IP)를 할당합니다.</li>\n<li><code class=\"language-text\">Load Balancer</code> : 외부 IP를 가진 로드밸런서를 할당합니다.</li>\n<li><code class=\"language-text\">Node Port</code> : 클러스터 IP 뿐만 아니라 노드의 IP 및 포트를 통해서 접근을 할 수 있습니다.</li>\n<li><code class=\"language-text\">External Name</code> : 외부 서비스를 쿠버네티스 내부에서 호출하고자 할 때 사용할 수 있습니다.</li>\n<li><code class=\"language-text\">CLUSTER-IP</code> : 클러스터 안에서 사용하는 IP</li>\n<li><code class=\"language-text\">EXTERNAL-IP</code> : 외부 IP</li>\n<li><code class=\"language-text\">PORT(S)</code> : 서비스에 접속하는 포트</li>\n<li><code class=\"language-text\">AGE</code> : 생성 후 지난 시간</li>\n</ul>\n<br/>\n<p>로컬서버의 8080 포트를 에코 서버의 8080포트로 <code class=\"language-text\">포트 포워딩</code> 해주기 위한 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl port<span class=\"token operator\">-</span>forward svc<span class=\"token operator\">/</span>nasaecho <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl port<span class=\"token operator\">-</span>forward svc<span class=\"token operator\">/</span>nasaecho <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\nForwarding <span class=\"token keyword\">from</span> <span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span> <span class=\"token operator\">-></span> <span class=\"token number\">8080</span>\nForwarding <span class=\"token keyword\">from</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">::</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span> <span class=\"token operator\">-></span> <span class=\"token number\">8080</span></code></pre></div>\n<br/>\n<p>curl <a href=\"http://localhost:8080\">http://localhost:8080</a> 으로 데이터를 땡겨오면 정상적이다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93294177-ca041e00-f824-11ea-91e7-02ca68d9225a.png\" alt=\"스크린샷, 2020-09-16 13-59-00\"></p>\n<br/>\n<br/>\n<p>에코 서버의 실행 중 로그를 수집하려면 아래 명령어를 입력하면 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl logs <span class=\"token operator\">-</span>f echoserver</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl logs <span class=\"token operator\">-</span>f nasaecho\nGenerating self<span class=\"token operator\">-</span>signed cert\nGenerating a <span class=\"token number\">2048</span> bit RSA <span class=\"token keyword\">private</span> key\n<span class=\"token range operator\">..</span><span class=\"token range operator\">..</span><span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token operator\">++</span><span class=\"token operator\">+</span>\n<span class=\"token range operator\">..</span><span class=\"token operator\">++</span><span class=\"token operator\">+</span>\nwriting <span class=\"token keyword\">new</span> <span class=\"token keyword\">private</span> key to '<span class=\"token operator\">/</span>certs<span class=\"token operator\">/</span>privateKey<span class=\"token punctuation\">.</span>key'\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\nStarting nginx\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token operator\">/</span>Sep<span class=\"token operator\">/</span><span class=\"token number\">2020</span><span class=\"token punctuation\">:</span><span class=\"token number\">04</span><span class=\"token punctuation\">:</span><span class=\"token number\">57</span><span class=\"token punctuation\">:</span><span class=\"token number\">55</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">414</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.29.0\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token operator\">/</span>Sep<span class=\"token operator\">/</span><span class=\"token number\">2020</span><span class=\"token punctuation\">:</span><span class=\"token number\">04</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">:</span><span class=\"token number\">27</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">414</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.29.0\"</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token operator\">/</span>Sep<span class=\"token operator\">/</span><span class=\"token number\">2020</span><span class=\"token punctuation\">:</span><span class=\"token number\">04</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> <span class=\"token number\">200</span> <span class=\"token number\">414</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.29.0\"</span></code></pre></div>\n<br/>\n<br/>\n<p>만들어진 nasaecho pod를 지워보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl delete pod echoserver</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl delete pod nasaecho\npod <span class=\"token string\">\"nasaecho\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pod\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<p>정상적으로 삭제 되었고 <code class=\"language-text\">get</code>명령으로 확인결과 pod가 없어졌습니다!!</p>\n<br/>\n<br/>\n<p>pod가 삭제되었으니 이번에는 서비스 또한 삭제해보겠습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl delete svc nasaecho\nservice <span class=\"token string\">\"nasaecho\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> svc\nNAME         TYPE        CLUSTER<span class=\"token operator\">-</span>IP   EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>   <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nkubernetes   ClusterIP   <span class=\"token number\">10.96</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span>    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span><span class=\"token operator\">/</span>TCP   <span class=\"token number\">23d</span></code></pre></div>\n<p>이와 같이 간단한 실습으로 간단한 사용법에 대해서 알아보았습니다.</p>\n<br/>\n<hr>\n<h3 id=\"치트시트-내용-정리\" style=\"position:relative;\"><a href=\"#%EC%B9%98%ED%8A%B8%EC%8B%9C%ED%8A%B8-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC\" aria-label=\"치트시트 내용 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>치트시트 내용 정리</h3>\n<h2 id=\"-명령어command-종류\" style=\"position:relative;\"><a href=\"#-%EB%AA%85%EB%A0%B9%EC%96%B4command-%EC%A2%85%EB%A5%98\" aria-label=\" 명령어command 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 명령어[COMMAND] 종류</h2>\n<p>kubectl의 명령어 종류와 문법을 간략히 설명합니다.</p>\n<table>\n<thead>\n<tr>\n<th>명령어</th>\n<th>문법</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>annotate</td>\n<td>kubectl annotate (-f FILENAME | TYPE NAME | TYPE/NAME) KEY<em>1=VAL</em>1 … KEY<em>N=VAL</em>N [—overwrite] [—all] [—resource-version=version] [flags]</td>\n<td>하나 혹은 여러 리소스에 주석을 추가업데이트</td>\n</tr>\n<tr>\n<td>api-versions</td>\n<td>kubectl api-versions [flags]</td>\n<td>사용가능한 API version 조회</td>\n</tr>\n<tr>\n<td>apply</td>\n<td>kubectl apply -f FILENAME [flags]</td>\n<td>변경된 리소스 수정 적용하기</td>\n</tr>\n<tr>\n<td>attach</td>\n<td>kubectl attach POD -c CONTAINER [-i] [-t] [flags]</td>\n<td>현재 실행중인 컨테이너에 접속 혹은 output stream 확인</td>\n</tr>\n<tr>\n<td>autoscale</td>\n<td>kubectl autoscale (-f FILENAME | TYPE NAME | TYPE/NAME) [—min=MINPODS] —max=MAXPODS [—cpu-percent=CPU] [flags]</td>\n<td>RC(replication controller)을 활용하여 pod auto scale 기능활성화</td>\n</tr>\n<tr>\n<td>cluster-info</td>\n<td>kubectl cluster-info [flags]</td>\n<td>쿠버네티스 클러스터에 정보조회</td>\n</tr>\n<tr>\n<td>config</td>\n<td>kubectl config SUBCOMMAND [flags]</td>\n<td>kubeconfig 파일 수정</td>\n</tr>\n<tr>\n<td>create</td>\n<td>kubectl create -f FILENAME [flags]</td>\n<td>리소스 file 생성</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>kubectl delete (-f FILENAME | TYPE [NAME | /NAME | -l label | —all]) [flags]</td>\n<td>생성(활성화된) 리소스 제거</td>\n</tr>\n<tr>\n<td>describe</td>\n<td>kubectl describe (-f FILENAME | TYPE [NAME_PREFIX | /NAME | -l label]) [flags]</td>\n<td>리소스 상태 조회</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>kubectl edit (-f FILENAME | TYPE NAME | TYPE/NAME) [flags]</td>\n<td>리소스에 대해 수정 및 적용</td>\n</tr>\n<tr>\n<td>exec</td>\n<td>kubectl exec POD [-c CONTAINER] [-i] [-t] [flags] [— COMMAND [args…]]</td>\n<td>pod 내부의 컨테이너에 명령어 날리기</td>\n</tr>\n<tr>\n<td>explain</td>\n<td>kubectl explain [—include-extended-apis=true] [—recursive=false] [flags]</td>\n<td>리소스(pod, node, service) 에 대한 documentation 확인</td>\n</tr>\n<tr>\n<td>expose</td>\n<td>kubectl expose (-f FILENAME | TYPE NAME | TYPE/NAME) [—port=port] [—protocol=TCP|UDP] [—target-port=number-or-name] [—name=name] [----external-ip=external-ip-of-service][--type=type] [flags]</td>\n<td>rc, service, pod 조회(?)</td>\n</tr>\n<tr>\n<td>get</td>\n<td>kubectl get (-f FILENAME | TYPE [NAME | /NAME | -l label]) [—watch] [—sort-by=FIELD] [[-o | —output]=OUTPUT_FORMAT] [flags]</td>\n<td>리소스 리스트 조회</td>\n</tr>\n<tr>\n<td>label</td>\n<td>kubectl label (-f FILENAME | TYPE NAME | TYPE/NAME) KEY<em>1=VAL</em>1 … KEY<em>N=VAL</em>N [—overwrite] [—all] [—resource-version=version] [flags]</td>\n<td>리소스 label 업데이트 혹은 추가기능</td>\n</tr>\n<tr>\n<td>logs</td>\n<td>kubectl logs POD [-c CONTAINER] [—follow] [flags]</td>\n<td>pod 내부 container 로그확인</td>\n</tr>\n<tr>\n<td>patch</td>\n<td>kubectl patch (-f FILENAME | TYPE NAME | TYPE/NAME) —patch PATCH [flags]</td>\n<td>리소스의 일부 attribute를 수정, 적용</td>\n</tr>\n<tr>\n<td>port-forward</td>\n<td>kubectl port-forward POD [LOCAL_PORT:]REMOTE<em>PORT […[LOCAL</em>PORT<em>N:]REMOTE</em>PORT_N] [flags]</td>\n<td>포트포워딩 기능</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>kubectl proxy [—port=PORT] [—www=static-dir] [—www-prefix=prefix] [—api-prefix=prefix] [flags]</td>\n<td>쿠버네티스에 프록시 설정</td>\n</tr>\n<tr>\n<td>replace</td>\n<td>kubectl replace -f FILENAME\t리소스 재구성(새로 적용)</td>\n<td></td>\n</tr>\n<tr>\n<td>rolling-update</td>\n<td>kubectl rolling-update OLD<em>CONTROLLER</em>NAME ([NEW<em>CONTROLLER</em>NAME] —image=NEW<em>CONTAINER</em>IMAGE | -f NEW<em>CONTROLLER</em>SPEC) [flags]</td>\n<td>롤링 업데이트 수행 기능</td>\n</tr>\n<tr>\n<td>run</td>\n<td>kubectl run NAME —image=image [—env=“key=value”] [—port=port] [—replicas=replicas] [—dry-run=bool] [—overrides=inline-json] [flags]</td>\n<td>클러스터에 특정 이미지 run</td>\n</tr>\n<tr>\n<td>scale</td>\n<td>kubectl scale (-f FILENAME | TYPE NAME | TYPE/NAME) —replicas=COUNT [—resource-version=version] [—current-replicas=count] [flags]</td>\n<td>RC의 replication 갯수 업데이트</td>\n</tr>\n<tr>\n<td>stop</td>\n<td>kubectl stop</td>\n<td>더 이상 사용하지 않음 kubectl delete 사용!.</td>\n</tr>\n<tr>\n<td>version</td>\n<td>kubectl version [—client] [flags]</td>\n<td>쿠버네티스 버젼 확인</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<h2 id=\"-리소스resource-종류\" style=\"position:relative;\"><a href=\"#-%EB%A6%AC%EC%86%8C%EC%8A%A4resource-%EC%A2%85%EB%A5%98\" aria-label=\" 리소스resource 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👌 리소스[RESOURCE] 종류</h2>\n<p>kubectl에 적용 가능한 쿠버네티스 리소스 종류와 단축어 리스트 입니다.</p>\n<table>\n<thead>\n<tr>\n<th>리소스 종류</th>\n<th>단축어</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>apiservices</td>\n<td></td>\n</tr>\n<tr>\n<td>certificatesigningrequests</td>\n<td>csr</td>\n</tr>\n<tr>\n<td>clusters</td>\n<td></td>\n</tr>\n<tr>\n<td>clusterrolebindings</td>\n<td></td>\n</tr>\n<tr>\n<td>clusterroles</td>\n<td></td>\n</tr>\n<tr>\n<td>componentstatuses</td>\n<td>cs</td>\n</tr>\n<tr>\n<td>configmaps</td>\n<td>cm</td>\n</tr>\n<tr>\n<td>controllerrevisions</td>\n<td></td>\n</tr>\n<tr>\n<td>cronjobs</td>\n<td></td>\n</tr>\n<tr>\n<td>customresourcedefinition</td>\n<td>crd</td>\n</tr>\n<tr>\n<td>daemonsets</td>\n<td>ds</td>\n</tr>\n<tr>\n<td>deployments</td>\n<td>deploy</td>\n</tr>\n<tr>\n<td>endpoints</td>\n<td>ep</td>\n</tr>\n<tr>\n<td>events</td>\n<td>ev</td>\n</tr>\n<tr>\n<td>horizontalpodautoscalers</td>\n<td>hpa</td>\n</tr>\n<tr>\n<td>ingresses</td>\n<td>ing</td>\n</tr>\n<tr>\n<td>jobs</td>\n<td></td>\n</tr>\n<tr>\n<td>limitranges</td>\n<td>limits</td>\n</tr>\n<tr>\n<td>namespaces</td>\n<td>ns</td>\n</tr>\n<tr>\n<td>networkpolicies</td>\n<td>netpol</td>\n</tr>\n<tr>\n<td>nodes</td>\n<td>no</td>\n</tr>\n<tr>\n<td>persistentvolumeclaims</td>\n<td>pvc</td>\n</tr>\n<tr>\n<td>persistentvolumes</td>\n<td>pv</td>\n</tr>\n<tr>\n<td>poddisruptionbudget</td>\n<td>pdb</td>\n</tr>\n<tr>\n<td>podpreset</td>\n<td></td>\n</tr>\n<tr>\n<td>pods</td>\n<td>po</td>\n</tr>\n<tr>\n<td>podsecuritypolicies</td>\n<td>psp</td>\n</tr>\n<tr>\n<td>podtemplates</td>\n<td></td>\n</tr>\n<tr>\n<td>replicasets</td>\n<td>rs</td>\n</tr>\n<tr>\n<td>replicationcontrollers</td>\n<td>rc</td>\n</tr>\n<tr>\n<td>resourcequotas</td>\n<td>quota</td>\n</tr>\n<tr>\n<td>rolebindings</td>\n<td></td>\n</tr>\n<tr>\n<td>roles</td>\n<td></td>\n</tr>\n<tr>\n<td>secrets</td>\n<td></td>\n</tr>\n<tr>\n<td>serviceaccounts</td>\n<td>sa</td>\n</tr>\n<tr>\n<td>services</td>\n<td>svc</td>\n</tr>\n<tr>\n<td>statefulsets</td>\n<td></td>\n</tr>\n<tr>\n<td>storageclasses</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<br/>\n \n<h2 id=\"output-옵션\" style=\"position:relative;\"><a href=\"#output-%EC%98%B5%EC%85%98\" aria-label=\"output 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Output 옵션</h2>\n<p>kubectl으로 얻은 정보들을 file로 저장하기를 원할 수 있죠. 이때 아래와 같은 옵션으로 추출 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">TYPE</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">NAME</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span>o<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>output_format<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<p>output_format으로 아래와 같은 format들을 지원.</p>\n<table>\n<thead>\n<tr>\n<th>Output</th>\n<th>포맷설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-o=custom-columns=(spec)</td>\n<td>comma로 구분가능한 custom형식의 table을 조회</td>\n</tr>\n<tr>\n<td>-o=custom-columns-file=(filename)</td>\n<td>comma로 구분가능한 custom형식의 table을 file로 저장</td>\n</tr>\n<tr>\n<td>-o=json</td>\n<td>json 형식의 API obejct로 저장</td>\n</tr>\n<tr>\n<td>-o=jsonpath=(template)</td>\n<td>jsonpath 형식으로 조회</td>\n</tr>\n<tr>\n<td>-o=jsonpath-file=(filename)</td>\n<td>jsonpath 형식으로 file로 저장</td>\n</tr>\n<tr>\n<td>-o=name</td>\n<td>리소스 이름만 조회</td>\n</tr>\n<tr>\n<td>-o=wide</td>\n<td>pod, node 이름 등 추가적인 정보 모두 조회</td>\n</tr>\n<tr>\n<td>-o=yaml</td>\n<td>yaml 형식의 API object로 저장</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>\n<p>output 옵션 예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ kubectl <span class=\"token keyword\">get</span> pod web<span class=\"token operator\">-</span>pod<span class=\"token operator\">-</span>13je7 <span class=\"token operator\">-</span>o<span class=\"token operator\">=</span>yaml</code></pre></div>\n<p>다음의 명령은 단일 파드에 대한 세부 정보를 YAML 형식의 오브젝트로 출력한다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"kubectl-예제\" style=\"position:relative;\"><a href=\"#kubectl-%EC%98%88%EC%A0%9C\" aria-label=\"kubectl 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kubectl 예제</h2>\n<br/>\n<ul>\n<li>\n<p>kubectl create</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// example-service.yaml 파일이름의 서비스를 생성합니다.</span>\n$ kubectl create <span class=\"token operator\">-</span>f example<span class=\"token operator\">-</span>service<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token comment\">// example-controller.yaml 파일이름의 RC를 생성합니다.</span>\n$ kubectl create <span class=\"token operator\">-</span>f example<span class=\"token operator\">-</span>controller<span class=\"token punctuation\">.</span>yaml</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>kubectl get</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// pod list를 출력</span>\n$ kubectl <span class=\"token keyword\">get</span> pods\n\n<span class=\"token comment\">// pod list(+ 추가적인 정보 node 이름 등)를 출력</span>\n$ kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span>o wide\n\n<span class=\"token comment\">// 특정 &lt;rc-name>의 정보를 출력</span>\n$ kubectl <span class=\"token keyword\">get</span> replicationcontroller <span class=\"token operator\">&lt;</span>rc<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 모든 rc, service들 정보를 출력</span>\n$ kubectl <span class=\"token keyword\">get</span> rc<span class=\"token punctuation\">,</span>services\n\n<span class=\"token comment\">// 모든 ds(daemon sets)에 대한 정보를 출력(uninitialized ds도 포함)</span>\n$ kubectl <span class=\"token keyword\">get</span> ds <span class=\"token operator\">--</span>include<span class=\"token operator\">-</span>uninitialized\n\n<span class=\"token comment\">// 특정 node(server01)에 배포된 pod 정보를 출력</span>\n$ kubectl <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>field<span class=\"token operator\">-</span>selector<span class=\"token operator\">=</span>spec<span class=\"token punctuation\">.</span>nodeName<span class=\"token operator\">=</span>server01</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>kubectl describe</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// 특정 &lt;node-name>의 node 정보 출력</span>\n$ kubectl describe nodes <span class=\"token operator\">&lt;</span>node<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 특정 &lt;pod-name>의 pod 정보 출력</span>\n$ kubectl describe pods<span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 특정 &lt;rc-name>의 rc가 제어하는 pod들 정보 출력</span>\n$ kubectl describe pods <span class=\"token operator\">&lt;</span>rc<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 모든 pod 정보 출력(uninitialized pod은 제외)</span>\n$ kubectl describe pods <span class=\"token operator\">--</span>include<span class=\"token operator\">-</span>uninitialized<span class=\"token operator\">=</span><span class=\"token boolean\">false</span></code></pre></div>\n</li>\n</ul>\n <br/>\n<ul>\n<li>\n<p>kubectl delete</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// pod.yaml로 선언된 pod들을 제거</span>\n$ kubectl delete <span class=\"token operator\">-</span>f pod<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token comment\">// 특정 &lt;label-name>이 정의된 pod, service들 제거</span>\n$ kubectl <span class=\"token class-name\">delete</span> pods<span class=\"token punctuation\">,</span>services <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> name<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>label<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 특정 &lt;label-name>이 정의된 pod, service들 제거(uninitialized pod, service 포함)</span>\n$ kubectl <span class=\"token class-name\">delete</span> pods<span class=\"token punctuation\">,</span>services <span class=\"token operator\">-</span><span class=\"token class-name\">l</span> name<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>label<span class=\"token operator\">-</span>name<span class=\"token operator\">></span> <span class=\"token operator\">--</span>include<span class=\"token operator\">-</span>uninitialized\n\n<span class=\"token comment\">// 모든 pod </span>\n$ kubectl delete pods <span class=\"token operator\">--</span>all</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>kubectl exec</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// 특정 &lt;pod-name>을 가진 pod의 첫번째 container에 'date' 라는 명령어 호출</span>\n$ kubectl exec <span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span> date\n\n<span class=\"token comment\">// 특정 &lt;pod-name>을 가진 pod의 특정 &lt;container-name>이라는 이름의 container에 'date' 라는 명령어 호출</span>\n$ kubectl exec <span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span> <span class=\"token operator\">-</span>c <span class=\"token operator\">&lt;</span>container<span class=\"token operator\">-</span>name<span class=\"token operator\">></span> date\n\n<span class=\"token comment\">// 특정 &lt;pod-name>을 가진 pod의 첫번째 container에 bash shell실행 </span>\n$ kubectl exec <span class=\"token operator\">-</span>ti <span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash</code></pre></div>\n</li>\n</ul>\n<br/>    \n<ul>\n<li>\n<p>kubectl logs</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// 특정 &lt;pod-name> 이름을 가진 pod의 로그 조회</span>\n$ kubectl logs <span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 특정 &lt;pod-name> 이름을 가진 pod의 로그 tail -f 조회</span>\n$ kubectl logs <span class=\"token operator\">-</span>f <span class=\"token operator\">&lt;</span>pod<span class=\"token operator\">-</span>name<span class=\"token operator\">></span></code></pre></div>\n<hr>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-kubectl-%EB%AA%85%EB%A0%B9%EC%96%B4\">✔ kubectl 명령어</a></p>\n<ul>\n<li><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%8B%A4%EC%8A%B5-%EC%A0%84-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\">명령어 실습 전 사전 작업</a></li>\n<li><a href=\"#kubectl-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\">kubectl 기본 사용법</a></li>\n<li><a href=\"#%EC%B9%98%ED%8A%B8%EC%8B%9C%ED%8A%B8-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC\">치트시트 내용 정리</a></li>\n</ul>\n</li>\n<li><a href=\"#-%EB%AA%85%EB%A0%B9%EC%96%B4command-%EC%A2%85%EB%A5%98\">✌ 명령어COMMAND 종류</a></li>\n<li><a href=\"#-%EB%A6%AC%EC%86%8C%EC%8A%A4resource-%EC%A2%85%EB%A5%98\">👌 리소스RESOURCE 종류</a></li>\n<li><a href=\"#output-%EC%98%B5%EC%85%98\">Output 옵션</a></li>\n<li><a href=\"#kubectl-%EC%98%88%EC%A0%9C\">kubectl 예제</a></li>\n</ul>\n</div>","excerpt":"머리말   이제 실습전 알아야 할 이론적인 부분들은 모두 포스팅 했습니다. 이번 포스트 부터 이후 포스트까지는 실습에 대한 내용들을 다룰 것입니다.     ✔ kubectl 명령어 쿠버네티스는  이라는 CLI 명령어를 통해서 쿠버네티스 및 클러스터 관리, 디버그 및 트러블 슈팅들을 할 수 있습니다. 자세한 내용을 알고 싶으면 kubectl 치트 시트를 참고하세요 는 기본적으로 아래와 같은 형태로 커맨드 라인에 입력하여 사용할 수 있습니다.  : 자원에 실행하려는 동작 create : 생성 ge` : 정보 가져오기 describe : 자세한 상태 정보 delete : 삭제    : 자원 타입 pod : Pod servi…","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 명령어 정리","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-command/"}},"next":{"id":"85b868eb-f8db-5212-ac16-bf9c82a6dddc","html":"<p>머리말 </p>\n<p>이전 포스트에서 쿠버네티스의 기본적인 컴포넌트 개념에 대해서 정리 해보았습니다.<br>\n이번에는 실습에 들어가기 앞서 아키텍쳐의 개념을 잡고 들어가기위해서<br>\n조대협님의 블로그 글을 참고하여 제 식대로 다시 정리 해보았습니다.  </p>\n<hr>\n<p>참고  :  <a href=\"https://bcho.tistory.com/1258?category=731548\">조대협님 블로그</a></p>\n<hr>\n<h2 id=\"-아키텍쳐-개념정리\" style=\"position:relative;\"><a href=\"#-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC\" aria-label=\" 아키텍쳐 개념정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ 아키텍쳐 개념정리</h2>\n<p>이전 포스트에서 쿠버네티스에 대한 개념 이해가 끝났으면<br>\n이제 쿠버네티스가 실제로 어떤 구조로 구현이 되어 있는지 아키텍쳐를 살펴보도록 하자.<br>\n아키텍쳐를 이용하면 동작 원리를 이해할 수 있기 때문에 쿠버네티스의 사용법을 이해하는데 도움이 된다.</p>\n<p>(kubernetes의 아키텍쳐)<br>\n<img src=\"https://user-images.githubusercontent.com/69498804/93286404-1eea6900-f812-11ea-8a90-dc6e79166d83.png\" alt=\"스크린샷, 2020-09-16 11-45-17\"></p>\n<br/>\n<h2 id=\"-마스터와-노드\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EC%8A%A4%ED%84%B0%EC%99%80-%EB%85%B8%EB%93%9C\" aria-label=\" 마스터와 노드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 마스터와 노드</h2>\n<p>쿠버네티스는 크게 마스터(Master)와 노드(Node) 두 개의 컴포넌트로 분리된다.</p>\n<p>마스터는 쿠버네티스의 설정 환경을 저장하고 전체 클러스터를 관리하는 역할을 맏고<br>\n노드는 파드나 컨테이너 처럼 쿠버네티스 위에서 동작하는 워크로드를 호스팅하는 역할을 한다.</p>\n<br/>\n<h3 id=\"마스터\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%8A%A4%ED%84%B0\" aria-label=\"마스터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마스터</h3>\n<p>쿠버네티스 클러스터 전체를 컨트럴 하는 시스템 크게 API 서버, 스케쥴러, 컨트롤러 매니져, etcd 로 구성되어 있다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">API 서버</code>  </p>\n<p>쿠버네티스는 모든 명령과 통신을 API를 통해서 하는데 그 중심이 되는 서버가 API서버이다.<br>\n쿠버네티스의 모든 기능들을 REST API로 제공하고 그에 대한 명령을 처리한다.  </p>\n</li>\n<li>\n<p><code class=\"language-text\">Etcd</code>  </p>\n<p>API 서버가 명령을 주고 받는 서버라면<br>\n쿠버네티스 클러스터의 데이타 베이스 역할의 서버로 설정값이나 클러스터의 상태를 저장하는 서버이다.<br>\netcd라는 분산형 키/밸류 스토어 오픈소스 ()<a href=\"https://github.com/coreos/etcd\">https://github.com/coreos/etcd</a>) 로<br>\n쿠버네티스 클러스터의 상태나 설정 정보를 저장한다.   </p>\n</li>\n<li>\n<p><code class=\"language-text\">스케쥴러</code>  </p>\n<p>스케쥴러는 Pod,서비스등 각 리소스들을 적절한 노드에 할당하는 역할을 한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">컨트롤러 매니져</code> : 컨트롤러 들을 생성하고 이를 각 노드에 배포하며 이를 관리하는 역할을 한다</p>\n<ul>\n<li>Replica controller</li>\n<li>Service controller</li>\n<li>Volume Controller</li>\n<li>Node controller   </li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">DNS</code>  </p>\n<p>맨위의 그림에는 빠져있는데 쿠버네티스는 리소스의 엔드포인트(Endpoint)를 DNS로 맵핑하고 관리한다.<br>\nPod나 서비스등은 IP를 배정받는데 동적으로 생성되는 리소스이기 때문에 그 IP 주소가 그때마다 변경이 되어<br>\n그 리소스에 대한 위치 정보가 필요한데 이러한 패턴을 Service discovery 패턴이라고 한다.<br>\n쿠버네티스에서는 이를 내부 DNS서버를 두는 방식으로 해결하였다.</p>\n<p>즉 새로운 리소스가 생기면 그 리소스에 대한 IP와 DNS 이름을 등록하여 DNS 이름을 기반으로 리소스에 접근할 수 있도록 한다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"노드\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C\" aria-label=\"노드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드</h3>\n<p>노드는 마스터에 의해 명령을 받고 실제 워크로드를 생성하여 서비스 하는 컴포넌트이다.<br>\n노드에는 Kubelet, Kube-proxy,cAdvisor 그리고 컨테이너 런타임이 배포된다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">Kubelet</code>  </p>\n<p>노드에 배포되는 에이전트 마스터의 API서버와 통신을 하면서, 노드가 수행해야 할 명령을 받아서 수행하고<br>\n반대로 노드의 상태등을 마스터로 전달하는 역할을 한다. </p>\n</li>\n<li>\n<p><code class=\"language-text\">Kube-proxy</code> </p>\n<p>노드로 들어오는 네트워크 트래픽을 적절한 컨테이너로 라우팅하고 로드밸런싱등<br>\n노드로 들어오고 나가는 네트워크 트래픽을 프록시하고 노드와 마스터간의 네트워크 통신을 관리한다. </p>\n</li>\n<li>\n<p><code class=\"language-text\">Container runtime</code>  </p>\n<p>Pod를 통해서 배포된 컨테이너를 실행하는 컨테이너 런타임이다.<br>\n보통 도커 컨테이너를 생각하기 쉬운데 도커 이외에도 rkt (보안이 강화된 컨테이너), Hyper container 등 다양한 런타임이 있다.</p>\n</li>\n<li><code class=\"language-text\">cAdvisor</code><br>\ncAdvisor는 각 노드에서 기동되는 모니터링 에이전트이다.<br>\n노드내에서 가동되는 컨테이너들의 상태와 성능등의 정보를 수집하여 마스터 서버의 API 서버로 전달한다.<br>\n이 데이타들은 주로 모니터링을 위해서 사용된다.</li>\n</ul>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC\">✔ 아키텍쳐 개념정리</a></li>\n<li>\n<p><a href=\"#-%EB%A7%88%EC%8A%A4%ED%84%B0%EC%99%80-%EB%85%B8%EB%93%9C\">✌ 마스터와 노드</a></p>\n<ul>\n<li><a href=\"#%EB%A7%88%EC%8A%A4%ED%84%B0\">마스터</a></li>\n<li><a href=\"#%EB%85%B8%EB%93%9C\">노드</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 아키텍쳐","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-architecture/"}},"prev":{"id":"64fbddd3-aaf7-50d0-a98f-5a7dff2bb244","html":"<p>머리말  </p>\n<p>이제 기본적인 개념과 kubectl 명령어까지 모두 알아봤다!! 이번 포스트부터는 진짜 실습을 들어가보자!!<br>\n우선 컨포넌트 포스트에서 설명했던 것들부터 시작하겠습니다!!</p>\n<hr>\n<h2 id=\"-pod\" style=\"position:relative;\"><a href=\"#-pod\" aria-label=\" pod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ POD?!</h2>\n<p><code class=\"language-text\">Pod</code>은 쿠버네티스 APP의 기본 실행 단위인데 쉽게 말해 쿠버네티스 워크로드에서 관리할 수 있는 가장 작은 단위가 파드입니다.<br>\n또한 배포 시 배포의 단위가 되기도 합니다. 파드는 하나 이상의 ‘동작중인’ 컨테이너를 포함하고 있는 오브젝트이고<br>\n하나의 파드에는 하나의 컨테이너를 배치하는 것이 기본입니다. 쿠버네티스 클러스터 내에서 파드는 주로 두 가지 방법으로 사용되죠.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93300290-78ae5b80-f831-11ea-8075-020c2856cdec.png\" alt=\"스크린샷, 2020-09-16 15-29-48\"></p>\n<h3 id=\"pod-모델-종류\" style=\"position:relative;\"><a href=\"#pod-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\" aria-label=\"pod 모델 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod 모델 종류</h3>\n<ol>\n<li><code class=\"language-text\">1개 컨테이너</code> - 1개 POD 모델<br>\n“one-container-per-Pod”은 쿠버네티스에서 가장 널리 쓰이는 케이스.<br>\n한개의 pod이 1개의 container을 감싸고 있으며, 쿠버네티스가 pod을 관리.</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p><code class=\"language-text\">2개 이상 컨테이너</code> - 1개 POD 모델</p>\n<p>2개 이상의 container가 리소스를 밀접하게 공유해야하는 상황에 쓰인다.<br>\n하나의 컨테이너가 file을 제공해주면 “sidecar” 역할을 하는 컨테이너가 해당 file에 접근하는 개념이다.<br>\n이러한 방식으로 추상화, 캡슐화 된 pod은 reliable한 application동작으로 이끌거나<br>\nrobust system으로 만드는 등 장점으로 승화시킨다.<br>\n즉 쉽게 말해 서로 의존성이 있는 다중 컨테이너가 동작중인 파드. 리소스 공유가 필요한 결합 서비스 단위인 경우일 것이다.</p>\n</li>\n</ol>\n<br/>\n<p>부가 설명</p>\n<p>기본적으로 하나의 컨테이너에는 최소한의 필요한 기능 즉 하나의 컨테이너는 하나의 기능만 하는 것이 기본이다.<br>\n그런데 VM에 익숙해지면 착각하는 것이 하나의 컨테이너에 여러 개의 어플리케이션을 돌리면 효율적이지 않겠냐는 의문이 있을 수 있다.<br>\n하지만 Dockerfile의 메커니즘 자체가 그렇듯 하나의 컨테이너는 하나의 어플리케이션만 띄울 수 있도록 설계되어 있다.<br>\n쉘 스크립트나 docker-compose를 이용해서 동시에 여러 동작을 유발할 수는 있지만 원칙은 그렇다<br>\n컨테이너는 유연하게 확장/축소가 가능하다는 것이 장점이다.<br>\n만약 하나의 컨테이너에 웹, DB, APP을 다 박아두는 것은 컨테이너를 쓰는 가장 기본적인 목적인 <code class=\"language-text\">'APP 격리'</code>를 져버리는 것이다.<br>\n쉽게 설명하면, 파드가 사용되는 방식 중 하나인 <code class=\"language-text\">'다중 컨테이너의 동작'</code>은 <code class=\"language-text\">'멀티 컨테이너'</code>이지 마구잡이로 여러개를 돌리는 것과는 다르다.</p>\n<p>또한 파트에 하나 이상의 컨테이너가 있다고 하더라도, 파드의 컨테이너는 같은 노드에서만 동작하고,<br>\n하나의 파드에 있는 다중 컨테이너는 저장소, 네트워크 IP 등을 공유한다!!</p>\n<br/>\n<hr>\n<h3 id=\"파드는-어떻게-다중-컨테이너를-관리할까\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8B%A4%EC%A4%91-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%A0%EA%B9%8C\" aria-label=\"파드는 어떻게 다중 컨테이너를 관리할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드는 어떻게 다중 컨테이너를 관리할까?</h3>\n<p>파드는 애초에 결합성이 있는 서비스를 위해 다중 컨테이너를 지원하도록 디자인 되었다.<br>\n예를 들어, 공유 볼륨 내부 파일의 웹 서버 역할을 하는 컨테이너와<br>\n원격 소스로부터 그 파일들을 업데이트하는 분리된 “사이드카” 컨테이너가 있는 경우 아래 다이어그램의 모습일 것이다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/93302001-3a666b80-f834-11ea-9021-efe70f1ac329.png\" alt=\"스크린샷, 2020-09-16 15-49-34\">  </p>\n<p>위의 그림에서 web server가 추가로 필요하게 되면 file puller도 같이 하나가 파드단위로 증가하게 된다.<br>\n이러한 패턴을 <code class=\"language-text\">'사이드 카'</code> 패턴이라고 한다.<br>\n단, 쿠버네티스 공식문서에서는 결합성이 강해 어쩔 수 없는 경우만 사용하도록 권고하고 있다.<br>\n이 때, 파드는 파드 안에 속해 있는 컨테이너들 사이에 두 가지의 공유 리소스를 제공한다.  </p>\n<p>바로 <code class=\"language-text\">네트워킹</code>과 <code class=\"language-text\">저장소</code>이다.</p>\n<p>​</p>\n<h3 id=\"네트워킹\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\" aria-label=\"네트워킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워킹</h3>\n<p>각 파드는 고유한 IP를 할당받는다.<br>\n한 파드 안에 있는 모든 컨테이너는 네트워크 네임스페이스와 IP주소와 포트를 공유한다.<br>\n파드 안의 컨테이너끼리는 localhost를 이용해서 통신할 수 있다.<br>\n파드 밖의 요소와 파드 안의 컨테이너가 통신하기 위해서는 포트 정보와 같은 네트워크 리소스 사용 상태를 서로 공유하고 있어야 한다.</p>\n<p>​</p>\n<h3 id=\"저장소\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9E%A5%EC%86%8C\" aria-label=\"저장소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저장소</h3>\n<p>파드 내부의 모든 컨테이너는 공유 볼륨에 접근할 수 있고<br>\n그 컨테이너끼리 데이터를 공유할 수 있다. 또한 볼륨은 컨테이너가 재시작 되더라도 파드 안의 데이터를 영구적으로 유지할 수 있게 한다.</p>\n<p>​</p>\n<h3 id=\"파드의-lifecycle\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-lifecycle\" aria-label=\"파드의 lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 Lifecycle</h3>\n<p>일단 파드가 생성되면 파드에는 고유한 ID가 할당되고, 노드에 스케줄링 된다.<br>\n해당 노드가 종료되면 해당 노드에 스케줄링 되어있던 파드는 일정 시간이 지난 후 삭제된다.<br>\n노드가 삭제된다고 해서 소속되어있던 파드가 리스케줄링 되지 않으며 필요시 완전히 새로운 파드를 다시 생성하는 방식이다.  </p>\n<p>같은 이유로 파드는 문제가 발생하더라도 자가 복구하지 않는다. 만약 파드의 동작이 실패하는 경우, 파드는 삭제되어버린다.<br>\n이와 같은 파드 인스턴스를 관리하는 동작을 컨트롤러가 한다.</p>\n<p>즉, 파드는 사용자나 컨트롤러가 명시적으로 삭제하기 전까지는 남아 있게 된다.</p>\n<p>​</p>\n<h3 id=\"파드의-의미\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%9D%98%EB%AF%B8\" aria-label=\"파드의 의미 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 의미</h3>\n<p>파드는 응집력 있는 서비스 단위를 형성하는 여러 개의 협력 프로세스를 모델로 한다.<br>\n파드는 그 구성 요소 집합보다 높은 수준의 추상화를 제공함으로써 애플리케이션 배포 및 관리를 단순화한다.<br>\n파드는 전개 단위, 수평 확장 및 복제를 한다. 공동 스케줄링, 공유된 생애주기 (예: 종료), 조정된 복제, 자원 공유 및 종속성 관리는 파드의 컨테이너에 대해 자동으로 처리된다.</p>\n<p>​</p>\n<h3 id=\"파드의-종료\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%A2%85%EB%A3%8C\" aria-label=\"파드의 종료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드의 종료</h3>\n<ul>\n<li>\n<p>절차</p>\n<p>파드는 쿠버네티스 클러스터의 노드에서 실행 중인 프로세스이다.<br>\n이러한 프로세스가 더이상 필요하지 않을 때는 정상 종료시켜야 한다. 사용자가 삭제를 요청할 수 있어야 하고,<br>\n프로세스가 종료되는 것을 알 수 있어야 하며, 삭제가 완료된 것을 확인할 수 있어야 한다.<br>\n사용자가 파드 삭제 요청을 하면 시스템은 파드가 종료되기 전에 정리를 위한 유예 기간을 두었다가,<br>\nKILL 시그널이 해당 프로세스로 전송되면 파드가 API 서버에서 삭제된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token operator\">-</span> 사용자의 삭제 명령<span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span> 유예기간<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>초<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">-</span> 유예기간이 지난 파드 정보가 갱신\n<span class=\"token operator\">-</span> 이 파드는 조회시 Terminating이라는 문구 출력\n<span class=\"token operator\">-</span> Terminating으로 표시되는 것을 확인하면 kubelet은 종료 작업 시작\n<span class=\"token operator\">-</span> 종료한 파드는 엔드포인트 리스트에서 제거되며<span class=\"token punctuation\">,</span> 레플리케이션 컨트롤러의 관리 대상에서 제외\n<span class=\"token operator\">-</span> 만약 도중에 유예 기간이 만료되면 파드에서 실행중이던 모든 프로세스에 SIGKILL이 떨어짐\n<span class=\"token operator\">-</span> kubelet은 유예기간을 <span class=\"token number\">0</span>으로 세팅해서 API 서버로부터 파드를 즉시 삭제할 수 있음<span class=\"token punctuation\">.</span> 이제 파드는 더이상 보이지 않음<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>강제 삭제</p>\n<p>기본적으로 삭제 작업은 30초 이내에 끝이 난다. kubectl delete 명령은 —grace-period={second} 옵션을 지원하는데,<br>\n이 옵션은 기본 설정된 값을 사용자가 정의할 수 있도록 하는 옵션으로, 0이 되면 파드는 즉시 삭제된다.<br>\nkubectl 1.5버전 이상에서는 강제 삭제를 위해서 반드시 <code class=\"language-text\">--grace-period=&lt;second></code>와 함께 <code class=\"language-text\">--force</code>를 같이 사용해야 한다.  </p>\n<p>파드를 강제 삭제하면 API서버는 kubelet으로부터 실행중이던 파드가 종료되었다는 통지를 기다리지 않는다.<br>\nAPI단에서 파드를 즉시 제거해버리기 때문에 동일한 이름으로 새 파드를 만들 수도 있다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-파드-생성-실습\" style=\"position:relative;\"><a href=\"#-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1-%EC%8B%A4%EC%8A%B5\" aria-label=\" 파드 생성 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 파드 생성 실습</h2>\n<br/>\n<p> <code class=\"language-text\">kubectl explain</code> 명령으로 파드 리소스의 필드를 확인 해보자!.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>master <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># kubectl explain <span class=\"token class-name\">pod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers</span>\nKIND<span class=\"token punctuation\">:</span>     <span class=\"token class-name\">Pod</span>\nVERSION<span class=\"token punctuation\">:</span>  <span class=\"token class-name\">v1</span>\n\nRESOURCE<span class=\"token punctuation\">:</span> <span class=\"token class-name\">containers <span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Object<span class=\"token punctuation\">></span></span>\n\nDESCRIPTION<span class=\"token punctuation\">:</span>\n    List of containers belonging to the pod<span class=\"token punctuation\">.</span> Containers cannot currently be\n    added <span class=\"token keyword\">or</span> removed<span class=\"token punctuation\">.</span> There must be at least <span class=\"token class-name\">one</span> container <span class=\"token keyword\">in</span> a Pod<span class=\"token punctuation\">.</span> Cannot be\n    updated<span class=\"token punctuation\">.</span>\n\n    A single application container that you want to run within a pod<span class=\"token punctuation\">.</span>\n\nFIELDS<span class=\"token punctuation\">:</span>\nimage\t<span class=\"token operator\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token operator\">></span>\n    Docker image <span class=\"token class-name\">name<span class=\"token punctuation\">.</span> More</span> info<span class=\"token punctuation\">:</span>\n    https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>concepts<span class=\"token operator\">/</span>containers<span class=\"token operator\">/</span>images This field <span class=\"token keyword\">is</span>\n    <span class=\"token class-name\">optional</span> to allow higher level config management to <span class=\"token keyword\">default</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">override</span>\n    <span class=\"token class-name\">container</span> images <span class=\"token keyword\">in</span> workload controllers like Deployments <span class=\"token keyword\">and</span> StatefulSets<span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 연습삼아 POD를 정의하는 <code class=\"language-text\">yaml</code>파일을 만들어보자!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span> \nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \nspec<span class=\"token punctuation\">:</span> \ncontainers<span class=\"token punctuation\">:</span> \n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span> \n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n    ports<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n        protocol<span class=\"token punctuation\">:</span> TCP</code></pre></div>\n<br/>\n<p>위 yaml 파일을 세부적으로 설명해봅시다!</p>\n<ul>\n<li><code class=\"language-text\">apiVersion</code> : YAML 파일에서 정의한 오브젝트의 API 버전을 나타냅니다.</li>\n<li><code class=\"language-text\">kind</code> : 이 리소스의 종류를 나타냅니다. 위에선 pod로 생성하기 때문에 pod<br>\n다른 오브젝트의 종류는 kubectl api-resources 명령어를 통해 확인할 수 있습니다.</li>\n<li><code class=\"language-text\">metadata</code>: 라벨, 주석, 이름과 같은 리소스의 부가 정보들을 입력합니다. </li>\n<li><code class=\"language-text\">spec</code>: 리소스를 생성하기 위한 자세한 정보를 입력합니다. 생성되는 container의 이름, 이미지, 포트 등을 설정할 수 있습니다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">pod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers <span class=\"token punctuation\">:</span> 컨테이너 정의\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">:</span> 컨테이너에 사용할 이미지\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> 컨테이너 이름\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">:</span> 노출할 포트 정의\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>containerPort<span class=\"token punctuation\">:</span> 노출할 컨테이너 포트번호\npod<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>containers<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">:</span> 노출할 컨테이너 포트의 기본 프로토콜</code></pre></div>\n<br/>\n<br/>\n<p>작성한 <code class=\"language-text\">YAML</code>파일을 기반으로 POD를 생성해보겠습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl apply <span class=\"token operator\">-</span>f yaml 파일이름</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl apply <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml \npod<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod created</code></pre></div>\n<br/>\n<br/>\n<p>파드 동작상태 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS    RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          64s</code></pre></div>\n<br/>\n<br/>\n<p>실행중인 파드 정의 확인   </p>\n<p><code class=\"language-text\">-o</code>옵션에는 yaml과 json 중 하나를 선택할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> pods nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>o <span class=\"token class-name\">yaml</span>\napiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span>\nmetadata<span class=\"token punctuation\">:</span>\nannotations<span class=\"token punctuation\">:</span>\n    kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span> <span class=\"token operator\">|</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"nasa-nginx-pod\"</span><span class=\"token punctuation\">,</span>\"nam\nespace<span class=\"token string\">\":\"</span><span class=\"token keyword\">default</span><span class=\"token string\">\"},\"</span>spec<span class=\"token string\">\":{\"</span>containers<span class=\"token string\">\":[{\"</span>image<span class=\"token string\">\":\"</span>nginx<span class=\"token punctuation\">:</span>latest<span class=\"token string\">\",\"</span>name<span class=\"token string\">\":\"</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>container\"<span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"ports\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"containerPort\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"protocol\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"TCP\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\ncreationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2020-09-16T07:26:45Z\"</span>\nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nresourceVersion<span class=\"token punctuation\">:</span> <span class=\"token string\">\"39554\"</span>\nselfLink<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>namespaces<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nuid<span class=\"token punctuation\">:</span> 148bfb1a<span class=\"token operator\">-</span>73ad<span class=\"token operator\">-</span>4c44<span class=\"token operator\">-</span><span class=\"token number\">805d</span><span class=\"token operator\">-</span>300cb5be8af8\nspec<span class=\"token punctuation\">:</span>\ncontainers<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\n    imagePullPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Always</span>\n    name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span>\n    ports<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    resources<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    terminationMessagePath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>termination<span class=\"token operator\">-</span><span class=\"token class-name\">log</span>\n    terminationMessagePolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">File</span>\n    volumeMounts<span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">-</span> mountPath<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>secrets<span class=\"token operator\">/</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token class-name\">serviceaccount</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span><span class=\"token operator\">-</span>token<span class=\"token operator\">-</span>556xc\n    readOnly<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\ndnsPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ClusterFirst</span>\nenableServiceLinks<span class=\"token punctuation\">:</span> <span class=\"token class-name\">true</span>\nnodeName<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span><span class=\"token class-name\">node3</span>\npriority<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\nrestartPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Always</span>\nschedulerName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token class-name\">scheduler</span>\nsecurityContext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nserviceAccount<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nserviceAccountName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nterminationGracePeriodSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\ntolerations<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> effect<span class=\"token punctuation\">:</span> <span class=\"token class-name\">NoExecute</span>\n    key<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span><span class=\"token keyword\">not</span><span class=\"token operator\">-</span>ready\n    <span class=\"token keyword\">operator</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Exists</span>\n    tolerationSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span></code></pre></div>\n<br/>\n<br/>\n<p>파드의 describe 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl describe pods nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nName<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span>\nNamespace<span class=\"token punctuation\">:</span>    <span class=\"token keyword\">default</span>\nPriority<span class=\"token punctuation\">:</span>     <span class=\"token number\">0</span>\nNode<span class=\"token punctuation\">:</span>         nasa<span class=\"token operator\">-</span>node3<span class=\"token operator\">/</span><span class=\"token number\">10.146</span><span class=\"token number\">.0</span><span class=\"token number\">.9</span>\n<span class=\"token class-name\">Start</span> Time<span class=\"token punctuation\">:</span>   Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> Sep <span class=\"token number\">2020</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">:</span><span class=\"token number\">45</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\nLabels<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations<span class=\"token punctuation\">:</span>  kubectl<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>last<span class=\"token operator\">-</span>applied<span class=\"token operator\">-</span>configuration<span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">{</span><span class=\"token string\">\"apiVersion\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Pod\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"annotations\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>\"nasa<span class=\"token operator\">-</span>nginx\n<span class=\"token operator\">-</span>pod<span class=\"token string\">\",\"</span><span class=\"token keyword\">namespace</span><span class=\"token string\">\":\"</span><span class=\"token keyword\">default</span><span class=\"token string\">\"},\"</span>spec<span class=\"token string\">\":{\"</span>containers<span class=\"token string\">\":[{\"</span>image\"<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\nStatus<span class=\"token punctuation\">:</span>       Running\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\npod도 container와 같이 ``kubectl exec``를 통해 명령어를 실행시킬 수 있습니다. \n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod bash</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod bash\nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># \nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls     \nbin   dev                  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh  home  lib64  mnt  proc  run   srv  tmp  <span class=\"token keyword\">var</span>\nboot  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d  etc                   lib   media  opt  root  sbin  sys  usr</code></pre></div>\n<br/>\n<br/>\n<p>또 도커와 같이 <code class=\"language-text\">kubectl logs</code>를 통해 포드의 로그를 확인할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl logs nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span>#  kubectl logs nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token class-name\">empty</span><span class=\"token punctuation\">,</span> will attempt to perform configuratio\nn\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Looking <span class=\"token keyword\">for</span> <span class=\"token class-name\">shell</span> scripts <span class=\"token keyword\">in</span> <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Launching <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh\n<span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Getting the checksum of <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token number\">10</span><span class=\"token operator\">-</span>listen<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>ipv6<span class=\"token operator\">-</span><span class=\"token keyword\">by</span><span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Enabled listen <span class=\"token keyword\">on</span> IPv6 <span class=\"token keyword\">in</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span>conf\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> Launching <span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token operator\">-</span>envsubst<span class=\"token operator\">-</span><span class=\"token keyword\">on</span><span class=\"token operator\">-</span>templates<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Configuration</span> complete<span class=\"token punctuation\">;</span> ready <span class=\"token keyword\">for</span> start up</code></pre></div>\n<br/>\n<br/>\n<p>오브젝트는 <code class=\"language-text\">kubectl delete -f</code> 명령어로 삭제할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl delete <span class=\"token operator\">-</span>f nasa<span class=\"token punctuation\">.</span>yml \npod <span class=\"token string\">\"nasa-nginx-pod\"</span> deleted\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># \n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNo resources found<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<hr>\n<h2 id=\"🤦♂️-컨테이너-두개-이상을-포함한-pod-만들기\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%9C-pod-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"🤦♂️ 컨테이너 두개 이상을 포함한 pod 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤦‍♂️ 컨테이너 두개 이상을 포함한 pod 만들기</h2>\n<br/>\n<p>YAML 파일</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Pod</span> \nmetadata<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">pod</span> \nspec<span class=\"token punctuation\">:</span> \ncontainers<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span><span class=\"token class-name\">container</span> \n    image<span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span> \n    ports<span class=\"token punctuation\">:</span> \n        <span class=\"token operator\">-</span> containerPort<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> \n        protocol<span class=\"token punctuation\">:</span> TCP \n    <span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">sidecar</span> \n    image<span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">14.04</span> \n    command<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"echo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">]</span> \n    args<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ubuntu\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<br/>\n<p>다음과 같이 두개가 생성되었고 한개만 실행하고 있는 것을 확인할 수 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl <span class=\"token keyword\">get</span> po\nNAME             READY   STATUS             RESTARTS   AGE\nnasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>     CrashLoopBackOff   <span class=\"token number\">1</span>          32s</code></pre></div>\n<br/>\n<br/>\n<p><code class=\"language-text\">-c</code> 옵션을 사용해 어떤 컨테이너에 접속 할지 확인 가능합니다  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>c sidecar bash</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span><span class=\"token class-name\">master</span> nasa<span class=\"token punctuation\">]</span># kubectl exec <span class=\"token operator\">-</span>it nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod <span class=\"token operator\">-</span>c nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>container bash\nroot@nasa<span class=\"token operator\">-</span>nginx<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span># ls\nbin   dev                  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>sh  home  lib64  mnt  proc  run   srv  tmp  <span class=\"token keyword\">var</span>\nboot  docker<span class=\"token operator\">-</span>entrypoint<span class=\"token punctuation\">.</span>d  etc                   lib   media  opt  root  sbin  sys  usr</code></pre></div>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-pod\">✔ POD?!</a></p>\n<ul>\n<li><a href=\"#pod-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\">Pod 모델 종류</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8B%A4%EC%A4%91-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%A0%EA%B9%8C\">파드는 어떻게 다중 컨테이너를 관리할까?</a></li>\n<li><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9\">네트워킹</a></li>\n<li><a href=\"#%EC%A0%80%EC%9E%A5%EC%86%8C\">저장소</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-lifecycle\">파드의 Lifecycle</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%9D%98%EB%AF%B8\">파드의 의미</a></li>\n<li><a href=\"#%ED%8C%8C%EB%93%9C%EC%9D%98-%EC%A2%85%EB%A3%8C\">파드의 종료</a></li>\n</ul>\n</li>\n<li><a href=\"#-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1-%EC%8B%A4%EC%8A%B5\">✌ 파드 생성 실습</a></li>\n<li><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%9C-pod-%EB%A7%8C%EB%93%A4%EA%B8%B0\">🤦‍♂️ 컨테이너 두개 이상을 포함한 pod 만들기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 29, 2021","title":"[Kubernetes] - 쿠버네티스의 POD?","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/kubernetes-pod/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/kubernetes-command/","nextSlug":"/kubernetes-architecture/","prevSlug":"/kubernetes-pod/"}},"staticQueryHashes":["1073350324","2938748437"]}