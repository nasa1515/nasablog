{"componentChunkName":"component---src-templates-blog-template-js","path":"/data-kafka-wsl/","result":{"data":{"cur":{"id":"7ef64a62-2add-5bab-b47b-26a1bed94bf8","html":"<p>머리말  </p>\n<p>이번 포스트에서는 Local WSL2 Ubuntu에 Kafka Brocker를 구성한 뒤 무작위 데이터를 생성하여 각 Cloud의 Steraming Tools<br>\n(aws : kinesis, gcp : pub/sub, azure : eventhub)에서 Consume하는 과정을 정리해보았습니다.<br>\n아무래도 금액적인 부분의 이슈가 발생하기에 최대한 egress Traffic이 발생되지 않게 Local에서 진행하게되었습니다.   </p>\n<hr>\n<h2 id=\"-docker-docker-compose-설치\" style=\"position:relative;\"><a href=\"#-docker-docker-compose-%EC%84%A4%EC%B9%98\" aria-label=\" docker docker compose 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Docker, Docker-compose 설치</h2>\n<p>Docker와 Docker-compose의 경우 아래의 공식문서를 확인하시면 자세한 설치 방법을 확인할 수 있습니다.<br>\n<a href=\"https://docs.docker.com/engine/install/ubuntu/\">Docker 설치</a><br>\n<a href=\"https://docs.docker.com/compose/install/\">Docker-Compose 설치</a>\n<br/></p>\n<ul>\n<li>\n<p>Docker 설치부터 진행합니다, 우선적으로 WSL 남겨져있는 잔재를 지워줍니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">삭제\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> remove docker docker<span class=\"token operator\">-</span>engine docker<span class=\"token punctuation\">.</span>io containerd runc</code></pre></div>\n<br/>\n</li>\n<li>\n<p>이 후 Pakage index를 Update 한 뒤 관련 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install \\\n  ca<span class=\"token operator\">-</span>certificates \\\n  curl \\\n  gnupg \\\n  lsb<span class=\"token operator\">-</span>release</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>설치가 완료되었으면, Docker의 공식 GPG Key를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$  curl <span class=\"token operator\">-</span>fsSL https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu<span class=\"token operator\">/</span>gpg <span class=\"token operator\">|</span> sudo gpg <span class=\"token operator\">--</span>dearmor <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>keyrings<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>archive<span class=\"token operator\">-</span>keyring<span class=\"token punctuation\">.</span>gpg</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>아래 명령어를 사용하여 Pakage Repo를 추가해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ echo \\\n<span class=\"token string\">\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\"</span> <span class=\"token operator\">|</span> sudo tee <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>docker<span class=\"token punctuation\">.</span>list <span class=\"token operator\">></span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Docker Engine을 설치합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install docker<span class=\"token operator\">-</span>ce docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli containerd<span class=\"token punctuation\">.</span>io docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>plugin</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>현재 Repo에서 사용 가능한 버전을 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ apt<span class=\"token operator\">-</span>cache madison docker<span class=\"token operator\">-</span>ce\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.15</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.14</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.13</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.12</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.11</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.10</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Version을 확인했다면 아래 명령어에 설치하고 싶은 Version을 넣어서 UPDATE 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">VERSION_STRING</span><span class=\"token operator\">></span> docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">VERSION_STRING</span><span class=\"token operator\">></span> containerd<span class=\"token punctuation\">.</span>io docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>plugin</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>시험삼아 Hello-world Pod를 띄워보려 했지만 아래와 같은 error Message에 직면했습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># docker run hello<span class=\"token operator\">-</span>world\n  docker<span class=\"token operator\">:</span> Cannot connect to the Docker daemon at unix<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//var/run/docker.sock. Is the docker daemon running?.</span>\n  See <span class=\"token string\">'docker run --help'</span><span class=\"token punctuation\">.</span>\n\n$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># \n  root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># systemctl start docker\n  System has not been booted <span class=\"token keyword\">with</span> systemd <span class=\"token keyword\">as</span> init <span class=\"token function\">system</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">PID</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> Can't operate<span class=\"token punctuation\">.</span>\n  Failed to connect to bus<span class=\"token operator\">:</span> Host is down</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>확인해보니 WSL에서는 기존 Linux의 INIT과는 다르게 따로 설정을 진행해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install cgroupfs<span class=\"token operator\">-</span>mount\n$ sudo cgroupfs<span class=\"token operator\">-</span>mount\n$ sudo service docker start</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 정상적으로 Hello World Pod가 실행됨을 확인했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># docker run hello<span class=\"token operator\">-</span>world\n  Unable to find image <span class=\"token string\">'hello-world:latest'</span> locally\n\n\n  latest<span class=\"token operator\">:</span> Pulling from library<span class=\"token operator\">/</span>hello<span class=\"token operator\">-</span>world\n  <span class=\"token number\">2</span>db29710123e<span class=\"token operator\">:</span> Pull complete \n  Digest<span class=\"token operator\">:</span> sha256<span class=\"token operator\">:</span><span class=\"token number\">10</span>d7d58d5ebd2a652f4d93fdd86da8f265f5318c6a73cc5b6a9798ff6d2b2e67\n  Status<span class=\"token operator\">:</span> Downloaded newer image <span class=\"token keyword\">for</span> hello<span class=\"token operator\">-</span>world<span class=\"token operator\">:</span>latest\n\n  Hello from Docker<span class=\"token operator\">!</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>추가적으로 Compose도 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ curl <span class=\"token operator\">-</span><span class=\"token constant\">SL</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>compose<span class=\"token operator\">/</span>releases<span class=\"token operator\">/</span>download<span class=\"token operator\">/</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">5.0</span><span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>linux<span class=\"token operator\">-</span>x86_64 <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n$ sudo chmod <span class=\"token operator\">+</span>x <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n$ sudo ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n\n# Version 확인\n$ docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">--</span>version\n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">--</span>version\nDocker Compose version v2<span class=\"token punctuation\">.</span><span class=\"token number\">5.0</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-zookeeper-설치\" style=\"position:relative;\"><a href=\"#-zookeeper-%EC%84%A4%EC%B9%98\" aria-label=\" zookeeper 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 Zookeeper 설치</h2>\n<h3 id=\"ps\" style=\"position:relative;\"><a href=\"#ps\" aria-label=\"ps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PS</h3>\n<p>Kafka는 Broker에서 Topic의 Metadata를 저장하기 위해 Zookeeper를 사용합니다.<br>\n일반적으로 Zookeeper를 Standalone으로 구성할 수도 있지만, 일반적인 Hadoop과 동일하게 실제 운영에서는 잘 찾아보기 힘듭니다.<br>\n때문에 Zookeeper를 Cluster로 구성하고, HA를 확보한 것을 Zookeeper Ensemble 이라고 합니다.</p>\n<p>저도 하나의 OS (WSL)에서 3개의 Pod를 띄워 Ensemble 형태로 구성합니다.</p>\n<br/>\n<ol>\n<li>\n<p>Docker File 작업을 진행할 폴더를 하나 생성합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir docker</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p>아래와 같은 내용으로 DockerFile을 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">FROM</span> ubuntu<span class=\"token operator\">:</span><span class=\"token number\">20.04</span>\n<span class=\"token constant\">RUN</span> mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update \n\n<span class=\"token constant\">WORKDIR</span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install \n\n# java 설치 \n<span class=\"token constant\">ENV</span> <span class=\"token constant\">DEBIAN_FRONTEND</span> noninteractive \n<span class=\"token constant\">ENV</span> <span class=\"token constant\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jvm<span class=\"token operator\">/</span>java<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>openjdk<span class=\"token operator\">-</span>amd64 \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install openjdk<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>jdk <span class=\"token operator\">-</span>y \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install wget <span class=\"token operator\">-</span>y \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install vim <span class=\"token operator\">-</span>y \n\n# zookeeper 설치 \n\n<span class=\"token constant\">RUN</span> wget downloads<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz \n<span class=\"token constant\">RUN</span> tar <span class=\"token operator\">-</span>zxvf apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz \n<span class=\"token constant\">RUN</span> mv apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper \n\n# 설정파일 및 초기화 파일 복사\n\n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg \n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>sh init<span class=\"token punctuation\">.</span>sh \n\n# windows에서 작업 시 <span class=\"token constant\">CRLF</span>와 <span class=\"token constant\">LF</span> 처리 방식 문제 방지 \n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> init<span class=\"token punctuation\">.</span>sh \n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg \n\n<span class=\"token constant\">CMD</span> bash init<span class=\"token punctuation\">.</span>sh</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"3\">\n<li>\n<p>Docker File에서 명시한 config Folder를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir config</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"4\">\n<li>\n<p>config Folder에 아래 내용의 init.sh File을 생성합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>data \n\n# 주키퍼는 myid 파일로 클러스터를 구분한다<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span><span class=\"token operator\">~</span><span class=\"token number\">255</span>까지 번호를 지정할 수 있다<span class=\"token punctuation\">.</span> \necho $<span class=\"token constant\">MY_ID</span> <span class=\"token operator\">></span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">data</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">myid</span></span> \n\n# 주키퍼 서버를 실행한다<span class=\"token punctuation\">.</span> \n<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh start \n\n# 자동으로 종료되지 않도록 방지한다<span class=\"token punctuation\">.</span> \ntail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"5\">\n<li>\n<p>config Folder에 아래 내용의 zoo.cfg 파일을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># 팔로워가 리더에 접속할 수 있는 시간 \n# initLimit <span class=\"token operator\">*</span> tickTime <span class=\"token operator\">=</span> <span class=\"token number\">40</span>초 로 설정된다<span class=\"token punctuation\">.</span> \ninitLimit<span class=\"token operator\">=</span><span class=\"token number\">10</span> \ntickTime<span class=\"token operator\">=</span><span class=\"token number\">2000</span> \n\n# 리더가 될 수 있는 팔로워의 최대 갯수를 나타낸다<span class=\"token punctuation\">.</span> \nsyncLimit<span class=\"token operator\">=</span><span class=\"token number\">5</span> \n\n# myid가 저장될 디렉토리 위치이다<span class=\"token punctuation\">.</span> \ndataDir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>data \n\n# 클라이언트가 접속할 포트 번호이다<span class=\"token punctuation\">.</span> \nclientPort<span class=\"token operator\">=</span><span class=\"token number\">2181</span> \n\n# 앙상블을 이루는 서버 정보이다<span class=\"token punctuation\">.</span> \n# server<span class=\"token punctuation\">.</span><span class=\"token constant\">X</span><span class=\"token operator\">=</span>hostname<span class=\"token operator\">:</span>peerPort<span class=\"token operator\">:</span>leaderPort\n# peerPort는 앙상블 서버들이 상호 통신하는 데 사용되는 포트 번호이다<span class=\"token punctuation\">.</span> \n# leaderPort는 리더를 선출하는 데 사용되는 포트 번호이다<span class=\"token punctuation\">.</span> \n\n# <span class=\"token operator\">--</span> <span class=\"token number\">3888</span>뒤에 공백 조심<span class=\"token operator\">!</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">1</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">3</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\n\n# 자동으로 생성되는 스냅샷을 <span class=\"token number\">24</span>시간마다 최대 <span class=\"token number\">3</span>개를 유지하고 나머지는 제거한다<span class=\"token punctuation\">.</span> \nautopurge<span class=\"token punctuation\">.</span>snapRetainCount<span class=\"token operator\">=</span><span class=\"token number\">3</span> \nautopurge<span class=\"token punctuation\">.</span>purgeInterval<span class=\"token operator\">=</span><span class=\"token number\">24</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"6\">\n<li>\n<p>Zookeeper Pod가 원활하게 통신할 수 있도록 Docker Network를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker network create zoo\nebf8d2ee0ebbac5acce268f5935e5bd80b29ef2b3f29931054b347f8d7c27e8a\n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker network list\n<span class=\"token constant\">NETWORK</span> <span class=\"token constant\">ID</span>     <span class=\"token constant\">NAME</span>      <span class=\"token constant\">DRIVER</span>    <span class=\"token constant\">SCOPE</span>\nf10c3aaa8146   bridge    bridge    local\nc5b41392b3bd   host      host      local\n<span class=\"token number\">36</span>f1ffafa37e   none      <span class=\"token keyword\">null</span>      local\nebf8d2ee0ebb   zoo       bridge    local</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"7\">\n<li>\n<p>위 과정을 모두 완료하였으면 최종적으로는 아래와 같이 구성되어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">*</span>\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">836</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> Dockerfile\n\nconfig<span class=\"token operator\">:</span>\ntotal <span class=\"token number\">16</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root  <span class=\"token number\">315</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">20</span> init<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">913</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">21</span> zoo<span class=\"token punctuation\">.</span>cfg\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root root <span class=\"token number\">4096</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">30</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">30</span> <span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>구성이 위와 같다면DockerFile을 생성한 경로에서 이미지를 Build합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker build --tag nasa1515-zookeeper .\n...\n...\n...\nRemoving intermediate container bb88073c3b9a\n---> 6e4b73214693\nStep 16/17 : RUN sed -i 's/\\r//g' /usr/local/zookeeper/conf/zoo.cfg\n ---> Running in e19594c509af\nRemoving intermediate container e19594c509af\n ---> 57ab1963d806\nStep 17/17 : CMD bash init.sh\n ---> Running in 46a08706b3a4\nRemoving intermediate container 46a08706b3a4\n ---> ade37e220c72\nSuccessfully built ade37e220c72\nSuccessfully tagged nasa1515-zookeeper:latest</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"9\">\n<li>\n<p>이미지를 확인해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker image ls\nREPOSITORY           TAG       IMAGE ID       CREATED          SIZE\nnasa1515-zookeeper   latest    ade37e220c72   42 seconds ago   733MB\nubuntu               20.04     53df61775e88   9 days ago       72.8MB\nhello-world          latest    feb5d9fea6a5   7 months ago     13.3kB</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"10\">\n<li>\n<p>이제 Docker Compose File을 생성합니다. (docker-compose.yml)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">version<span class=\"token operator\">:</span> <span class=\"token string\">'3.8'</span>\nvolumes<span class=\"token operator\">:</span> \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume \n      \nservices<span class=\"token operator\">:</span> \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> \n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n    \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n    \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n  \nnetworks<span class=\"token operator\">:</span> \n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> zoo</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"11\">\n<li>\n<p>생성한 compose로 Container를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span> \n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> Running <span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">4</span>\n ⠿ Network zoo                     Created                                                                                                                                                                <span class=\"token number\">0.0</span>s\n ⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>  Started                                                                                                                                                                <span class=\"token number\">0.6</span>s\n⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span>  Started                                                                                                                                                                <span class=\"token number\">0.8</span>s\n⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>  Started           </code></pre></div>\n</li>\n</ol>\n<br/>\n<ul>\n<li>\n<p>정상적으로 구동이되었다면 아래 명령어로 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\n$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\n$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>결과를 확인하면, 한개의 Zookeeper는 Leader로 선출되었고, 나머지 2개는 follwer로 설정되어있는 것을 확인 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> follower\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> follower\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> leader</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-kafka-configuration\" style=\"position:relative;\"><a href=\"#-kafka-configuration\" aria-label=\" kafka configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐱‍🏍 Kafka Configuration</h2>\n<h3 id=\"ps-1\" style=\"position:relative;\"><a href=\"#ps-1\" aria-label=\"ps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PS</h3>\n<p>Zookeeper Cluster의 구성을 완료했다면,<br>\n이번에는 Kafka를 Docker로 구성한 뒤 Zookeeper Cluster와 연동하는 작업을 진행합니다.<br>\n간단하게 Kafka Broker는 Zookeeper와 동일하게 3개로 구성하고 크기를 자유롭게 변경 가능하도록 하려고 합니다.</p>\n<br/>\n<ul>\n<li>\n<p>위에서 Zookeeper를 다룰 때 DockerFile을 다뤘으니, 이번에도 바로 DockerFile을 구성하겠습니다.</p>\n<p>[1] 우선 작업할 폴더를 생성합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir kafka<span class=\"token operator\">-</span>broker</code></pre></div>\n<br/>\n<p>[2] 아래와 같은 내용이 담긴 Dockerfile을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">FROM</span> ubuntu<span class=\"token operator\">:</span><span class=\"token number\">20.04</span>\n<span class=\"token constant\">RUN</span> mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n\n<span class=\"token constant\">WORKDIR</span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install\n<span class=\"token constant\">ENV</span> <span class=\"token constant\">DEBIAN_FRONTEND</span> noninteractive\n<span class=\"token constant\">ENV</span> <span class=\"token constant\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jvm<span class=\"token operator\">/</span>java<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>openjdk<span class=\"token operator\">-</span>amd64\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install openjdk<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>jdk <span class=\"token operator\">-</span>y\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install wget <span class=\"token operator\">-</span>y\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install vim <span class=\"token operator\">-</span>y\n\n<span class=\"token constant\">RUN</span> wget https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>downloads<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>kafka_2<span class=\"token punctuation\">.</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>tgz\n<span class=\"token constant\">RUN</span> tar <span class=\"token operator\">-</span>zxvf kafka_2<span class=\"token punctuation\">.</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>tgz\n<span class=\"token constant\">RUN</span> mv kafka_2<span class=\"token punctuation\">.</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka\n<span class=\"token constant\">RUN</span> mkdir <span class=\"token operator\">/</span>data \n\n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>sh init<span class=\"token punctuation\">.</span>sh\n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> init<span class=\"token punctuation\">.</span>sh\n\n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties\n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties\n\n<span class=\"token constant\">CMD</span> bash init<span class=\"token punctuation\">.</span>sh</code></pre></div>\n<br/>\n<p>[3] 마찬가지로 config 폴더를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir config</code></pre></div>\n<br/>\n<p>[4] config Folder 안에 init.sh 파일을 생성하고 아래와 같이 내용을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token hashbang comment\">#!/bin/bash</span>\n\n$ sed <span class=\"token operator\">-</span>i <span class=\"token string\">\"s/{{broker_id}}/$BROKER_ID/\"</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties\n\n<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>server<span class=\"token operator\">-</span>start<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties</code></pre></div>\n<br/>\n<p>[5] config Folder 안에 server.properties 파일을 생성하고 아래와 같이 내용을 추가합니다.<br>\n원래라면 broker_id에 값을 추가해야하지만, 위의 init.sh에서 넣어주기 때문에 괜찮습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">num<span class=\"token punctuation\">.</span>network<span class=\"token punctuation\">.</span>threads<span class=\"token operator\">=</span><span class=\"token number\">3</span>\nnum<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>threads<span class=\"token operator\">=</span><span class=\"token number\">8</span>\nsocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span>bytes<span class=\"token operator\">=</span><span class=\"token number\">102400</span>\nsocket<span class=\"token punctuation\">.</span>receive<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span>bytes<span class=\"token operator\">=</span><span class=\"token number\">102400</span>\nsocket<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">.</span>bytes<span class=\"token operator\">=</span><span class=\"token number\">104857600</span>\nlog<span class=\"token punctuation\">.</span>dirs<span class=\"token operator\">=</span><span class=\"token operator\">/</span>data\nnum<span class=\"token punctuation\">.</span>partitions<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nnum<span class=\"token punctuation\">.</span>recovery<span class=\"token punctuation\">.</span>threads<span class=\"token punctuation\">.</span>per<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>dir<span class=\"token operator\">=</span><span class=\"token number\">1</span>\noffsets<span class=\"token punctuation\">.</span>topic<span class=\"token punctuation\">.</span>replication<span class=\"token punctuation\">.</span>factor<span class=\"token operator\">=</span><span class=\"token number\">1</span>\ntransaction<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span>replication<span class=\"token punctuation\">.</span>factor<span class=\"token operator\">=</span><span class=\"token number\">1</span>\ntransaction<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span>isr<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nlog<span class=\"token punctuation\">.</span>retention<span class=\"token punctuation\">.</span>hours<span class=\"token operator\">=</span><span class=\"token number\">168</span>\nlog<span class=\"token punctuation\">.</span>segment<span class=\"token punctuation\">.</span>bytes<span class=\"token operator\">=</span><span class=\"token number\">1073741824</span>\nlog<span class=\"token punctuation\">.</span>retention<span class=\"token punctuation\">.</span>bytes<span class=\"token operator\">=</span><span class=\"token number\">5368709120</span>\nlog<span class=\"token punctuation\">.</span>retention<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">.</span>interval<span class=\"token punctuation\">.</span>ms<span class=\"token operator\">=</span><span class=\"token number\">300000</span>\nzookeeper<span class=\"token punctuation\">.</span>connect<span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span><span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span>kafka\nzookeeper<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>ms<span class=\"token operator\">=</span><span class=\"token number\">18000</span>\ngroup<span class=\"token punctuation\">.</span>initial<span class=\"token punctuation\">.</span>rebalance<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">.</span>ms<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nauto<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">.</span>topics<span class=\"token punctuation\">.</span>enable<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\nbroker<span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>broker_id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>[6] docker-compose.yml을 아래와 같은 내용으로 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">version<span class=\"token operator\">:</span> <span class=\"token string\">'3.8'</span>\nvolumes<span class=\"token operator\">:</span>\n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume \n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume\n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume\nnetworks<span class=\"token operator\">:</span>\n <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n     name<span class=\"token operator\">:</span> zoo\n\nservices<span class=\"token operator\">:</span>\n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>\n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    environment<span class=\"token operator\">:</span>\n      <span class=\"token constant\">BROKER_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka\n    restart<span class=\"token operator\">:</span> always\n    volumes<span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data\n\n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>\n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    environment<span class=\"token operator\">:</span>\n      <span class=\"token constant\">BROKER_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka\n    restart<span class=\"token operator\">:</span> always\n    volumes<span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data\n\n  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span>\n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    environment<span class=\"token operator\">:</span>\n      <span class=\"token constant\">BROKER_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>kafka\n    restart<span class=\"token operator\">:</span> always\n    volumes<span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data</code></pre></div>\n<br/>\n<p>[7] 여기까지 완료했다면 아래와 같은 형태로 구성이 되어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>broker# ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">*</span>\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">639</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">11</span> Dockerfile\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">919</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">14</span> docker<span class=\"token operator\">-</span>compose<span class=\"token punctuation\">.</span>yml\n\nconfig<span class=\"token operator\">:</span>\ntotal <span class=\"token number\">16</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root  <span class=\"token number\">178</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">12</span> init<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root  <span class=\"token number\">681</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> server<span class=\"token punctuation\">.</span>properties\ndrwxrwxrwx <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> <span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">10</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">14</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<p>[8] 자 이제 Dockerfile을 Build 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker build <span class=\"token operator\">--</span>tag nasa1515<span class=\"token operator\">-</span>kafka <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\nStep <span class=\"token number\">17</span><span class=\"token operator\">/</span><span class=\"token number\">18</span> <span class=\"token operator\">:</span> <span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> Running <span class=\"token keyword\">in</span> c653a7573fc3\nRemoving intermediate container c653a7573fc3\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">598</span>ea0a00be3\nStep <span class=\"token number\">18</span><span class=\"token operator\">/</span><span class=\"token number\">18</span> <span class=\"token operator\">:</span> <span class=\"token constant\">CMD</span> bash init<span class=\"token punctuation\">.</span>sh\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> Running <span class=\"token keyword\">in</span> f8a3710be663\nRemoving intermediate container f8a3710be663\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">5581</span>d8201d8b\nSuccessfully built <span class=\"token number\">5581</span>d8201d8b\nSuccessfully tagged nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">:</span>latest</code></pre></div>\n<br/>\n<p>[9] Image가 정상적으로 Build 된 것을 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>broker# docker image ls\n<span class=\"token constant\">REPOSITORY</span>           <span class=\"token constant\">TAG</span>       <span class=\"token constant\">IMAGE</span> <span class=\"token constant\">ID</span>       <span class=\"token constant\">CREATED</span>              <span class=\"token constant\">SIZE</span>\nnasa1515<span class=\"token operator\">-</span>kafka       latest    <span class=\"token number\">5581</span>d8201d8b   About a minute ago   <span class=\"token number\">920</span>MB\nnasa1515<span class=\"token operator\">-</span>zookeeper   latest    e71e36444916   <span class=\"token number\">19</span> hours ago         <span class=\"token number\">737</span>MB\nubuntu               <span class=\"token number\">20.04</span>     <span class=\"token number\">53</span>df61775e88   <span class=\"token number\">10</span> days ago          <span class=\"token number\">72.8</span>MB\nhello<span class=\"token operator\">-</span>world          latest    feb5d9fea6a5   <span class=\"token number\">7</span> months ago         <span class=\"token number\">13.3</span>kB</code></pre></div>\n<br/>\n<p>[10] Compose.yml 파일로 Container를 동작시킵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>broker# docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> Running <span class=\"token number\">7</span><span class=\"token operator\">/</span><span class=\"token number\">7</span>\n ⠿ Network zoo                       Created                                                                                                                                               <span class=\"token number\">0.0</span>s\n ⠿ Volume <span class=\"token string\">\"nasa1515-kafka-1-volume\"</span>  Created                                                                                                                                               <span class=\"token number\">0.0</span>s\n ⠿ Volume <span class=\"token string\">\"nasa1515-kafka-2-volume\"</span>  Created                                                                                                                                               <span class=\"token number\">0.0</span>s\n ⠿ Volume <span class=\"token string\">\"nasa1515-kafka-3-volume\"</span>  Created                                                                                                                                               <span class=\"token number\">0.0</span>s\n ⠿ Container nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>        Started                                                                                                                                               <span class=\"token number\">1.1</span>s\n ⠿ Container nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span>        Started                                                                                                                                               <span class=\"token number\">1.1</span>s\n ⠿ Container nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span>        Started                                                                                                                                               <span class=\"token number\">1.2</span>s</code></pre></div>\n<br/>\n<p>[11] Kafka Container가 잘 실행되었는지 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker ps\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>broker#  docker ps\n<span class=\"token constant\">CONTAINER</span> <span class=\"token constant\">ID</span>   <span class=\"token constant\">IMAGE</span>            <span class=\"token constant\">COMMAND</span>                  <span class=\"token constant\">CREATED</span>              <span class=\"token constant\">STATUS</span>          <span class=\"token constant\">PORTS</span>     <span class=\"token constant\">NAMES</span>\n<span class=\"token number\">5</span>aed89a22bec   nasa1515<span class=\"token operator\">-</span>kafka   <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   About a minute ago   Up <span class=\"token number\">19</span> seconds             nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>bea2dcd9062   nasa1515<span class=\"token operator\">-</span>kafka   <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   About a minute ago   Up <span class=\"token number\">18</span> seconds             nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n<span class=\"token number\">8</span>ff56e284749   nasa1515<span class=\"token operator\">-</span>kafka   <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   About a minute ago   Up <span class=\"token number\">18</span> seconds             nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span></code></pre></div>\n<br/>\n<p>[12] 실제 Container의 Kafka도 정상적으로 동작하는지 로그를 확인해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker logs nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\n# BrokerToControllerChannelManager broker<span class=\"token operator\">=</span><span class=\"token number\">3</span> 브로커 <span class=\"token number\">3</span>개가 정상적으로 연결되었습니다<span class=\"token operator\">!</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token number\">02</span><span class=\"token operator\">:</span><span class=\"token number\">26</span><span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">654</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span> <span class=\"token punctuation\">[</span>KafkaServer id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token function\">started</span> <span class=\"token punctuation\">(</span>kafka<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>KafkaServer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token number\">02</span><span class=\"token operator\">:</span><span class=\"token number\">26</span><span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">928</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span> <span class=\"token punctuation\">[</span>BrokerToControllerChannelManager broker<span class=\"token operator\">=</span><span class=\"token number\">3</span> name<span class=\"token operator\">=</span>alterIsr<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> Recorded <span class=\"token keyword\">new</span> <span class=\"token class-name\">controller</span><span class=\"token punctuation\">,</span> from now on will use broker nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">9092</span> <span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token number\">3</span> rack<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>kafka<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>BrokerToControllerRequestThread<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token number\">02</span><span class=\"token operator\">:</span><span class=\"token number\">26</span><span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">930</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">INFO</span> <span class=\"token punctuation\">[</span>BrokerToControllerChannelManager broker<span class=\"token operator\">=</span><span class=\"token number\">3</span> name<span class=\"token operator\">=</span>forwarding<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> Recorded <span class=\"token keyword\">new</span> <span class=\"token class-name\">controller</span><span class=\"token punctuation\">,</span> from now on will use broker nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">9092</span> <span class=\"token punctuation\">(</span>id<span class=\"token operator\">:</span> <span class=\"token number\">3</span> rack<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>kafka<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>BrokerToControllerRequestThread<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-kafka-client-설정-with-confluent\" style=\"position:relative;\"><a href=\"#-kafka-client-%EC%84%A4%EC%A0%95-with-confluent\" aria-label=\" kafka client 설정 with confluent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎉 Kafka Client 설정 With Confluent</h2>\n<p>위에 내용에서 구축했던 Kafka Cluster는 Docker Container에서 각자 다른 host를 가지고 있습니다.<br>\n때문에 Producer가 Kafka Broker 쪽으로 요청을 보낼 때 구성한 3개의 Host 중 어느 Host로 보내야 할 지 모르게 됩니다.<br>\n또한 운영적으로 보았을 때, Producer에서 하나의 Broker로 메세지를 보낸다면, 해당 Broker가 알 수 없는 문제로 종료되게 된다면, 이슈가 발생한다.<br>\n그래서 일반적인 WEB/WAS의 LoadBalancer 역할을 하는 하나의 End-Point 가 필요합니다.<br>\n지금부터 진행 할 내용은, End-Point에 요청을 보내, 여러 대의 Broker로 구성된 Cluster에서 고가용성을 확보하는 방법입니다.  </p>\n<br/>\n<p>Confluent Kafka REST 설치  </p>\n<ul>\n<li>\n<p>동일하게 Docker로 진행합니다.  </p>\n<p>[1] 작업 할 폴더를 동일하게 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir confluent</code></pre></div>\n<br/>\n<p>[2] 아래 내용을 담은 Dockerfile을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">FROM</span> ubuntu<span class=\"token operator\">:</span><span class=\"token number\">20.04</span>\n<span class=\"token constant\">RUN</span> mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n\n<span class=\"token constant\">WORKDIR</span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install\n\n<span class=\"token constant\">ENV</span> <span class=\"token constant\">DEBIAN_FRONTEND</span> noninteractive\n<span class=\"token constant\">ENV</span> <span class=\"token constant\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jvm<span class=\"token operator\">/</span>java<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>openjdk<span class=\"token operator\">-</span>amd64\n\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install openjdk<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>jdk <span class=\"token operator\">-</span>y\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install wget <span class=\"token operator\">-</span>y\n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install vim <span class=\"token operator\">-</span>y\n\n# confluent<span class=\"token operator\">-</span>community 설치\n<span class=\"token constant\">RUN</span> wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>packages<span class=\"token punctuation\">.</span>confluent<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>archive<span class=\"token operator\">/</span><span class=\"token number\">7.1</span><span class=\"token operator\">/</span>confluent<span class=\"token operator\">-</span>community<span class=\"token operator\">-</span><span class=\"token number\">7.1</span><span class=\"token number\">.1</span><span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\n<span class=\"token constant\">RUN</span> tar <span class=\"token operator\">-</span>zxvf confluent<span class=\"token operator\">-</span>community<span class=\"token operator\">-</span><span class=\"token number\">7.1</span><span class=\"token number\">.1</span><span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz\n<span class=\"token constant\">RUN</span> mv confluent<span class=\"token operator\">-</span><span class=\"token number\">7.1</span><span class=\"token number\">.1</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent\n\n# kafka<span class=\"token operator\">-</span>rest 설정파일 복사\n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties\n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties\n\n# kakfa<span class=\"token operator\">-</span>rest 실행\n<span class=\"token constant\">CMD</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">-</span>start <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties</code></pre></div>\n<br/>\n<p>[3] config 폴더를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir config</code></pre></div>\n<br/>\n<p>[4] config 폴더에 아래 내용을 넣은 kafka-rest.properties 생성합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># kakfa <span class=\"token constant\">ID</span>\nid<span class=\"token operator\">=</span><span class=\"token keyword\">default</span>\n\n# schema<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span>url<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token operator\">:</span><span class=\"token number\">8081</span> \nzookeeper<span class=\"token punctuation\">.</span>connect<span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">2181</span> \nbootstrap<span class=\"token punctuation\">.</span>servers<span class=\"token operator\">=</span><span class=\"token constant\">PLAINTEXT</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">9092</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PLAINTEXT</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">9092</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PLAINTEXT</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">9092</span></code></pre></div>\n<br/>\n<p>[5] 이제 아래 내용을 담은 docker-compose.yml 파일을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">version<span class=\"token operator\">:</span> <span class=\"token string\">'3.8'</span>\nnetworks<span class=\"token operator\">:</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> zoo\n\nservices<span class=\"token operator\">:</span>\n  pipeline<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">:</span>\n    container_name<span class=\"token operator\">:</span> pipeline<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span>rest\n    hostname<span class=\"token operator\">:</span> pipeline<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span>rest\n    image<span class=\"token operator\">:</span> pipeline<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span>rest\n    restart<span class=\"token operator\">:</span> always\n    ports<span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> <span class=\"token number\">8082</span><span class=\"token operator\">:</span><span class=\"token number\">8082</span></code></pre></div>\n<br/>\n<p>[6] 여기까지 완료되었으면 아래와 같은 형식의 파일이 존재해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>Confluent# ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">*</span>\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">798</span> May <span class=\"token number\">10</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> Dockerfile\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">258</span> May <span class=\"token number\">10</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">45</span> docker<span class=\"token operator\">-</span>compose<span class=\"token punctuation\">.</span>yml\n\nconfig<span class=\"token operator\">:</span>\ntotal <span class=\"token number\">12</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root  <span class=\"token number\">285</span> May <span class=\"token number\">10</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties\ndrwxrwxrwx <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">10</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> <span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">10</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">44</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<p>[7] Docker Image를 Build 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker build <span class=\"token operator\">--</span>tag nasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\nStep <span class=\"token number\">15</span><span class=\"token operator\">/</span><span class=\"token number\">15</span> <span class=\"token operator\">:</span> <span class=\"token constant\">CMD</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">-</span>start <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>confluent<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token operator\">/</span>kafka<span class=\"token operator\">-</span>rest<span class=\"token punctuation\">.</span>properties\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> Running <span class=\"token keyword\">in</span> <span class=\"token number\">65</span>ca3e623728\nRemoving intermediate container <span class=\"token number\">65</span>ca3e623728\n <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token number\">661</span>f80b47926\nSuccessfully built <span class=\"token number\">661</span>f80b47926\nSuccessfully tagged nasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka<span class=\"token operator\">:</span>latest</code></pre></div>\n<br/>\n<p>[8] 이미지를 확인해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>Confluent# docker image ls\n<span class=\"token constant\">REPOSITORY</span>                 <span class=\"token constant\">TAG</span>       <span class=\"token constant\">IMAGE</span> <span class=\"token constant\">ID</span>       <span class=\"token constant\">CREATED</span>          <span class=\"token constant\">SIZE</span>\nnasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka   latest    <span class=\"token number\">661</span>f80b47926   <span class=\"token number\">22</span> seconds ago   <span class=\"token number\">1.99</span>GB\nnasa1515<span class=\"token operator\">-</span>zookeeper         latest    b2b8ec726801   <span class=\"token number\">2</span> hours ago      <span class=\"token number\">737</span>MB\nnasa1515<span class=\"token operator\">-</span>kafka             latest    <span class=\"token number\">5581</span>d8201d8b   <span class=\"token number\">3</span> hours ago      <span class=\"token number\">920</span>MBz\nubuntu                     <span class=\"token number\">20.04</span>     <span class=\"token number\">53</span>df61775e88   <span class=\"token number\">10</span> days ago      <span class=\"token number\">72.8</span>MB\nhello<span class=\"token operator\">-</span>world                latest    feb5d9fea6a5   <span class=\"token number\">7</span> months ago     <span class=\"token number\">13.3</span>kB</code></pre></div>\n<br/>\n<p>[9] Docker-compose로 Container를 동작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> Running <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>\n⠿ Container nasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka  Started                                                                                                                                             <span class=\"token number\">0.6</span>s</code></pre></div>\n<br/>\n<p>[10] 정상적으로 실행되고 있는지 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker ps\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>Confluent# docker ps\n<span class=\"token constant\">CONTAINER</span> <span class=\"token constant\">ID</span>   <span class=\"token constant\">IMAGE</span>                      <span class=\"token constant\">COMMAND</span>                  <span class=\"token constant\">CREATED</span>          <span class=\"token constant\">STATUS</span>          <span class=\"token constant\">PORTS</span>                                       <span class=\"token constant\">NAMES</span>\nd1f069f93aca   nasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka   <span class=\"token string\">\"/bin/sh -c '/usr/lo…\"</span>   <span class=\"token number\">34</span> seconds ago   Up <span class=\"token number\">33</span> seconds   <span class=\"token number\">0.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">:</span><span class=\"token number\">8082</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">8082</span><span class=\"token operator\">/</span>tcp<span class=\"token punctuation\">,</span> <span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token number\">8082</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">8082</span><span class=\"token operator\">/</span>tcp   nasa1515<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka\n<span class=\"token number\">685</span>b2f6adc7f   nasa1515<span class=\"token operator\">-</span>kafka             <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n<span class=\"token number\">86</span>ee421b76a8   nasa1515<span class=\"token operator\">-</span>kafka             <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">10</span>c8c2384fed   nasa1515<span class=\"token operator\">-</span>kafka             <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>kafka<span class=\"token operator\">-</span><span class=\"token number\">2</span>\nd3fe193618f7   nasa1515<span class=\"token operator\">-</span>zookeeper         <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token number\">021037</span>ca8443   nasa1515<span class=\"token operator\">-</span>zookeeper         <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n<span class=\"token number\">6</span>f9cd8cdd917   nasa1515<span class=\"token operator\">-</span>zookeeper         <span class=\"token string\">\"/bin/sh -c 'bash in…\"</span>   <span class=\"token number\">2</span> hours ago      Up <span class=\"token number\">2</span> hours                                                  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span></code></pre></div>\n<br/>\n<p>[11] 이제 Kafka Broker 쪽에 Topic을 생성하겠습니다.\n저는 Python을 사용하서 요청을 보내겠습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> requests <span class=\"token keyword\">import</span> json \n\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/vnd.kafka.json.v2+json'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span> \n\ndata <span class=\"token operator\">=</span> <span class=\"token string\">'{\"records\":[{\"value\":{\"id\":\"probiotics\"}}]}'</span> \nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8082/topics/nasa1515'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span> \n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">dumps</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>토픽 생성 결과</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"offsets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"partition\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"offset\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"error_code\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"key_schema_id\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"value_schema_id\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>파이썬 get request로 Topic 정보 확인하기</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> requests \n<span class=\"token keyword\">import</span> json \n\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8082/topics/nasa1515/   '</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> \n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">dumps</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nasa1515\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"configs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"compression.type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"producer\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"leader.replication.throttled.replicas\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"message.downconversion.enable\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"min.insync.replicas\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"segment.jitter.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"cleanup.policy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"flush.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9223372036854775807\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"follower.replication.throttled.replicas\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"segment.bytes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1073741824\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"retention.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"604800000\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"flush.messages\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9223372036854775807\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"message.format.version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.0-IV1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"file.delete.delay.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"60000\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"max.compaction.lag.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9223372036854775807\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"max.message.bytes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1048588\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"min.compaction.lag.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"message.timestamp.type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CreateTime\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"preallocate\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"min.cleanable.dirty.ratio\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.5\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"index.interval.bytes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4096\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"unclean.leader.election.enable\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"retention.bytes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5368709120\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"delete.retention.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"86400000\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"segment.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"604800000\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"message.timestamp.difference.max.ms\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9223372036854775807\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"segment.index.bytes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10485760\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"partitions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"partition\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"leader\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"replicas\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token string\">\"broker\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"leader\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"in_sync\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-kafka-gui-tools---kafdrop\" style=\"position:relative;\"><a href=\"#-kafka-gui-tools---kafdrop\" aria-label=\" kafka gui tools   kafdrop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌹 Kafka Gui Tools - kafdrop</h2>\n<h3 id=\"ps-2\" style=\"position:relative;\"><a href=\"#ps-2\" aria-label=\"ps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PS</h3>\n<p>아무래도 모든 Cluster들을 Docker Container로 구동하다보니깐 뭔가 일일히 확인하기가 너무 힘들다.<br>\n그래서 구글링을 하다보니 통합 GUI를 지원해주는 툴을 발견했다. 물론 얘도 도커로 띄운다..  </p>\n<br/>\n<ul>\n<li>\n<p>이 아이는 지원하는 Docker 이미지가 있습니다!!. </p>\n<p>[1] 작업 디렉토리 하나 생성합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir kafdrop </code></pre></div>\n<br/>\n<p>[2] docker-compose.yml 하나 간단하게 빨리 만들어줍시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">version<span class=\"token operator\">:</span> <span class=\"token string\">\"3.8\"</span>\nservices<span class=\"token operator\">:</span>\nkafdrop<span class=\"token operator\">:</span>\n  image<span class=\"token operator\">:</span> obsidiandynamics<span class=\"token operator\">/</span>kafdrop\n  restart<span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span>\n  ports<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> <span class=\"token string\">\"9000:9000\"</span> \n  environment<span class=\"token operator\">:</span>\n    <span class=\"token constant\">KAFKA_BROKERCONNECT</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nasa1515-kafka-1:9092,nasa1515-kafka-2:9092,nasa1515-kafka-3:9092\"</span>\n    <span class=\"token constant\">JVM_OPTS</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-Xms32M -Xmx64M\"</span> \n\nnetworks<span class=\"token operator\">:</span>\n<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n  name<span class=\"token operator\">:</span> zoo</code></pre></div>\n<br/>\n<p>[3] compose 실행해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<p>[4] 정상적으로 설치되었다면 Localhost:9000 web으로 아래와 같이 접속이 가능합니다.<br>\n확인해보면 연결되어있는 Broker와 생성되어있는 Topic등을 확인이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167564283-6c6bccc9-fa6e-4f79-be20-2dc0488e4829.png\" alt=\"image\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 이번 포스트에서 구축한 Kafka Broker Cluster의 목적은<br>\nPublic Cloud 별로 존재하는 Streaming Tools을 확인해보기 위함입니다.<br>\n생각보다 구축 포스트가 길어져서 부득이하게 포스트를 여러개로 나눠야 할 것 같습니다.<br>\n다음 포스트에서는 Ptyhon을 사용해 Kafka Producer Application을 생성하고<br>\nEvent Message를 Cloud로 보내는 방법에 대해서 정리하겠습니다.  </p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-docker-docker-compose-%EC%84%A4%EC%B9%98\">✔ Docker, Docker-compose 설치</a></li>\n<li>\n<p><a href=\"#-zookeeper-%EC%84%A4%EC%B9%98\">👍 Zookeeper 설치</a></p>\n<ul>\n<li><a href=\"#ps\">PS</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-kafka-configuration\">🐱‍🏍 Kafka Configuration</a></p>\n<ul>\n<li><a href=\"#ps-1\">PS</a></li>\n</ul>\n</li>\n<li><a href=\"#-kafka-client-%EC%84%A4%EC%A0%95-with-confluent\">🎉 Kafka Client 설정 With Confluent</a></li>\n<li>\n<p><a href=\"#-kafka-gui-tools---kafdrop\">🌹 Kafka Gui Tools - kafdrop</a></p>\n<ul>\n<li><a href=\"#ps-2\">PS</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   이번 포스트에서는 Local WSL2 Ubuntu에 Kafka Brocker를 구성한 뒤 무작위 데이터를 생성하여 각 Cloud의 Steraming Tools (aws : kinesis, gcp : pub/sub, azure : eventhub)에서 Consume하는 과정을 정리해보았습니다. 아무래도 금액적인 부분의 이슈가 발생하기에 최대한 egress Traffic이 발생되지 않게 Local에서 진행하게되었습니다.    ✔ Docker, Docker-compose 설치 Docker와 Docker-compose의 경우 아래의 공식문서를 확인하시면 자세한 설치 방법을 확인할 수 있습니다. Docker 설치 D…","frontmatter":{"date":"May 09, 2022","title":"[DATA] - Zookeeper & Kafka 구성 with WSL2, Docker","categories":"DATA CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/data-kafka-wsl/"}},"next":{"id":"501a1b19-d923-56be-afa0-39e4052fe194","html":"<p>머리말  </p>\n<p>안녕하세요 NASA1515입니다. 굉장히 오랜만에 글을 씁니다. (회사 일, 개인사정 등등 바쁜일이 참 많았습니다..)<br>\n아무튼…2022년 4월부터 그래도 주당 하나의 포스트는 작성해보자의 마인드로 블로그를 운영해보려고 합니다.<br>\n사실 추가 글을 작성하지 않아도, adsence 수익을 쌓이니깐 나태해진 이유가 크긴합니다..   </p>\n<hr>\n<br/>\n<h2 id=\"-oracle-install\" style=\"position:relative;\"><a href=\"#-oracle-install\" aria-label=\" oracle install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ ORACLE Install</h2>\n<p>서론 없이 바로 Oracle을 설치해보도록 하죠<br>\nOracle은 기본 Linux에 깔게되면 파라메터 등등 귀찮아 지는 작업들이 많기 때문데<br>\nAzure에서 제공해주는 DataBase Image를 사용하도록 하겠습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az vm create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest \\\n    <span class=\"token operator\">--</span>name oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> \\\n    <span class=\"token operator\">--</span>image Oracle<span class=\"token operator\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">0904</span><span class=\"token operator\">:</span>latest \\\n    <span class=\"token operator\">--</span>size Standard_DS2_v2 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>username nasa1515 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>password @dldnjstjr123 \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>allocation <span class=\"token keyword\">static</span> \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>dns<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>dns</code></pre></div>\n<br/>\n<br/>\n<p>Disk 증설! </p>\n<p>Azure VM의 Spec을 낮춰서 작업중이기 때문에(비용…) Oracle Data File용 디스크를 하나 증설해주겠습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az vm disk attach <span class=\"token operator\">--</span>name disk01 <span class=\"token operator\">--</span><span class=\"token keyword\">new</span> <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest <span class=\"token operator\">--</span>size<span class=\"token operator\">-</span>gb <span class=\"token number\">64</span> <span class=\"token operator\">--</span>sku StandardSSD_LRS <span class=\"token operator\">--</span>vm<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracle</code></pre></div>\n<br/>\n<br/>\n<p>외부 연결을 위한 Virtual Machine Firewall 추가.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az network nsg rule create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest \\\n    <span class=\"token operator\">--</span>nsg<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracleNSG \\\n    <span class=\"token operator\">--</span>name nasa<span class=\"token operator\">-</span>oracle \\\n    <span class=\"token operator\">--</span>protocol tcp \\\n    <span class=\"token operator\">--</span>priority <span class=\"token number\">1001</span> \\\n    <span class=\"token operator\">--</span>destination<span class=\"token operator\">-</span>port<span class=\"token operator\">-</span>range <span class=\"token number\">1521</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 VM에 접속해서 증설한 Disk Partition을 나눠줍시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># parted <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc \n# mklabel gpt\n# parted <span class=\"token operator\">-</span>a optimal <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc mkpart primary <span class=\"token number\">0</span>GB <span class=\"token number\">64</span>GB   \n# parted <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc print\n\nModel<span class=\"token operator\">:</span> Msft Virtual <span class=\"token function\">Disk</span> <span class=\"token punctuation\">(</span>scsi<span class=\"token punctuation\">)</span>\nDisk <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc<span class=\"token operator\">:</span> <span class=\"token number\">68.7</span>GB\nSector <span class=\"token function\">size</span> <span class=\"token punctuation\">(</span>logical<span class=\"token operator\">/</span>physical<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token number\">512</span>B<span class=\"token operator\">/</span><span class=\"token number\">4096</span>B\nPartition Table<span class=\"token operator\">:</span> gpt\nDisk Flags<span class=\"token operator\">:</span>\n\nNumber  Start   End     Size    File system  Name     Flags\n <span class=\"token number\">1</span>      <span class=\"token number\">1049</span>kB  <span class=\"token number\">64.0</span>GB  <span class=\"token number\">64.0</span>GB               primary\n\n\n# mkfs <span class=\"token operator\">-</span>t ext4 <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc1\n# mkdir <span class=\"token operator\">/</span>u02\n# mount <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc1 <span class=\"token operator\">/</span>u02\n# chmod <span class=\"token number\">777</span> <span class=\"token operator\">/</span>u02</code></pre></div>\n<br/>\n<br/>\n<p>fstab에 Mount Point 등록 및 hosts 파일을 수정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># echo <span class=\"token string\">\"/dev/sdb1               /u02                    ext4    defaults        0 0\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>fstab\n# echo <span class=\"token string\">\"&lt;Public IP> &lt;VMname>.eastus.cloudapp.azure.com &lt;VMname>\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts</code></pre></div>\n<br/>\n<br/>\n<p>마지막으로 VM 내부의 Firewall Port를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>zone<span class=\"token operator\">=</span><span class=\"token keyword\">public</span> <span class=\"token operator\">--</span>add<span class=\"token operator\">-</span>port<span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token operator\">/</span>tcp <span class=\"token operator\">--</span>permanent\n# firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>zone<span class=\"token operator\">=</span><span class=\"token keyword\">public</span> <span class=\"token operator\">--</span>add<span class=\"token operator\">-</span>port<span class=\"token operator\">=</span><span class=\"token number\">5502</span><span class=\"token operator\">/</span>tcp <span class=\"token operator\">--</span>permanent\n# firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>reload</code></pre></div>\n<hr>\n<br/>\n<h2 id=\"-database-생성\" style=\"position:relative;\"><a href=\"#-database-%EC%83%9D%EC%84%B1\" aria-label=\" database 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ DataBase 생성</h2>\n<p>원래는 Oracle을 기본 Linux에 설치하려면 아래와 같은 프로세스를 거쳐야 하는게 정석입니다.<br>\n<img src=\"https://user-images.githubusercontent.com/69498804/161206125-21c2cccd-bf7d-435c-8b1a-895d348b8f12.png\" alt=\"image\">\n그러나 Azure에서는 DataBase 이미지에서 이미 /u01/ 경로에 엔진과 리스너가 생성 및 설치 진행된 상태로 제공을 해줍니다!</p>\n<br/>\n그래서 Oracle User의 환경변수 파일으 살펴보면 아래와 같이 이미 엔진과 리스너의 경로가 설정되어있습니다!\n<p><img src=\"https://user-images.githubusercontent.com/69498804/161206420-448edba4-787e-471c-96d7-09f026430edf.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>자 이제 Oracle Database를 생성하기 위해서 USER를 변경하고 아래 Command를 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sudo su <span class=\"token operator\">-</span> oracle\n# lsnrctl start\n<span class=\"token constant\">LSNRCTL</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production on <span class=\"token number\">20</span><span class=\"token operator\">-</span><span class=\"token constant\">OCT</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token operator\">:</span><span class=\"token number\">58</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\n\n<span class=\"token function\">Copyright</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1991</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> Oracle<span class=\"token punctuation\">.</span>  All rights reserved<span class=\"token punctuation\">.</span>\n\nStarting <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">:</span> please wait<span class=\"token operator\">...</span>\n\n<span class=\"token constant\">TNSLSNR</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nLog messages written to <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\nListening on<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">DESCRIPTION</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nConnecting <span class=\"token function\">to</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">STATUS</span> <span class=\"token keyword\">of</span> the <span class=\"token constant\">LISTENER</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nAlias                     <span class=\"token constant\">LISTENER</span>\nVersion                   <span class=\"token constant\">TNSLSNR</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nStart Date                <span class=\"token number\">20</span><span class=\"token operator\">-</span><span class=\"token constant\">OCT</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token operator\">:</span><span class=\"token number\">58</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\nUptime                    <span class=\"token number\">0</span> days <span class=\"token number\">0</span> hr<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> min<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> sec\nTrace Level               off\nSecurity                  <span class=\"token constant\">ON</span><span class=\"token operator\">:</span> Local <span class=\"token constant\">OS</span> Authentication\n<span class=\"token constant\">SNMP</span>                      <span class=\"token constant\">OFF</span>\nListener Log File         <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\nListening Endpoints Summary<span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">(</span><span class=\"token constant\">DESCRIPTION</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nThe listener supports no services\nThe command completed successfully\n\n# mkdir <span class=\"token operator\">/</span>u02<span class=\"token operator\">/</span>oradata</code></pre></div>\n<br/>\n<br/>\n<p>위에서 말한 것처럼 저희는 이제 DBCA로 DataBase만 생성해주면 간편하게 사용할 수 있습니다. (20분 정도 소요됩니다)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">dbca <span class=\"token operator\">-</span>silent \\\n   <span class=\"token operator\">-</span>createDatabase \\\n   <span class=\"token operator\">-</span>templateName General_Purpose<span class=\"token punctuation\">.</span>dbc \\\n   <span class=\"token operator\">-</span>gdbname wonseokdb \\\n   <span class=\"token operator\">-</span>sid wonseokdb \\\n   <span class=\"token operator\">-</span>responseFile <span class=\"token constant\">NO_VALUE</span> \\\n   <span class=\"token operator\">-</span>characterSet <span class=\"token constant\">AL32UTF8</span> \\\n   <span class=\"token operator\">-</span>sysPassword @qlalfqjsgh123 \\\n   <span class=\"token operator\">-</span>systemPassword @qlalfqjsgh123 \\\n   <span class=\"token operator\">-</span>createAsContainerDatabase <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>databaseType <span class=\"token constant\">MULTIPURPOSE</span> \\\n   <span class=\"token operator\">-</span>automaticMemoryManagement <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>storageType <span class=\"token constant\">FS</span> \\\n   <span class=\"token operator\">-</span>datafileDestination <span class=\"token string\">\"/u02/oradata/\"</span> \\\n   <span class=\"token operator\">-</span>ignorePreReqs</code></pre></div>\n<br/>\n<br/>\n<p>자 데이터베이스가 생성이 완료되었으면 오라클 환경변수를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># <span class=\"token constant\">ORACLE_SID</span><span class=\"token operator\">=</span>wonseokdb<span class=\"token punctuation\">;</span> <span class=\"token keyword\">export</span> <span class=\"token constant\">ORACLE_SID</span>\n# echo <span class=\"token string\">\"export ORACLE_SID=wonseokdb\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bashrc</code></pre></div>\n<br/>\n<br/>\n<p>Oracle DataBase Init Script 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/:N/:Y/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>oratab</code></pre></div>\n<br/>\n<br/>\n<p>/etc/init.d/dbora 파일을 생성한 후 아래 내용을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token hashbang comment\">#!/bin/sh</span>\n# chkconfig<span class=\"token operator\">:</span> <span class=\"token number\">345</span> <span class=\"token number\">99</span> <span class=\"token number\">10</span>\n# Description<span class=\"token operator\">:</span> Oracle auto start<span class=\"token operator\">-</span>stop script<span class=\"token punctuation\">.</span>\n#\n# Set <span class=\"token constant\">ORA_HOME</span> to be equivalent to $<span class=\"token constant\">ORACLE_HOME</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">ORA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1\n<span class=\"token constant\">ORA_OWNER</span><span class=\"token operator\">=</span>oracle\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"$1\"</span> <span class=\"token keyword\">in</span>\n<span class=\"token string\">'start'</span><span class=\"token punctuation\">)</span>\n    # Start the Oracle databases<span class=\"token operator\">:</span>\n    # The following command assumes that the Oracle sign<span class=\"token operator\">-</span><span class=\"token keyword\">in</span>\n    # will not prompt the user <span class=\"token keyword\">for</span> any values<span class=\"token punctuation\">.</span>\n    # Remove <span class=\"token string\">\"&amp;\"</span> <span class=\"token keyword\">if</span> you don't want startup <span class=\"token keyword\">as</span> a background process<span class=\"token punctuation\">.</span>\n    su <span class=\"token operator\">-</span> $<span class=\"token constant\">ORA_OWNER</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbstart $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    touch <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lock<span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'stop'</span><span class=\"token punctuation\">)</span>\n    # Stop the Oracle databases<span class=\"token operator\">:</span>\n    # The following command assumes that the Oracle sign<span class=\"token operator\">-</span><span class=\"token keyword\">in</span>\n    # will not prompt the user <span class=\"token keyword\">for</span> any values<span class=\"token punctuation\">.</span>\n    su <span class=\"token operator\">-</span> $<span class=\"token constant\">ORA_OWNER</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbshut $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    rm <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lock<span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\nesac</code></pre></div>\n<br/>\n<br/>\n<p>권한 변경 및 Link 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># chgrp dba <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora\n# chmod <span class=\"token number\">750</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc0<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>K01dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc3<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>S99dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc5<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>S99dbora</code></pre></div>\n<br/>\n<br/>\n<p>이제 기본적인 설치는 완료되었습니다. (Reboot 한번 하구 계속 이어서 진행하겠습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># reboot</code></pre></div>\n<br/>\n<br/>\n<p>이제 Oracle의 새로운 유저를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sqlplus <span class=\"token operator\">/</span> <span class=\"token keyword\">as</span> sysdba</code></pre></div>\n<br/>\n<br/>\nLog 모드를 변환하기 위해서는 Shutdown이 필요합니다.   \n<p>일반적으로 DB는 다음과 같은 Stage로 동작을 하는데 Log Mode 변환은 Mount 단계에서 가능합니다.   </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/161213428-c0783fac-2aba-4951-9d35-02870df3a63f.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>때문에 현재 실행 DB를 shutdown -> Mount Mode 변환 -> Archivelog Mode 변환을 진행하면 됩니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> shutdown immediate\n<span class=\"token punctuation\">;</span>\n\nDatabase closed<span class=\"token punctuation\">.</span>\nDatabase dismounted<span class=\"token punctuation\">.</span>\n\n\n<span class=\"token constant\">ORACLE</span> instance shut down<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">SQL</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> startup mount\n<span class=\"token constant\">ORACLE</span> instance started<span class=\"token punctuation\">.</span>\n\nTotal System Global Area <span class=\"token number\">2432695144</span> bytes\nFixed Size                  <span class=\"token number\">8899432</span> bytes\nVariable Size             <span class=\"token number\">536870912</span> bytes\nDatabase Buffers         <span class=\"token number\">1879048192</span> bytes\nRedo Buffers                <span class=\"token number\">7876608</span> bytes\nDatabase mounted<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database archivelog<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database open<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>아카이브 로그 모드가 정상적으로 설정되었는지 확인해보면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> archive log list<span class=\"token punctuation\">;</span>\nDatabase log mode              Archive Mode\nAutomatic archival             Enabled\nArchive destination            <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>arch\nOldest online log sequence     <span class=\"token number\">4</span>\nNext log sequence to archive   <span class=\"token number\">6</span>\nCurrent log sequence           <span class=\"token number\">6</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span></code></pre></div>\n<br/>\n<br/>\n<p>이제 사용할 유저와 권한을 설정하고, Logminer에 필요한 supplemental을 설정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> create user wonseok identified by test<span class=\"token punctuation\">;</span>\n\nUser created<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> grant connect<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">,</span> dba to wonseok<span class=\"token punctuation\">;</span>\n\nGrant succeeded<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database add supplemental log data<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">ALTER</span> <span class=\"token constant\">DATABASE</span> <span class=\"token constant\">ADD</span> <span class=\"token constant\">SUPPLEMENTAL</span> <span class=\"token constant\">LOG</span> <span class=\"token constant\">DATA</span> <span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">)</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">--</span> Supplemental이 감지하는 DataBase or Table 설정<span class=\"token punctuation\">.</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE_CATALOG_ROLE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">CONNECT</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">CREATE</span> <span class=\"token constant\">SESSION</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">DATABASE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">ARCHIVED_LOG</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">LOGMNR_CONTENTS</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">LOGMNR_LOGS</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DBMS_LOGMNR</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DBMS_LOGMNR_D</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ANY</span> <span class=\"token constant\">TRANSACTION</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ANY</span> <span class=\"token constant\">TABLE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">LOGMINING</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\nGrant succeeded<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>권한까지 정상적으로 선언했으면 이제 User를 바꿔줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> conn wonseok<span class=\"token punctuation\">;</span>\nEnter password<span class=\"token operator\">:</span>\nConnected<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>각자 TABLE을 생성하시면 됩니다. 저는 간단하게 테이블을 하나 만들고 데이터를 넣겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">CREATE</span> <span class=\"token constant\">TABLE</span> <span class=\"token function\">regions</span>\n  <span class=\"token punctuation\">(</span>\n    region_id <span class=\"token constant\">NUMBER</span> <span class=\"token constant\">GENERATED</span> <span class=\"token constant\">BY</span> <span class=\"token constant\">DEFAULT</span> <span class=\"token constant\">AS</span> <span class=\"token constant\">IDENTITY</span>\n    <span class=\"token constant\">START</span> <span class=\"token constant\">WITH</span> <span class=\"token number\">5</span> <span class=\"token constant\">PRIMARY</span> <span class=\"token constant\">KEY</span><span class=\"token punctuation\">,</span>\n    region_name <span class=\"token constant\">VARCHAR2</span><span class=\"token punctuation\">(</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">)</span> <span class=\"token constant\">NOT</span> <span class=\"token constant\">NULL</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">REM</span> <span class=\"token constant\">INSERTING</span> into <span class=\"token constant\">REGIONS</span>\n<span class=\"token constant\">SET</span> <span class=\"token constant\">DEFINE</span> <span class=\"token constant\">OFF</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Europe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Americas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Asia'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Middle East and Africa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<br/>\n<p>자 이제 로그가 쌓였는지 확인을 해보면 ARCH 파일이 없습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>root@oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>\ntotal <span class=\"token number\">24</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">3079</span> May <span class=\"token number\">14</span>  <span class=\"token number\">2015</span> init<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall   <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">23</span> lkWONSEOKDB\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall   <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> lkWONSEOKD\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">2048</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">25</span> orapwwonseokdb\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall  <span class=\"token number\">972</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall  <span class=\"token number\">156</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">16</span> <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">3584</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> spfilewonseokdb<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>rw<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">1544</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> hc_wonseokdb<span class=\"token punctuation\">.</span>dat</code></pre></div>\n<br/>\n<br/>\n<p>왜냐하면 기본적으로 LogMiner는 리두로그가 가득차지 않는 이상은 아카이브 로그를 사용하지 않기 때문입니다.<br>\n그럼 아카이브 로그를 쌓기 위해서는 아카이브 로그로 쌓도록 로그 스위칭을 시켜주어야 합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">ALTER</span> <span class=\"token constant\">SYSTEM</span> <span class=\"token constant\">SWITCH</span> <span class=\"token constant\">LOGFILE</span><span class=\"token punctuation\">;</span>\n\nSystem altered<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 로그파일의 경로를 다시 확인해보면, 정상적으로 ARCH로그가 쌓여 있는것을 확인 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>root@oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>\ntotal <span class=\"token number\">10608</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">3079</span> May <span class=\"token number\">14</span>  <span class=\"token number\">2015</span> init<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall       <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">23</span> lkWONSEOKDB\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall       <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> lkWONSEOKD\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">2048</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">25</span> orapwwonseokdb\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall      <span class=\"token number\">972</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">3584</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> spfilewonseokdb<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>rw<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">1544</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> hc_wonseokdb<span class=\"token punctuation\">.</span>dat\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall      <span class=\"token number\">200</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">10835456</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">29</span> arch1_6_1100845537<span class=\"token punctuation\">.</span>dbf <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span></code></pre></div>\n<h1 id=\"작성중\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%84%B1%EC%A4%91\" aria-label=\"작성중 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작성중…</h1>\n<hr>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-oracle-install\">✔ ORACLE Install</a></li>\n<li><a href=\"#-database-%EC%83%9D%EC%84%B1\">✌ DataBase 생성</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 01, 2022","title":"[AZURE] Oracle 19c 설치, LogMiner, CDC 설정하기 From Azure VM","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-oracle19/"}},"prev":{"id":"8f39d1ff-cc4e-5501-8263-c1575ea2622e","html":"<h2 id=\"-about-this-post\" style=\"position:relative;\"><a href=\"#-about-this-post\" aria-label=\" about this post permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😎 About This Post</h2>\n<p>이번 포스트에서는 Python을 사용하여 간단하게 문자열을 만드는 Producer를 생성한 뒤에<br>\nKafka-Connector를 이용해서 각 Cloud의 Steraming Tools 들을 Endpoint(Broker)로 Message를 쌓아보겠습니다.  </p>\n<hr>\n<h2 id=\"-kafka-producer-application\" style=\"position:relative;\"><a href=\"#-kafka-producer-application\" aria-label=\" kafka producer application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Kafka Producer Application</h2>\n<p>Kafka는 기본적으로 Clinet API를 가지고 있습니다,<br>\n때문에 이를 사용해서 Producer, Consumer의 Application 개발이 가능합니다.<br>\nthird party Clinet를 사용 할 수 있는데 java, python, go 등이 있습니다.<br>\n가장 대표적으로 사용하는 python-kafka Clinet가 있지만 이번에는 새로운 실습 겸<br>\n요즘 새롭게 떠오르고 있는 python-confluent-kafka를 사용해보도록 하겠습니다.  </p>\n<br/>\n<ul>\n<li>\n<p>Install Confluent-kafka (Conda 환경에서 진행하였습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ conda install <span class=\"token operator\">-</span>c conda<span class=\"token operator\">-</span>forge python<span class=\"token operator\">-</span>confluent<span class=\"token operator\">-</span>kafka</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-azure-eventhub-connection\" style=\"position:relative;\"><a href=\"#-azure-eventhub-connection\" aria-label=\" azure eventhub connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😍 Azure EventHub Connection</h2>\n<p>우선 첫번째 순서로는 가장 Kafka Connector에 대한 호환이 잘 운영되고 있는 Azure EventHub 부터 진행하도록 하겠습니다.<br>\nAzure는 엄청 간단하게 Producer를 만들 때 Config에 bootstrap 쪽의 설정만 EventHub의 Endpoint 쪽으로만 설정해주면 됩니다. <a href=\"https://github.com/Azure/azure-event-hubs-for-kafka/tree/master/quickstart/python\">참고 Github</a></p>\n<br/>\n<ul>\n<li>\n<p>Create Azure EventHub Name SPACE &#x26; Endpoint </p>\n<p><a href=\"https://docs.microsoft.com/ko-kr/azure/event-hubs/event-hubs-create\">공식문서</a></p>\n<br/>\n</li>\n<li>\n<p>위의 공식문서 순서대로 NameSpace를 정상적으로 생성했다면, FQDN Endpoint를 생성합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167967135-ca1c2c53-68ad-435f-9179-a7b423af0c82.png\" alt=\"image\">\n[Event Hub Namespace] - [공유 엑세스 정책] - [추가]</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후에 생성된 SAS Key의 연결 문자열을 확인 및 복사해두면 됩니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167967340-1614f477-1bee-4a9f-86ae-ecf7f9e1a4b8.png\" alt=\"image\">\n[Kafka Connector에서 연결될 때 saal Passwoed Endpoint로 사용 됩니다.]</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"producer-application-code-test\" style=\"position:relative;\"><a href=\"#producer-application-code-test\" aria-label=\"producer application code test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer Application Code Test</h3>\n<ul>\n<li>\n<p>Used Producer Source CODE [Message Publish]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">from confluent_kafka <span class=\"token keyword\">import</span> Producer\n<span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n      sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: %s &lt;topic>\\n'</span> <span class=\"token operator\">%</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      sys<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  topic <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  conf <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'bootstrap.servers'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;EventHub Namespace Name>.servicebus.windows.net:9093'</span><span class=\"token punctuation\">,</span> # 여기에 생성한 EventHub의 NameSpace으로 변환하시면 됩니다<span class=\"token punctuation\">.</span>\n      <span class=\"token string\">'security.protocol'</span><span class=\"token operator\">:</span> <span class=\"token string\">'SASL_SSL'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.mechanism'</span><span class=\"token operator\">:</span> <span class=\"token string\">'PLAIN'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.username'</span><span class=\"token operator\">:</span> <span class=\"token string\">'$ConnectionString'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.password'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;SAS Connection Endpoint URL>'</span><span class=\"token punctuation\">,</span> # 여기에 바로 위에서 발급받은 <span class=\"token constant\">SAS</span> EndPoint를 입력합니다<span class=\"token punctuation\">.</span>\n      <span class=\"token string\">'client.id'</span><span class=\"token operator\">:</span> <span class=\"token string\">'nasa1515-producer'</span>\n  <span class=\"token punctuation\">}</span>\n  # Create Producer instance\n  p <span class=\"token operator\">=</span> <span class=\"token function\">Producer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>conf<span class=\"token punctuation\">)</span>\n\n\n  # fail check def\n  def <span class=\"token function\">delivery_callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> err<span class=\"token operator\">:</span>\n          sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% Message failed delivery: %s\\n'</span> <span class=\"token operator\">%</span> err<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n          sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% Message delivered to %s [%d] @ %o\\n'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">topic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  # Write <span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">100</span> to topic\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>   # 저는 Range로 <span class=\"token number\">0</span><span class=\"token operator\">~</span><span class=\"token number\">1000</span> 까지의 숫자로 문자열을 생성해서 게시 했습니다<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n          p<span class=\"token punctuation\">.</span><span class=\"token function\">produce</span><span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">,</span> <span class=\"token string\">'Kafka_data_nasa1515-'</span> <span class=\"token operator\">+</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>delivery_callback<span class=\"token punctuation\">)</span>\n      except BufferError <span class=\"token keyword\">as</span> e<span class=\"token operator\">:</span>\n          sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% Local producer queue is full (%d messages awaiting delivery): try again\\n'</span> <span class=\"token operator\">%</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      p<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  # Wait until all messages have been delivered\n  sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% Waiting for %d deliveries\\n'</span> <span class=\"token operator\">%</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  p<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Message Publish Code Test</p>\n<p>위 Python Script의 작동 방법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ python3 producer<span class=\"token punctuation\">.</span>py <span class=\"token operator\">&lt;</span>Topic Name<span class=\"token operator\">></span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\npython3 <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>producer<span class=\"token operator\">/</span>Azure<span class=\"token operator\">/</span>producer<span class=\"token punctuation\">.</span>py nasatopic <span class=\"token operator\">-</span><span class=\"token operator\">></span> 생성 할 Topic Name</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Code Result [Success]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span>kafka<span class=\"token punctuation\">)</span> nasa1515@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ python3 <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>producer<span class=\"token operator\">/</span>Azure<span class=\"token operator\">/</span>producer<span class=\"token punctuation\">.</span>py nasatopic\n<span class=\"token operator\">%</span> Waiting <span class=\"token keyword\">for</span> <span class=\"token number\">1000</span> deliveries\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">0</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">1</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">2</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">3</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">4</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">5</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">6</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">7</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">10</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">11</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">12</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">13</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">14</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">15</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">16</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">17</span>\n<span class=\"token operator\">%</span> Message delivered to nasatopic <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> @ <span class=\"token number\">20</span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>EventHub Topic[Enterty] Check</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167968241-150c6c2c-c781-4742-9185-d2f8b399dd29.png\" alt=\"image\">\n[위 그림과 같이 명시한 Topic Name으로 자동 생성됩니다.]</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>EventHub Traffic Log Check</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167968491-e7a417c0-aa18-4095-838b-a8d24b315b48.png\" alt=\"image\">\n[Source Code 동작 시점부터 EventHub에 Traffic이 발생하고, Message도 정확히 1K가 쌓여있습니다.]</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"consumer-application-code-test\" style=\"position:relative;\"><a href=\"#consumer-application-code-test\" aria-label=\"consumer application code test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer Application CODE Test</h3>\n<br/>\n<ul>\n<li>\n<p>Used Consumer Source CODE [Message Consume]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">from confluent_kafka <span class=\"token keyword\">import</span> Consumer<span class=\"token punctuation\">,</span> KafkaException<span class=\"token punctuation\">,</span> KafkaError\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> getopt\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pandas\nfrom pprint <span class=\"token keyword\">import</span> pformat\n\n\ndef <span class=\"token function\">stats_cb</span><span class=\"token punctuation\">(</span>stats_json_str<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  stats_json <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">loads</span><span class=\"token punctuation\">(</span>stats_json_str<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nKAFKA Stats: {}\\n'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token function\">pformat</span><span class=\"token punctuation\">(</span>stats_json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\ndef <span class=\"token function\">print_usage_and_exit</span><span class=\"token punctuation\">(</span>program_name<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usage: %s [options..] &lt;consumer-group> &lt;topic1> &lt;topic2> ..\\n'</span> <span class=\"token operator\">%</span> program_name<span class=\"token punctuation\">)</span>\n  options <span class=\"token operator\">=</span> <span class=\"token string\">''</span>'\nOptions<span class=\"token operator\">:</span>\n<span class=\"token operator\">-</span><span class=\"token constant\">T</span> <span class=\"token operator\">&lt;</span>intvl<span class=\"token operator\">></span>   Enable client statistics at specified <span class=\"token function\">interval</span> <span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">)</span>\n<span class=\"token string\">''</span>'\n  sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  sys<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token operator\">:</span>\n  optlist<span class=\"token punctuation\">,</span> argv <span class=\"token operator\">=</span> getopt<span class=\"token punctuation\">.</span><span class=\"token function\">getopt</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'T:'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">print_usage_and_exit</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  group <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  topics <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n  conf <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'bootstrap.servers'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;Your NameSpace Name>.servicebus.windows.net:9093'</span><span class=\"token punctuation\">,</span> # NameSpace Name 입력해줍니다<span class=\"token punctuation\">.</span>\n      <span class=\"token string\">'security.protocol'</span><span class=\"token operator\">:</span> <span class=\"token string\">'SASL_SSL'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.mechanism'</span><span class=\"token operator\">:</span> <span class=\"token string\">'PLAIN'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.username'</span><span class=\"token operator\">:</span> <span class=\"token string\">'$ConnectionString'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'sasl.password'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;SAS Token Endpoint URL>'</span><span class=\"token punctuation\">,</span> # Endpoint Url 입력\n      <span class=\"token string\">'group.id'</span><span class=\"token operator\">:</span> group<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'client.id'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;Cumstom>'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'request.timeout.ms'</span><span class=\"token operator\">:</span> <span class=\"token number\">60000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'session.timeout.ms'</span><span class=\"token operator\">:</span> <span class=\"token number\">60000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'default.topic.config'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'auto.offset.reset'</span><span class=\"token operator\">:</span> <span class=\"token string\">'smallest'</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  # Check to see <span class=\"token keyword\">if</span> <span class=\"token operator\">-</span><span class=\"token constant\">T</span> option exists\n  <span class=\"token keyword\">for</span> opt <span class=\"token keyword\">in</span> optlist<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> opt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'-T'</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">continue</span>\n      <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n          intval <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>opt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      except ValueError<span class=\"token operator\">:</span>\n          sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid option value for -T: %s\\n\"</span> <span class=\"token operator\">%</span> opt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          sys<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> intval <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n          sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-T option value needs to be larger than zero: %s\\n\"</span> <span class=\"token operator\">%</span> opt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          sys<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n      conf<span class=\"token punctuation\">[</span><span class=\"token string\">'stats_cb'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats_cb\n      conf<span class=\"token punctuation\">[</span><span class=\"token string\">'statistics.interval.ms'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>opt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  # Create logger <span class=\"token keyword\">for</span> <span class=\"token function\">consumer</span> <span class=\"token punctuation\">(</span>logs will be emitted when <span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> is called<span class=\"token punctuation\">)</span>\n  logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'consumer'</span><span class=\"token punctuation\">)</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span><span class=\"token constant\">DEBUG</span><span class=\"token punctuation\">)</span>\n  handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span><span class=\"token function\">StreamHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  handler<span class=\"token punctuation\">.</span><span class=\"token function\">setFormatter</span><span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span><span class=\"token function\">Formatter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%(asctime)-15s %(levelname)-8s %(message)s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  logger<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\n  # Create Consumer instance\n  # Hint<span class=\"token operator\">:</span> <span class=\"token keyword\">try</span> debug<span class=\"token operator\">=</span><span class=\"token string\">'fetch'</span> to generate some log messages\n  c <span class=\"token operator\">=</span> <span class=\"token function\">Consumer</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span> logger<span class=\"token operator\">=</span>logger<span class=\"token punctuation\">)</span>\n\n  def <span class=\"token function\">print_assignment</span><span class=\"token punctuation\">(</span>consumer<span class=\"token punctuation\">,</span> partitions<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Assignment:'</span><span class=\"token punctuation\">,</span> partitions<span class=\"token punctuation\">)</span>\n\n  # Subscribe to topics\n  c<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>topics<span class=\"token punctuation\">,</span> on_assign<span class=\"token operator\">=</span>print_assignment<span class=\"token punctuation\">)</span>\n\n  # Read messages from Kafka<span class=\"token punctuation\">,</span> print to stdout\n  <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">while</span> True<span class=\"token operator\">:</span>\n          msg <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> msg is None<span class=\"token operator\">:</span>\n              <span class=\"token keyword\">continue</span>\n          <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n              # Error or event\n              <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> KafkaError<span class=\"token punctuation\">.</span>_PARTITION_EOF<span class=\"token operator\">:</span>\n                  # End <span class=\"token keyword\">of</span> partition event\n                  sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% %s [%d] reached end at offset %d\\n'</span> <span class=\"token operator\">%</span>\n                                   <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">topic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n                  # Error\n                  raise <span class=\"token function\">KafkaException</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n              # Proper message\n              <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  except KeyboardInterrupt<span class=\"token operator\">:</span>\n      sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%% Aborted by user\\n'</span><span class=\"token punctuation\">)</span>\n\n  finally<span class=\"token operator\">:</span>\n      # Close down consumer to commit final offsets<span class=\"token punctuation\">.</span>\n      c<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Message Consumer Code Test</p>\n<p>위 Python Script의 작동 방법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ python3 producer<span class=\"token punctuation\">.</span>py <span class=\"token operator\">&lt;</span>Comsumer_GROUP_ID<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">TOPIC_NAME_1</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">TOPIC_NAME_2</span><span class=\"token operator\">></span> <span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span>\npython3 <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>producer<span class=\"token operator\">/</span>Azure<span class=\"token operator\">/</span>Consum<span class=\"token punctuation\">.</span>py $Default nasatopic nasatopic</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Code Result [Success]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span><span class=\"token number\">12</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token number\">11</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span><span class=\"token number\">390</span> <span class=\"token constant\">WARNING</span>  <span class=\"token constant\">CONFWARN</span> <span class=\"token punctuation\">[</span>nasa1515<span class=\"token operator\">-</span>consumer#consumer<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>thrd<span class=\"token operator\">:</span>app<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> Configuration property request<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>ms is a producer property and will be ignored by <span class=\"token keyword\">this</span> consumer instance\nAssignment<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>TopicPartition<span class=\"token punctuation\">{</span>topic<span class=\"token operator\">=</span>nasatopic<span class=\"token punctuation\">,</span>partition<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>offset<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>error<span class=\"token operator\">=</span>None<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-0'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-1'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-2'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-3'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-4'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-5'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-6'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-7'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-8'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-9'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-10'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-11'</span>\nb<span class=\"token string\">'Kafka_data_nasa1515-12'</span>\n<span class=\"token operator\">...</span>\n<span class=\"token operator\">...</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>EventHub Outbound Traffic Check</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/167972747-18419a68-3a28-42c5-a737-5f52e447a97d.png\" alt=\"image\">\n[Consumer Source Code 동작 시점부터 EventHub에 OutBound Traffic이 발생하고, Oout Message도 정확히 1K가 쌓여있습니다.]</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-gcp-pubsub-connection\" style=\"position:relative;\"><a href=\"#-gcp-pubsub-connection\" aria-label=\" gcp pubsub connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😁 GCP Pub/Sub Connection</h2>\n<h3 id=\"producer-application-code-test-1\" style=\"position:relative;\"><a href=\"#producer-application-code-test-1\" aria-label=\"producer application code test 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer Application Code Test</h3>\n<ul>\n<li>\n<p>Used Producer Source CODE [Message Publish]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> json\nfrom google<span class=\"token punctuation\">.</span>auth <span class=\"token keyword\">import</span> jwt\nfrom concurrent <span class=\"token keyword\">import</span> futures\nfrom google<span class=\"token punctuation\">.</span>cloud <span class=\"token keyword\">import</span> pubsub_v1\n\nservice_account_info <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/nasa1515/docker/producer/GCP/data-cloocus-ffd800735dd1.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncredentials_pub <span class=\"token operator\">=</span> <span class=\"token string\">\"https://pubsub.googleapis.com/google.pubsub.v1.Publisher\"</span>\n\ncredentials <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>Credentials<span class=\"token punctuation\">.</span><span class=\"token function\">from_service_account_info</span><span class=\"token punctuation\">(</span>\n  service_account_info<span class=\"token punctuation\">,</span> audience<span class=\"token operator\">=</span>credentials_pub\n<span class=\"token punctuation\">)</span>\n\npublisher <span class=\"token operator\">=</span> pubsub_v1<span class=\"token punctuation\">.</span><span class=\"token function\">PublisherClient</span><span class=\"token punctuation\">(</span>credentials<span class=\"token operator\">=</span>credentials<span class=\"token punctuation\">)</span>\n\n\nproject_id <span class=\"token operator\">=</span> <span class=\"token string\">\"data-cloocus\"</span>\ntopic_id <span class=\"token operator\">=</span> <span class=\"token string\">\"pubsub_nasa1515\"</span>\n\ntopic_path <span class=\"token operator\">=</span> publisher<span class=\"token punctuation\">.</span><span class=\"token function\">topic_path</span><span class=\"token punctuation\">(</span>project_id<span class=\"token punctuation\">,</span> topic_id<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  data_str <span class=\"token operator\">=</span> f<span class=\"token string\">\"nasa1515_Pubsub_Massage : {n}\"</span>\n  data <span class=\"token operator\">=</span> data_str<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n  future <span class=\"token operator\">=</span> publisher<span class=\"token punctuation\">.</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>topic_path<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>future<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token string\">\"Published messages to {topic_path}.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<h3 id=\"consumer-application-code-test-1\" style=\"position:relative;\"><a href=\"#consumer-application-code-test-1\" aria-label=\"consumer application code test 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer Application CODE Test</h3>\n<br/>\n<ul>\n<li>\n<p>Used Consumer Source CODE [Message Consume]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> json\nfrom google<span class=\"token punctuation\">.</span>auth <span class=\"token keyword\">import</span> jwt\nfrom google<span class=\"token punctuation\">.</span>cloud <span class=\"token keyword\">import</span> pubsub_v1\n\n\nservice_account_info <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/nasa1515/docker/producer/GCP/data-cloocus-ffd800735dd1.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncredentials_sub <span class=\"token operator\">=</span> <span class=\"token string\">\"https://pubsub.googleapis.com/google.pubsub.v1.Subscriber\"</span>\n\ncredentials <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>Credentials<span class=\"token punctuation\">.</span><span class=\"token function\">from_service_account_info</span><span class=\"token punctuation\">(</span>\n  service_account_info<span class=\"token punctuation\">,</span> audience<span class=\"token operator\">=</span>credentials_sub\n<span class=\"token punctuation\">)</span>\n\nsubscriber <span class=\"token operator\">=</span> pubsub_v1<span class=\"token punctuation\">.</span><span class=\"token function\">SubscriberClient</span><span class=\"token punctuation\">(</span>credentials<span class=\"token operator\">=</span>credentials<span class=\"token punctuation\">)</span>\n\n\nproject_id <span class=\"token operator\">=</span> <span class=\"token string\">\"data-cloocus\"</span>\ntopic_id <span class=\"token operator\">=</span> <span class=\"token string\">\"pubsub_nasa1515\"</span>\nsubscription <span class=\"token operator\">=</span> <span class=\"token string\">\"pubsub_nasa1515-sub\"</span>\ntopic_name <span class=\"token operator\">=</span> f<span class=\"token string\">'projects/{project_id}/topics/{topic_id}'</span>\nsubscription_name <span class=\"token operator\">=</span> f<span class=\"token string\">'projects/{project_id}/subscriptions/{subscription}'</span>\n\n\ndef <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  message<span class=\"token punctuation\">.</span><span class=\"token function\">ack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">with</span> pubsub_v1<span class=\"token punctuation\">.</span><span class=\"token function\">SubscriberClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> subscriber<span class=\"token operator\">:</span>\n  <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n      response <span class=\"token operator\">=</span> subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">get_subscription</span><span class=\"token punctuation\">(</span>subscription<span class=\"token operator\">=</span>subscription_name<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n  except<span class=\"token operator\">:</span>\n      subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">create_subscription</span><span class=\"token punctuation\">(</span>\n      name<span class=\"token operator\">=</span>subscription_name<span class=\"token punctuation\">,</span> topic<span class=\"token operator\">=</span>topic_name<span class=\"token punctuation\">)</span>\n      future <span class=\"token operator\">=</span> subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>subscription_name<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n      future <span class=\"token operator\">=</span> subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>subscription_name<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n          future<span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      except KeyboardInterrupt<span class=\"token operator\">:</span>\n          future<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 이번 포스트에서 구축한 Kafka Broker Cluster의 목적은<br>\nPublic Cloud 별로 존재하는 Streaming Tools을 확인해보기 위함입니다.<br>\n생각보다 구축 포스트가 길어져서 부득이하게 포스트를 여러개로 나눠야 할 것 같습니다.<br>\n다음 포스트에서는 Ptyhon을 사용해 Kafka Producer Application을 생성하고<br>\nEvent Message를 Cloud로 보내는 방법에 대해서 정리하겠습니다.  </p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-about-this-post\">😎 About This Post</a></li>\n<li><a href=\"#-kafka-producer-application\">✔ Kafka Producer Application</a></li>\n<li>\n<p><a href=\"#-azure-eventhub-connection\">😍 Azure EventHub Connection</a></p>\n<ul>\n<li><a href=\"#producer-application-code-test\">Producer Application Code Test</a></li>\n<li><a href=\"#consumer-application-code-test\">Consumer Application CODE Test</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-gcp-pubsub-connection\">😁 GCP Pub/Sub Connection</a></p>\n<ul>\n<li><a href=\"#producer-application-code-test-1\">Producer Application Code Test</a></li>\n<li><a href=\"#consumer-application-code-test-1\">Consumer Application CODE Test</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 11, 2022","title":"[DATA] - Kafka:Confluent to Cloud With Python","categories":"DATA CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/data-kafka-python/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/data-kafka-wsl/","nextSlug":"/azure-oracle19/","prevSlug":"/data-kafka-python/"}},"staticQueryHashes":["1073350324","2938748437"]}