{"componentChunkName":"component---src-templates-blog-template-js","path":"/data-kafka-wsl/","result":{"data":{"cur":{"id":"7ef64a62-2add-5bab-b47b-26a1bed94bf8","html":"<p>머리말  </p>\n<p>이번 포스트에서는 Local WSL2 Ubuntu에 Kafka Brocker를 구성한 뒤 무작위 데이터를 생성하여 각 Cloud의 Steraming Tools<br>\n(aws : kinesis, gcp : pub/sub, azure : eventhub)에서 Consume하는 과정을 정리해보았습니다.<br>\n아무래도 금액적인 부분의 이슈가 발생하기에 최대한 egress Traffic이 발생되지 않게 Local에서 진행하게되었습니다.   </p>\n<hr>\n<h2 id=\"-docker-docker-compose-설치\" style=\"position:relative;\"><a href=\"#-docker-docker-compose-%EC%84%A4%EC%B9%98\" aria-label=\" docker docker compose 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Docker, Docker-compose 설치</h2>\n<p>Docker와 Docker-compose의 경우 아래의 공식문서를 확인하시면 자세한 설치 방법을 확인할 수 있습니다.<br>\n<a href=\"https://docs.docker.com/engine/install/ubuntu/\">Docker 설치</a><br>\n<a href=\"https://docs.docker.com/compose/install/\">Docker-Compose 설치</a>\n<br/></p>\n<ul>\n<li>\n<p>Docker 설치부터 진행합니다, 우선적으로 WSL 남겨져있는 잔재를 지워줍니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">삭제\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> remove docker docker<span class=\"token operator\">-</span>engine docker<span class=\"token punctuation\">.</span>io containerd runc</code></pre></div>\n<br/>\n</li>\n<li>\n<p>이 후 Pakage index를 Update 한 뒤 관련 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install \\\n  ca<span class=\"token operator\">-</span>certificates \\\n  curl \\\n  gnupg \\\n  lsb<span class=\"token operator\">-</span>release</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>설치가 완료되었으면, Docker의 공식 GPG Key를 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$  curl <span class=\"token operator\">-</span>fsSL https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu<span class=\"token operator\">/</span>gpg <span class=\"token operator\">|</span> sudo gpg <span class=\"token operator\">--</span>dearmor <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>keyrings<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>archive<span class=\"token operator\">-</span>keyring<span class=\"token punctuation\">.</span>gpg</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>아래 명령어를 사용하여 Pakage Repo를 추가해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ echo \\\n<span class=\"token string\">\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\"</span> <span class=\"token operator\">|</span> sudo tee <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>apt<span class=\"token operator\">/</span>sources<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>docker<span class=\"token punctuation\">.</span>list <span class=\"token operator\">></span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Docker Engine을 설치합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update\n$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install docker<span class=\"token operator\">-</span>ce docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli containerd<span class=\"token punctuation\">.</span>io docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>plugin</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>현재 Repo에서 사용 가능한 버전을 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ apt<span class=\"token operator\">-</span>cache madison docker<span class=\"token operator\">-</span>ce\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.15</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.14</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.13</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.12</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.11</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages\ndocker<span class=\"token operator\">-</span>ce <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token number\">20.10</span><span class=\"token number\">.10</span><span class=\"token operator\">~</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">~</span>ubuntu<span class=\"token operator\">-</span>focal <span class=\"token operator\">|</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>ubuntu focal<span class=\"token operator\">/</span>stable amd64 Packages</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Version을 확인했다면 아래 명령어에 설치하고 싶은 Version을 넣어서 UPDATE 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">VERSION_STRING</span><span class=\"token operator\">></span> docker<span class=\"token operator\">-</span>ce<span class=\"token operator\">-</span>cli<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">VERSION_STRING</span><span class=\"token operator\">></span> containerd<span class=\"token punctuation\">.</span>io docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>plugin</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>시험삼아 Hello-world Pod를 띄워보려 했지만 아래와 같은 error Message에 직면했습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># docker run hello<span class=\"token operator\">-</span>world\n  docker<span class=\"token operator\">:</span> Cannot connect to the Docker daemon at unix<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//var/run/docker.sock. Is the docker daemon running?.</span>\n  See <span class=\"token string\">'docker run --help'</span><span class=\"token punctuation\">.</span>\n\n$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># \n  root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># systemctl start docker\n  System has not been booted <span class=\"token keyword\">with</span> systemd <span class=\"token keyword\">as</span> init <span class=\"token function\">system</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">PID</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> Can't operate<span class=\"token punctuation\">.</span>\n  Failed to connect to bus<span class=\"token operator\">:</span> Host is down</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>확인해보니 WSL에서는 기존 Linux의 INIT과는 다르게 따로 설정을 진행해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ sudo apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install cgroupfs<span class=\"token operator\">-</span>mount\n$ sudo cgroupfs<span class=\"token operator\">-</span>mount\n$ sudo service docker start</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 정상적으로 Hello World Pod가 실행됨을 확인했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">~</span># docker run hello<span class=\"token operator\">-</span>world\n  Unable to find image <span class=\"token string\">'hello-world:latest'</span> locally\n\n\n  latest<span class=\"token operator\">:</span> Pulling from library<span class=\"token operator\">/</span>hello<span class=\"token operator\">-</span>world\n  <span class=\"token number\">2</span>db29710123e<span class=\"token operator\">:</span> Pull complete \n  Digest<span class=\"token operator\">:</span> sha256<span class=\"token operator\">:</span><span class=\"token number\">10</span>d7d58d5ebd2a652f4d93fdd86da8f265f5318c6a73cc5b6a9798ff6d2b2e67\n  Status<span class=\"token operator\">:</span> Downloaded newer image <span class=\"token keyword\">for</span> hello<span class=\"token operator\">-</span>world<span class=\"token operator\">:</span>latest\n\n  Hello from Docker<span class=\"token operator\">!</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>추가적으로 Compose도 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ curl <span class=\"token operator\">-</span><span class=\"token constant\">SL</span> https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>docker<span class=\"token operator\">/</span>compose<span class=\"token operator\">/</span>releases<span class=\"token operator\">/</span>download<span class=\"token operator\">/</span>v2<span class=\"token punctuation\">.</span><span class=\"token number\">5.0</span><span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose<span class=\"token operator\">-</span>linux<span class=\"token operator\">-</span>x86_64 <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n$ sudo chmod <span class=\"token operator\">+</span>x <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n$ sudo ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\n\n# Version 확인\n$ docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">--</span>version\n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker<span class=\"token operator\">-</span>compose <span class=\"token operator\">--</span>version\nDocker Compose version v2<span class=\"token punctuation\">.</span><span class=\"token number\">5.0</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-kafka-설치\" style=\"position:relative;\"><a href=\"#-kafka-%EC%84%A4%EC%B9%98\" aria-label=\" kafka 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 Kafka 설치</h2>\n<h3 id=\"ps\" style=\"position:relative;\"><a href=\"#ps\" aria-label=\"ps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PS</h3>\n<p>Kafka는 Broker에서 Topic의 Metadata를 저장하기 위해 Zookeeper를 사용합니다.<br>\n일반적으로 Zookeeper를 Standalone으로 구성할 수도 있지만, 일반적인 Hadoop과 동일하게 실제 운영에서는 잘 찾아보기 힘듭니다.<br>\n때문에 Zookeeper를 Cluster로 구성하고, HA를 확보한 것을 Zookeeper Ensemble 이라고 합니다.</p>\n<p>저도 하나의 OS (WSL)에서 3개의 Pod를 띄워 Ensemble 형태로 구성합니다.</p>\n<br/>\n<ol>\n<li>\n<p>Docker File 작업을 진행할 폴더를 하나 생성합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir docker</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>\n<p>아래와 같은 내용으로 DockerFile을 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">FROM</span> ubuntu<span class=\"token operator\">:</span><span class=\"token number\">20.04</span>\n<span class=\"token constant\">RUN</span> mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> update \n\n<span class=\"token constant\">WORKDIR</span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span>install \n\n# java 설치 \n<span class=\"token constant\">ENV</span> <span class=\"token constant\">DEBIAN_FRONTEND</span> noninteractive \n<span class=\"token constant\">ENV</span> <span class=\"token constant\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>jvm<span class=\"token operator\">/</span>java<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>openjdk<span class=\"token operator\">-</span>amd64 \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install openjdk<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">-</span>jdk <span class=\"token operator\">-</span>y \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install wget <span class=\"token operator\">-</span>y \n<span class=\"token constant\">RUN</span> apt<span class=\"token operator\">-</span><span class=\"token keyword\">get</span> install vim <span class=\"token operator\">-</span>y \n\n# zookeeper 설치 \n\n<span class=\"token constant\">RUN</span> wget downloads<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz \n<span class=\"token constant\">RUN</span> tar <span class=\"token operator\">-</span>zxvf apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz \n<span class=\"token constant\">RUN</span> mv apache<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3.7</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>bin <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper \n\n# 설정파일 및 초기화 파일 복사\n\n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg \n<span class=\"token constant\">COPY</span> config<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>sh init<span class=\"token punctuation\">.</span>sh \n\n# windows에서 작업 시 <span class=\"token constant\">CRLF</span>와 <span class=\"token constant\">LF</span> 처리 방식 문제 방지 \n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> init<span class=\"token punctuation\">.</span>sh \n<span class=\"token constant\">RUN</span> sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/\\r//g'</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg \n\n<span class=\"token constant\">CMD</span> bash init<span class=\"token punctuation\">.</span>sh</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"3\">\n<li>\n<p>Docker File에서 명시한 config Folder를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ mkdir config</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"4\">\n<li>\n<p>config Folder에 아래 내용의 init.sh File을 생성합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>data \n\n# 주키퍼는 myid 파일로 클러스터를 구분한다<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span><span class=\"token operator\">~</span><span class=\"token number\">255</span>까지 번호를 지정할 수 있다<span class=\"token punctuation\">.</span> \necho $<span class=\"token constant\">MY_ID</span> <span class=\"token operator\">></span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">data</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">myid</span></span> \n\n# 주키퍼 서버를 실행한다<span class=\"token punctuation\">.</span> \n<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh start \n\n# 자동으로 종료되지 않도록 방지한다<span class=\"token punctuation\">.</span> \ntail <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"5\">\n<li>\n<p>config Folder에 아래 내용의 zoo.cfg 파일을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># 팔로워가 리더에 접속할 수 있는 시간 \n# initLimit <span class=\"token operator\">*</span> tickTime <span class=\"token operator\">=</span> <span class=\"token number\">40</span>초 로 설정된다<span class=\"token punctuation\">.</span> \ninitLimit<span class=\"token operator\">=</span><span class=\"token number\">10</span> \ntickTime<span class=\"token operator\">=</span><span class=\"token number\">2000</span> \n\n# 리더가 될 수 있는 팔로워의 최대 갯수를 나타낸다<span class=\"token punctuation\">.</span> \nsyncLimit<span class=\"token operator\">=</span><span class=\"token number\">5</span> \n\n# myid가 저장될 디렉토리 위치이다<span class=\"token punctuation\">.</span> \ndataDir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>data \n\n# 클라이언트가 접속할 포트 번호이다<span class=\"token punctuation\">.</span> \nclientPort<span class=\"token operator\">=</span><span class=\"token number\">2181</span> \n\n# 앙상블을 이루는 서버 정보이다<span class=\"token punctuation\">.</span> \n# server<span class=\"token punctuation\">.</span><span class=\"token constant\">X</span><span class=\"token operator\">=</span>hostname<span class=\"token operator\">:</span>peerPort<span class=\"token operator\">:</span>leaderPort\n# peerPort는 앙상블 서버들이 상호 통신하는 데 사용되는 포트 번호이다<span class=\"token punctuation\">.</span> \n# leaderPort는 리더를 선출하는 데 사용되는 포트 번호이다<span class=\"token punctuation\">.</span> \n\n# <span class=\"token operator\">--</span> <span class=\"token number\">3888</span>뒤에 공백 조심<span class=\"token operator\">!</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">1</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token number\">3</span><span class=\"token operator\">=</span>nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token number\">2888</span><span class=\"token operator\">:</span><span class=\"token number\">3888</span>\n\n# 자동으로 생성되는 스냅샷을 <span class=\"token number\">24</span>시간마다 최대 <span class=\"token number\">3</span>개를 유지하고 나머지는 제거한다<span class=\"token punctuation\">.</span> \nautopurge<span class=\"token punctuation\">.</span>snapRetainCount<span class=\"token operator\">=</span><span class=\"token number\">3</span> \nautopurge<span class=\"token punctuation\">.</span>purgeInterval<span class=\"token operator\">=</span><span class=\"token number\">24</span></code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"6\">\n<li>\n<p>Zookeeper Pod가 원활하게 통신할 수 있도록 Docker Network를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker network create zoo\nebf8d2ee0ebbac5acce268f5935e5bd80b29ef2b3f29931054b347f8d7c27e8a\n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker network list\n<span class=\"token constant\">NETWORK</span> <span class=\"token constant\">ID</span>     <span class=\"token constant\">NAME</span>      <span class=\"token constant\">DRIVER</span>    <span class=\"token constant\">SCOPE</span>\nf10c3aaa8146   bridge    bridge    local\nc5b41392b3bd   host      host      local\n<span class=\"token number\">36</span>f1ffafa37e   none      <span class=\"token keyword\">null</span>      local\nebf8d2ee0ebb   zoo       bridge    local</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"7\">\n<li>\n<p>위 과정을 모두 완료하였으면 최종적으로는 아래와 같이 구성되어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">root@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">*</span>\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">836</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> Dockerfile\n\nconfig<span class=\"token operator\">:</span>\ntotal <span class=\"token number\">16</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span> <span class=\"token number\">1</span> root root  <span class=\"token number\">315</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">20</span> init<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">-</span>rwxrwxrwx <span class=\"token number\">1</span> root root  <span class=\"token number\">913</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">21</span> zoo<span class=\"token punctuation\">.</span>cfg\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">3</span> root root <span class=\"token number\">4096</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">30</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May  <span class=\"token number\">9</span> <span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">30</span> <span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n</li>\n<li>\n<p>구성이 위와 같다면DockerFile을 생성한 경로에서 이미지를 Build합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker build --tag nasa1515-zookeeper .\n...\n...\n...\nRemoving intermediate container bb88073c3b9a\n---> 6e4b73214693\nStep 16/17 : RUN sed -i 's/\\r//g' /usr/local/zookeeper/conf/zoo.cfg\n ---> Running in e19594c509af\nRemoving intermediate container e19594c509af\n ---> 57ab1963d806\nStep 17/17 : CMD bash init.sh\n ---> Running in 46a08706b3a4\nRemoving intermediate container 46a08706b3a4\n ---> ade37e220c72\nSuccessfully built ade37e220c72\nSuccessfully tagged nasa1515-zookeeper:latest</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"9\">\n<li>\n<p>이미지를 확인해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker image ls\nREPOSITORY           TAG       IMAGE ID       CREATED          SIZE\nnasa1515-zookeeper   latest    ade37e220c72   42 seconds ago   733MB\nubuntu               20.04     53df61775e88   9 days ago       72.8MB\nhello-world          latest    feb5d9fea6a5   7 months ago     13.3kB</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"10\">\n<li>\n<p>이제 Docker Compose File을 생성합니다. (docker-compose.yml)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">version<span class=\"token operator\">:</span> <span class=\"token string\">'3.8'</span>\nvolumes<span class=\"token operator\">:</span> \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span>\n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume \n      \nservices<span class=\"token operator\">:</span> \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> \n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n    \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n    \n  nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span> \n    image<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper \n    container_name<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    restart<span class=\"token operator\">:</span> always \n    hostname<span class=\"token operator\">:</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>\n    environment<span class=\"token operator\">:</span> \n      <span class=\"token constant\">MY_ID</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> \n    volumes<span class=\"token operator\">:</span> \n      <span class=\"token operator\">-</span> nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span>volume<span class=\"token operator\">:</span><span class=\"token operator\">/</span>data \n  \nnetworks<span class=\"token operator\">:</span> \n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> \n    name<span class=\"token operator\">:</span> zoo</code></pre></div>\n</li>\n</ol>\n<br/>\n<ol start=\"11\">\n<li>\n<p>생성한 compose로 Container를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span> \n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> Running <span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">4</span>\n ⠿ Network zoo                     Created                                                                                                                                                                <span class=\"token number\">0.0</span>s\n ⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span>  Started                                                                                                                                                                <span class=\"token number\">0.6</span>s\n⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span>  Started                                                                                                                                                                <span class=\"token number\">0.8</span>s\n⠿ Container nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span>  Started           </code></pre></div>\n</li>\n</ol>\n<br/>\n<ul>\n<li>\n<p>정상적으로 구동이되었다면 아래 명령어로 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\n$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\n$ docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\n\n# 확인해보면 한개의 Zookeeper는 Leader로 선출되었고<span class=\"token punctuation\">,</span> 나머지 <span class=\"token number\">2</span>개는 follwer로 설정되어있는 것을 확인 할 수 있다<span class=\"token punctuation\">.</span>\n\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> follower\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> follower\nroot@<span class=\"token constant\">L</span><span class=\"token operator\">-</span>wslee<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>nasa1515<span class=\"token operator\">/</span>docker# docker exec nasa1515<span class=\"token operator\">-</span>zookeeper<span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>zkServer<span class=\"token punctuation\">.</span>sh status\nZooKeeper <span class=\"token constant\">JMX</span> enabled by <span class=\"token keyword\">default</span>\nUsing config<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>zookeeper<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>zoo<span class=\"token punctuation\">.</span>cfg\nClient port found<span class=\"token operator\">:</span> <span class=\"token number\">2181.</span> Client address<span class=\"token operator\">:</span> localhost<span class=\"token punctuation\">.</span> Client <span class=\"token constant\">SSL</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\nMode<span class=\"token operator\">:</span> leader</code></pre></div>\n</li>\n</ul>\n<h2 id=\"1일차-끝\" style=\"position:relative;\"><a href=\"#1%EC%9D%BC%EC%B0%A8-%EB%81%9D\" aria-label=\"1일차 끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1일차 끝</h2>\n<br/>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>이번 포스트는 그나마 수월하게 성공했습니다.  .  </p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-docker-docker-compose-%EC%84%A4%EC%B9%98\">✔ Docker, Docker-compose 설치</a></li>\n<li>\n<p><a href=\"#-kafka-%EC%84%A4%EC%B9%98\">👍 Kafka 설치</a></p>\n<ul>\n<li><a href=\"#ps\">PS</a></li>\n</ul>\n</li>\n<li><a href=\"#1%EC%9D%BC%EC%B0%A8-%EB%81%9D\">1일차 끝</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   이번 포스트에서는 Local WSL2 Ubuntu에 Kafka Brocker를 구성한 뒤 무작위 데이터를 생성하여 각 Cloud의 Steraming Tools (aws : kinesis, gcp : pub/sub, azure : eventhub)에서 Consume하는 과정을 정리해보았습니다. 아무래도 금액적인 부분의 이슈가 발생하기에 최대한 egress Traffic이 발생되지 않게 Local에서 진행하게되었습니다.    ✔ Docker, Docker-compose 설치 Docker와 Docker-compose의 경우 아래의 공식문서를 확인하시면 자세한 설치 방법을 확인할 수 있습니다. Docker 설치 D…","frontmatter":{"date":"May 09, 2022","title":"[DATA] - WSL2 Ubuntu에 Kafka Broker 구성하기","categories":"DATA CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/data-kafka-wsl/"}},"next":{"id":"501a1b19-d923-56be-afa0-39e4052fe194","html":"<p>머리말  </p>\n<p>안녕하세요 NASA1515입니다. 굉장히 오랜만에 글을 씁니다. (회사 일, 개인사정 등등 바쁜일이 참 많았습니다..)<br>\n아무튼…2022년 4월부터 그래도 주당 하나의 포스트는 작성해보자의 마인드로 블로그를 운영해보려고 합니다.<br>\n사실 추가 글을 작성하지 않아도, adsence 수익을 쌓이니깐 나태해진 이유가 크긴합니다..   </p>\n<hr>\n<br/>\n<h2 id=\"-oracle-install\" style=\"position:relative;\"><a href=\"#-oracle-install\" aria-label=\" oracle install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ ORACLE Install</h2>\n<p>서론 없이 바로 Oracle을 설치해보도록 하죠<br>\nOracle은 기본 Linux에 깔게되면 파라메터 등등 귀찮아 지는 작업들이 많기 때문데<br>\nAzure에서 제공해주는 DataBase Image를 사용하도록 하겠습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az vm create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest \\\n    <span class=\"token operator\">--</span>name oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> \\\n    <span class=\"token operator\">--</span>image Oracle<span class=\"token operator\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">0904</span><span class=\"token operator\">:</span>latest \\\n    <span class=\"token operator\">--</span>size Standard_DS2_v2 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>username nasa1515 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>password @dldnjstjr123 \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>allocation <span class=\"token keyword\">static</span> \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>dns<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>dns</code></pre></div>\n<br/>\n<br/>\n<p>Disk 증설! </p>\n<p>Azure VM의 Spec을 낮춰서 작업중이기 때문에(비용…) Oracle Data File용 디스크를 하나 증설해주겠습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az vm disk attach <span class=\"token operator\">--</span>name disk01 <span class=\"token operator\">--</span><span class=\"token keyword\">new</span> <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest <span class=\"token operator\">--</span>size<span class=\"token operator\">-</span>gb <span class=\"token number\">64</span> <span class=\"token operator\">--</span>sku StandardSSD_LRS <span class=\"token operator\">--</span>vm<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracle</code></pre></div>\n<br/>\n<br/>\n<p>외부 연결을 위한 Virtual Machine Firewall 추가.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">az network nsg rule create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span>group nasatest \\\n    <span class=\"token operator\">--</span>nsg<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracleNSG \\\n    <span class=\"token operator\">--</span>name nasa<span class=\"token operator\">-</span>oracle \\\n    <span class=\"token operator\">--</span>protocol tcp \\\n    <span class=\"token operator\">--</span>priority <span class=\"token number\">1001</span> \\\n    <span class=\"token operator\">--</span>destination<span class=\"token operator\">-</span>port<span class=\"token operator\">-</span>range <span class=\"token number\">1521</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 VM에 접속해서 증설한 Disk Partition을 나눠줍시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># parted <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc \n# mklabel gpt\n# parted <span class=\"token operator\">-</span>a optimal <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc mkpart primary <span class=\"token number\">0</span>GB <span class=\"token number\">64</span>GB   \n# parted <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc print\n\nModel<span class=\"token operator\">:</span> Msft Virtual <span class=\"token function\">Disk</span> <span class=\"token punctuation\">(</span>scsi<span class=\"token punctuation\">)</span>\nDisk <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc<span class=\"token operator\">:</span> <span class=\"token number\">68.7</span>GB\nSector <span class=\"token function\">size</span> <span class=\"token punctuation\">(</span>logical<span class=\"token operator\">/</span>physical<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token number\">512</span>B<span class=\"token operator\">/</span><span class=\"token number\">4096</span>B\nPartition Table<span class=\"token operator\">:</span> gpt\nDisk Flags<span class=\"token operator\">:</span>\n\nNumber  Start   End     Size    File system  Name     Flags\n <span class=\"token number\">1</span>      <span class=\"token number\">1049</span>kB  <span class=\"token number\">64.0</span>GB  <span class=\"token number\">64.0</span>GB               primary\n\n\n# mkfs <span class=\"token operator\">-</span>t ext4 <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc1\n# mkdir <span class=\"token operator\">/</span>u02\n# mount <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc1 <span class=\"token operator\">/</span>u02\n# chmod <span class=\"token number\">777</span> <span class=\"token operator\">/</span>u02</code></pre></div>\n<br/>\n<br/>\n<p>fstab에 Mount Point 등록 및 hosts 파일을 수정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># echo <span class=\"token string\">\"/dev/sdb1               /u02                    ext4    defaults        0 0\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>fstab\n# echo <span class=\"token string\">\"&lt;Public IP> &lt;VMname>.eastus.cloudapp.azure.com &lt;VMname>\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts</code></pre></div>\n<br/>\n<br/>\n<p>마지막으로 VM 내부의 Firewall Port를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>zone<span class=\"token operator\">=</span><span class=\"token keyword\">public</span> <span class=\"token operator\">--</span>add<span class=\"token operator\">-</span>port<span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token operator\">/</span>tcp <span class=\"token operator\">--</span>permanent\n# firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>zone<span class=\"token operator\">=</span><span class=\"token keyword\">public</span> <span class=\"token operator\">--</span>add<span class=\"token operator\">-</span>port<span class=\"token operator\">=</span><span class=\"token number\">5502</span><span class=\"token operator\">/</span>tcp <span class=\"token operator\">--</span>permanent\n# firewall<span class=\"token operator\">-</span>cmd <span class=\"token operator\">--</span>reload</code></pre></div>\n<hr>\n<br/>\n<h2 id=\"-database-생성\" style=\"position:relative;\"><a href=\"#-database-%EC%83%9D%EC%84%B1\" aria-label=\" database 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ DataBase 생성</h2>\n<p>원래는 Oracle을 기본 Linux에 설치하려면 아래와 같은 프로세스를 거쳐야 하는게 정석입니다.<br>\n<img src=\"https://user-images.githubusercontent.com/69498804/161206125-21c2cccd-bf7d-435c-8b1a-895d348b8f12.png\" alt=\"image\">\n그러나 Azure에서는 DataBase 이미지에서 이미 /u01/ 경로에 엔진과 리스너가 생성 및 설치 진행된 상태로 제공을 해줍니다!</p>\n<br/>\n그래서 Oracle User의 환경변수 파일으 살펴보면 아래와 같이 이미 엔진과 리스너의 경로가 설정되어있습니다!\n<p><img src=\"https://user-images.githubusercontent.com/69498804/161206420-448edba4-787e-471c-96d7-09f026430edf.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>자 이제 Oracle Database를 생성하기 위해서 USER를 변경하고 아래 Command를 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sudo su <span class=\"token operator\">-</span> oracle\n# lsnrctl start\n<span class=\"token constant\">LSNRCTL</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production on <span class=\"token number\">20</span><span class=\"token operator\">-</span><span class=\"token constant\">OCT</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token operator\">:</span><span class=\"token number\">58</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\n\n<span class=\"token function\">Copyright</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1991</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> Oracle<span class=\"token punctuation\">.</span>  All rights reserved<span class=\"token punctuation\">.</span>\n\nStarting <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">:</span> please wait<span class=\"token operator\">...</span>\n\n<span class=\"token constant\">TNSLSNR</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nLog messages written to <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\nListening on<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">DESCRIPTION</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nConnecting <span class=\"token function\">to</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">STATUS</span> <span class=\"token keyword\">of</span> the <span class=\"token constant\">LISTENER</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nAlias                     <span class=\"token constant\">LISTENER</span>\nVersion                   <span class=\"token constant\">TNSLSNR</span> <span class=\"token keyword\">for</span> Linux<span class=\"token operator\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nStart Date                <span class=\"token number\">20</span><span class=\"token operator\">-</span><span class=\"token constant\">OCT</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token operator\">:</span><span class=\"token number\">58</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\nUptime                    <span class=\"token number\">0</span> days <span class=\"token number\">0</span> hr<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> min<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> sec\nTrace Level               off\nSecurity                  <span class=\"token constant\">ON</span><span class=\"token operator\">:</span> Local <span class=\"token constant\">OS</span> Authentication\n<span class=\"token constant\">SNMP</span>                      <span class=\"token constant\">OFF</span>\nListener Log File         <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\nListening Endpoints Summary<span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">(</span><span class=\"token constant\">DESCRIPTION</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ADDRESS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PROTOCOL</span><span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HOST</span><span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nThe listener supports no services\nThe command completed successfully\n\n# mkdir <span class=\"token operator\">/</span>u02<span class=\"token operator\">/</span>oradata</code></pre></div>\n<br/>\n<br/>\n<p>위에서 말한 것처럼 저희는 이제 DBCA로 DataBase만 생성해주면 간편하게 사용할 수 있습니다. (20분 정도 소요됩니다)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">dbca <span class=\"token operator\">-</span>silent \\\n   <span class=\"token operator\">-</span>createDatabase \\\n   <span class=\"token operator\">-</span>templateName General_Purpose<span class=\"token punctuation\">.</span>dbc \\\n   <span class=\"token operator\">-</span>gdbname wonseokdb \\\n   <span class=\"token operator\">-</span>sid wonseokdb \\\n   <span class=\"token operator\">-</span>responseFile <span class=\"token constant\">NO_VALUE</span> \\\n   <span class=\"token operator\">-</span>characterSet <span class=\"token constant\">AL32UTF8</span> \\\n   <span class=\"token operator\">-</span>sysPassword @qlalfqjsgh123 \\\n   <span class=\"token operator\">-</span>systemPassword @qlalfqjsgh123 \\\n   <span class=\"token operator\">-</span>createAsContainerDatabase <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>databaseType <span class=\"token constant\">MULTIPURPOSE</span> \\\n   <span class=\"token operator\">-</span>automaticMemoryManagement <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>storageType <span class=\"token constant\">FS</span> \\\n   <span class=\"token operator\">-</span>datafileDestination <span class=\"token string\">\"/u02/oradata/\"</span> \\\n   <span class=\"token operator\">-</span>ignorePreReqs</code></pre></div>\n<br/>\n<br/>\n<p>자 데이터베이스가 생성이 완료되었으면 오라클 환경변수를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># <span class=\"token constant\">ORACLE_SID</span><span class=\"token operator\">=</span>wonseokdb<span class=\"token punctuation\">;</span> <span class=\"token keyword\">export</span> <span class=\"token constant\">ORACLE_SID</span>\n# echo <span class=\"token string\">\"export ORACLE_SID=wonseokdb\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bashrc</code></pre></div>\n<br/>\n<br/>\n<p>Oracle DataBase Init Script 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/:N/:Y/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>oratab</code></pre></div>\n<br/>\n<br/>\n<p>/etc/init.d/dbora 파일을 생성한 후 아래 내용을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token hashbang comment\">#!/bin/sh</span>\n# chkconfig<span class=\"token operator\">:</span> <span class=\"token number\">345</span> <span class=\"token number\">99</span> <span class=\"token number\">10</span>\n# Description<span class=\"token operator\">:</span> Oracle auto start<span class=\"token operator\">-</span>stop script<span class=\"token punctuation\">.</span>\n#\n# Set <span class=\"token constant\">ORA_HOME</span> to be equivalent to $<span class=\"token constant\">ORACLE_HOME</span><span class=\"token punctuation\">.</span>\n<span class=\"token constant\">ORA_HOME</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1\n<span class=\"token constant\">ORA_OWNER</span><span class=\"token operator\">=</span>oracle\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"$1\"</span> <span class=\"token keyword\">in</span>\n<span class=\"token string\">'start'</span><span class=\"token punctuation\">)</span>\n    # Start the Oracle databases<span class=\"token operator\">:</span>\n    # The following command assumes that the Oracle sign<span class=\"token operator\">-</span><span class=\"token keyword\">in</span>\n    # will not prompt the user <span class=\"token keyword\">for</span> any values<span class=\"token punctuation\">.</span>\n    # Remove <span class=\"token string\">\"&amp;\"</span> <span class=\"token keyword\">if</span> you don't want startup <span class=\"token keyword\">as</span> a background process<span class=\"token punctuation\">.</span>\n    su <span class=\"token operator\">-</span> $<span class=\"token constant\">ORA_OWNER</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbstart $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    touch <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lock<span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'stop'</span><span class=\"token punctuation\">)</span>\n    # Stop the Oracle databases<span class=\"token operator\">:</span>\n    # The following command assumes that the Oracle sign<span class=\"token operator\">-</span><span class=\"token keyword\">in</span>\n    # will not prompt the user <span class=\"token keyword\">for</span> any values<span class=\"token punctuation\">.</span>\n    su <span class=\"token operator\">-</span> $<span class=\"token constant\">ORA_OWNER</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbshut $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    rm <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>lock<span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\nesac</code></pre></div>\n<br/>\n<br/>\n<p>권한 변경 및 Link 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># chgrp dba <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora\n# chmod <span class=\"token number\">750</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc0<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>K01dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc3<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>S99dbora\n# ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>dbora <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>rc<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>rc5<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>S99dbora</code></pre></div>\n<br/>\n<br/>\n<p>이제 기본적인 설치는 완료되었습니다. (Reboot 한번 하구 계속 이어서 진행하겠습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># reboot</code></pre></div>\n<br/>\n<br/>\n<p>이제 Oracle의 새로운 유저를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># sqlplus <span class=\"token operator\">/</span> <span class=\"token keyword\">as</span> sysdba</code></pre></div>\n<br/>\n<br/>\nLog 모드를 변환하기 위해서는 Shutdown이 필요합니다.   \n<p>일반적으로 DB는 다음과 같은 Stage로 동작을 하는데 Log Mode 변환은 Mount 단계에서 가능합니다.   </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/161213428-c0783fac-2aba-4951-9d35-02870df3a63f.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>때문에 현재 실행 DB를 shutdown -> Mount Mode 변환 -> Archivelog Mode 변환을 진행하면 됩니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> shutdown immediate\n<span class=\"token punctuation\">;</span>\n\nDatabase closed<span class=\"token punctuation\">.</span>\nDatabase dismounted<span class=\"token punctuation\">.</span>\n\n\n<span class=\"token constant\">ORACLE</span> instance shut down<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">SQL</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> startup mount\n<span class=\"token constant\">ORACLE</span> instance started<span class=\"token punctuation\">.</span>\n\nTotal System Global Area <span class=\"token number\">2432695144</span> bytes\nFixed Size                  <span class=\"token number\">8899432</span> bytes\nVariable Size             <span class=\"token number\">536870912</span> bytes\nDatabase Buffers         <span class=\"token number\">1879048192</span> bytes\nRedo Buffers                <span class=\"token number\">7876608</span> bytes\nDatabase mounted<span class=\"token punctuation\">.</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database archivelog<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database open<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>아카이브 로그 모드가 정상적으로 설정되었는지 확인해보면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> archive log list<span class=\"token punctuation\">;</span>\nDatabase log mode              Archive Mode\nAutomatic archival             Enabled\nArchive destination            <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>arch\nOldest online log sequence     <span class=\"token number\">4</span>\nNext log sequence to archive   <span class=\"token number\">6</span>\nCurrent log sequence           <span class=\"token number\">6</span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span></code></pre></div>\n<br/>\n<br/>\n<p>이제 사용할 유저와 권한을 설정하고, Logminer에 필요한 supplemental을 설정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span>\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> create user wonseok identified by test<span class=\"token punctuation\">;</span>\n\nUser created<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> grant connect<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">,</span> dba to wonseok<span class=\"token punctuation\">;</span>\n\nGrant succeeded<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> alter database add supplemental log data<span class=\"token punctuation\">;</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">ALTER</span> <span class=\"token constant\">DATABASE</span> <span class=\"token constant\">ADD</span> <span class=\"token constant\">SUPPLEMENTAL</span> <span class=\"token constant\">LOG</span> <span class=\"token constant\">DATA</span> <span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">)</span> <span class=\"token constant\">COLUMNS</span><span class=\"token punctuation\">;</span>   <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">--</span> Supplemental이 감지하는 DataBase or Table 설정<span class=\"token punctuation\">.</span>\n\nDatabase altered<span class=\"token punctuation\">.</span>\n\n<span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE_CATALOG_ROLE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">CONNECT</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">CREATE</span> <span class=\"token constant\">SESSION</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">DATABASE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">ARCHIVED_LOG</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">LOGMNR_CONTENTS</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">SYS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">V_</span>$<span class=\"token constant\">LOGMNR_LOGS</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DBMS_LOGMNR</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">EXECUTE</span> <span class=\"token constant\">ON</span> <span class=\"token constant\">DBMS_LOGMNR_D</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ANY</span> <span class=\"token constant\">TRANSACTION</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">SELECT</span> <span class=\"token constant\">ANY</span> <span class=\"token constant\">TABLE</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\n<span class=\"token constant\">GRANT</span> <span class=\"token constant\">LOGMINING</span> <span class=\"token constant\">TO</span> wonseok<span class=\"token punctuation\">;</span>\nGrant succeeded<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>권한까지 정상적으로 선언했으면 이제 User를 바꿔줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> conn wonseok<span class=\"token punctuation\">;</span>\nEnter password<span class=\"token operator\">:</span>\nConnected<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>각자 TABLE을 생성하시면 됩니다. 저는 간단하게 테이블을 하나 만들고 데이터를 넣겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">CREATE</span> <span class=\"token constant\">TABLE</span> <span class=\"token function\">regions</span>\n  <span class=\"token punctuation\">(</span>\n    region_id <span class=\"token constant\">NUMBER</span> <span class=\"token constant\">GENERATED</span> <span class=\"token constant\">BY</span> <span class=\"token constant\">DEFAULT</span> <span class=\"token constant\">AS</span> <span class=\"token constant\">IDENTITY</span>\n    <span class=\"token constant\">START</span> <span class=\"token constant\">WITH</span> <span class=\"token number\">5</span> <span class=\"token constant\">PRIMARY</span> <span class=\"token constant\">KEY</span><span class=\"token punctuation\">,</span>\n    region_name <span class=\"token constant\">VARCHAR2</span><span class=\"token punctuation\">(</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">)</span> <span class=\"token constant\">NOT</span> <span class=\"token constant\">NULL</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">REM</span> <span class=\"token constant\">INSERTING</span> into <span class=\"token constant\">REGIONS</span>\n<span class=\"token constant\">SET</span> <span class=\"token constant\">DEFINE</span> <span class=\"token constant\">OFF</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Europe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Americas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Asia'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nInsert into <span class=\"token constant\">REGIONS</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">REGION_ID</span><span class=\"token punctuation\">,</span><span class=\"token constant\">REGION_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token function\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Middle East and Africa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<br/>\n<p>자 이제 로그가 쌓였는지 확인을 해보면 ARCH 파일이 없습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>root@oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>\ntotal <span class=\"token number\">24</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">3079</span> May <span class=\"token number\">14</span>  <span class=\"token number\">2015</span> init<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall   <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">23</span> lkWONSEOKDB\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall   <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> lkWONSEOKD\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">2048</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">25</span> orapwwonseokdb\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall  <span class=\"token number\">972</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall  <span class=\"token number\">156</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">16</span> <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">3584</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> spfilewonseokdb<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>rw<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">1544</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> hc_wonseokdb<span class=\"token punctuation\">.</span>dat</code></pre></div>\n<br/>\n<br/>\n<p>왜냐하면 기본적으로 LogMiner는 리두로그가 가득차지 않는 이상은 아카이브 로그를 사용하지 않기 때문입니다.<br>\n그럼 아카이브 로그를 쌓기 위해서는 아카이브 로그로 쌓도록 로그 스위칭을 시켜주어야 합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">SQL</span><span class=\"token operator\">></span> <span class=\"token constant\">ALTER</span> <span class=\"token constant\">SYSTEM</span> <span class=\"token constant\">SWITCH</span> <span class=\"token constant\">LOGFILE</span><span class=\"token punctuation\">;</span>\n\nSystem altered<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<br/>\n<p>이제 로그파일의 경로를 다시 확인해보면, 정상적으로 ARCH로그가 쌓여 있는것을 확인 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>root@oracle19c<span class=\"token operator\">-</span>wonseok<span class=\"token operator\">-</span><span class=\"token number\">01</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>dbs<span class=\"token operator\">/</span>\ntotal <span class=\"token number\">10608</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">3079</span> May <span class=\"token number\">14</span>  <span class=\"token number\">2015</span> init<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall       <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">23</span> lkWONSEOKDB\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall       <span class=\"token number\">24</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">24</span> lkWONSEOKD\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">2048</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">06</span><span class=\"token operator\">:</span><span class=\"token number\">25</span> orapwwonseokdb\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall      <span class=\"token number\">972</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">13</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">3584</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> spfilewonseokdb<span class=\"token punctuation\">.</span>ora\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>rw<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall     <span class=\"token number\">1544</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">17</span> hc_wonseokdb<span class=\"token punctuation\">.</span>dat\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall      <span class=\"token number\">200</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">29</span> <span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> oracle oinstall <span class=\"token number\">10835456</span> Apr  <span class=\"token number\">1</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">29</span> arch1_6_1100845537<span class=\"token punctuation\">.</span>dbf <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span></code></pre></div>\n<h1 id=\"작성중\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%84%B1%EC%A4%91\" aria-label=\"작성중 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작성중…</h1>\n<hr>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-oracle-install\">✔ ORACLE Install</a></li>\n<li><a href=\"#-database-%EC%83%9D%EC%84%B1\">✌ DataBase 생성</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 01, 2022","title":"[AZURE] Oracle 19c 설치, LogMiner, CDC 설정하기 From Azure VM","categories":"CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-oracle19/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/data-kafka-wsl/","nextSlug":"/azure-oracle19/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}