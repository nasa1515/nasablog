{"componentChunkName":"component---src-templates-blog-template-js","path":"/data-gcpdataflow/","result":{"data":{"cur":{"id":"d7e3e240-ef5e-5891-af05-6c06162c25f1","html":"<p>머리말  </p>\n<p>요즘 포스트를 작성 할 시간이 부족했습니다…(일…) 그래서 오랜만에 포스트를 올린 기념으로 이번 내용을 더욱 알차게 준비했습니다.<br>\n이번 포스트에서는 GCP의 DataFlow를 사용해 GCS에 있는 CSV 파일을 간단한 Parsing 작업을 한 뒤<br>\nBigQuery Table에 적재하는 부분을 다뤘습니다. 물론 파이썬을 첨가해서  </p>\n<br/>\n<hr>\n<h2 id=\"-dataflow에-대해서\" style=\"position:relative;\"><a href=\"#-dataflow%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C\" aria-label=\" dataflow에 대해서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ DataFlow에 대해서..</h2>\n<p>DataFlow는 GCP에서 DataPipeline(ETL, MR 등)을 Apache Beam 기반으로 동작하도록 만든 Runtime Service 입니다.<br>\n음 간단하게 말하면 Spark Streming이나 Batch 처리를 Cloud를 사용해 PaaS로 사용 가능합니다.<br>\n단 Apache beam에 종속되어 있어서 beam SDK를 봐야하는 불편한 부분은 있습니다..   </p>\n<br/>\n<ul>\n<li>\n<p>일단 이번 포스트에서 간단하게 구성하려고 하는 아키텍쳐는 다음과 같습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116188577-9bf39e80-a762-11eb-8d0a-ad2989bbaa14.JPG\" alt=\"캡처\"></p>\n<ul>\n<li>Batch 형태의 Data [CSV]를 GCS에 Upload하면 해당 File Parsing 후 DW에 적재. </li>\n</ul>\n<br/>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-dataflow-사용을-위한-환경-구성\" style=\"position:relative;\"><a href=\"#-dataflow-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\" aria-label=\" dataflow 사용을 위한 환경 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ DataFlow 사용을 위한 환경 구성</h2>\n<p>저는 Local의 VScode에서 Code를 사용 할 것이기 때문에<br>\nDataFlow 사용하기 위한 환경을 구성하는 것부터 진행하도록 하겠습니다. </p>\n<br/>\n<ul>\n<li>\n<h4 id=\"dataflow를-사용하기-위해서는-아래-api들이-필요합니다-추가해줍니다\" style=\"position:relative;\"><a href=\"#dataflow%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94-%EC%95%84%EB%9E%98-api%EB%93%A4%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%A9%EB%8B%88%EB%8B%A4-%EC%B6%94%EA%B0%80%ED%95%B4%EC%A4%8D%EB%8B%88%EB%8B%A4\" aria-label=\"dataflow를 사용하기 위해서는 아래 api들이 필요합니다 추가해줍니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataFlow를 사용하기 위해서는 아래 API들이 필요합니다. [추가해줍니다.]</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/113811074-806e2700-97a6-11eb-9e4b-384907be0558.JPG\" alt=\"캡처2\"></p>\n<p>설치 API 목록</p>\n<ul>\n<li>Cloud Dataflow</li>\n<li>Stackdriver</li>\n<li>Cloud Storage</li>\n<li>Cloud Storage JSON</li>\n<li>BigQuery</li>\n<li>Cloud Pub/Sub</li>\n<li>Cloud Datastore</li>\n<li>Cloud Resource Manager APIs</li>\n</ul>\n<br/>\n<br/>\n</li>\n<li>\n<h4 id=\"이후-새로운-service-account를-생성합니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%9B%84-%EC%83%88%EB%A1%9C%EC%9A%B4-service-account%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"이후 새로운 service account를 생성합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이후 새로운 Service Account를 생성합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/113811448-30439480-97a7-11eb-9a42-4e8425375130.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>권한 : 소유자  </li>\n<li>\n<p>KeyFile : Json  </p>\n<ul>\n<li>KeyFilw을 Local로 받아놔야 합니다!</li>\n</ul>\n</li>\n</ul>\n<br/> \n<br/>\n</li>\n<li>\n<h4 id=\"이제-gcsgoogle-cloud-storage를-생성합니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-gcsgoogle-cloud-storage%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"이제 gcsgoogle cloud storage를 생성합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 GCS(Google Cloud Storage)를 생성합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/113811803-d68f9a00-97a7-11eb-8cc0-0d6463f8a42b.JPG\" alt=\"캡처4\"></p>\n<ul>\n<li>Storage Class : Standard</li>\n<li>\n<p>Single Region </p>\n<ul>\n<li>가급적이면 비용적으로라도 BigQuery를 사용 할 Region과 맞춰주세요!</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n</li>\n<li>\n<h4 id=\"최종적으로-data를-적재-할-bigquery-dataset을-생성합니다\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85%EC%A0%81%EC%9C%BC%EB%A1%9C-data%EB%A5%BC-%EC%A0%81%EC%9E%AC-%ED%95%A0-bigquery-dataset%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"최종적으로 data를 적재 할 bigquery dataset을 생성합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종적으로 Data를 적재 할 Bigquery DataSet을 생성합니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116189103-6dc28e80-a763-11eb-88f6-1a8e49ea32b8.JPG\" alt=\"캡처2\"></p>\n<ul>\n<li>BigQuery Project : lws-cloocus</li>\n<li>BigQuery DataSet : Test </li>\n</ul>\n</li>\n</ul>\n<p>자 여기까지 간단한 환경설정은 완료되었고 Code를 설명하면서 추가적으로 보겠습니다.  </p>\n<br/>\n<hr>\n<h2 id=\"-python-code-a-namea1a\" style=\"position:relative;\"><a href=\"#-python-code-a-namea1a\" aria-label=\" python code a namea1a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 python code <a name=\"a1\"></a></h2>\n<ul>\n<li>\n<p>최종적인 DataPipeline의 Python Code 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> absolute_import\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> apache_beam <span class=\"token keyword\">as</span> beam\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> ReadFromText\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> WriteToText\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> Metrics\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> PipelineOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> SetupOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> StandardOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> GoogleCloudOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>pipeline <span class=\"token keyword\">import</span> PipelineOptions\n<span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>cloud <span class=\"token keyword\">import</span> storage\n<span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>oauth2 <span class=\"token keyword\">import</span> service_account\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n\n<span class=\"token comment\"># GCP Service Account Key env 윈도우에서는 환경변수로 설정가능</span>\nstorage_client <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">.</span>                            from_service_account_json                                                   <span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\GCP\\lws-cloocus-d4fde98375c7.json'</span><span class=\"token punctuation\">)</span>\n    \n\n<span class=\"token comment\"># for linux \"service account key\" </span>\n\n<span class=\"token comment\">#GOOGLE_APPLICATION_CREDENTIALS('/home/nasa1515/dataflow/lwskey.json')</span>\n\n<span class=\"token comment\"># word length code</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordExtractingDoFn</span><span class=\"token punctuation\">(</span>beam<span class=\"token punctuation\">.</span>DoFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    splited <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n    writestring <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'price'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'manufacturer'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'condition'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#writestring = {'splited[0], splited[1], splited[2], splited[3]'}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>writestring<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># parser option code</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>argv<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> save_main_session<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'--input'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'default'</span>\n    <span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'gs://storage_nasa1515/data/batch2.csv'</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'--output'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'default'</span>\n    <span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'lws-cloocus:nasa1515.batchtest'</span><span class=\"token punctuation\">)</span>\n\nknown_args<span class=\"token punctuation\">,</span> pipeline_args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_known_args<span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span>\npipeline_options <span class=\"token operator\">=</span> PipelineOptions<span class=\"token punctuation\">(</span>pipeline_args<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># pipline option</span>\n\ngoogle_cloud_options <span class=\"token operator\">=</span> pipeline_options<span class=\"token punctuation\">.</span>view_as<span class=\"token punctuation\">(</span>GoogleCloudOptions<span class=\"token punctuation\">)</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>project <span class=\"token operator\">=</span> <span class=\"token string\">'lws-cloocus'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>job_name <span class=\"token operator\">=</span> <span class=\"token string\">'test-to-big'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>staging_location <span class=\"token operator\">=</span> <span class=\"token string\">'gs://storage_nasa1515/staging'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>temp_location <span class=\"token operator\">=</span> <span class=\"token string\">'gs://storage_nasa1515/temp'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> <span class=\"token string\">'asia-northeast3'</span>\npipeline_options<span class=\"token punctuation\">.</span>view_as<span class=\"token punctuation\">(</span>StandardOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>runner <span class=\"token operator\">=</span> <span class=\"token string\">'DataflowRunner'</span>\n\n\n<span class=\"token comment\"># # test1</span>\n\np <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>Pipeline<span class=\"token punctuation\">(</span>options <span class=\"token operator\">=</span> PipelineOptions<span class=\"token punctuation\">(</span>pipeline_args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> beam<span class=\"token punctuation\">.</span>Pipeline<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>pipeline_options<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> p<span class=\"token punctuation\">:</span>\n\n    table_schema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'fields'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"INTEGER\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"manufacturer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"condition\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token punctuation\">(</span>p \n        <span class=\"token operator\">|</span> <span class=\"token string\">'Read Data'</span> <span class=\"token operator\">>></span> ReadFromText<span class=\"token punctuation\">(</span>known_args<span class=\"token punctuation\">.</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token operator\">|</span> beam<span class=\"token punctuation\">.</span>ParDo<span class=\"token punctuation\">(</span>WordExtractingDoFn<span class=\"token punctuation\">(</span>WordExtractingDoFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">|</span> <span class=\"token string\">'write to BigQuery'</span> <span class=\"token operator\">>></span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>WriteToBigQuery<span class=\"token punctuation\">(</span>\n            known_args<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">,</span>\n            schema <span class=\"token operator\">=</span> table_schema<span class=\"token punctuation\">,</span>\n            method<span class=\"token operator\">=</span>beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>WriteToBigQuery<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">.</span>FILE_LOADS<span class=\"token punctuation\">,</span>\n            create_disposition <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>BigQueryDisposition<span class=\"token punctuation\">.</span>CREATE_IF_NEEDED<span class=\"token punctuation\">,</span>\n            write_disposition <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>BigQueryDisposition<span class=\"token punctuation\">.</span>WRITE_TRUNCATE\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresult<span class=\"token punctuation\">.</span>wait_until_finish<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\n    run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>기본적으로 GCP DataFlow에서 beam SDK를 사용하기 위해선 아래 SDK의 설치가 필요합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">pip install apache<span class=\"token operator\">-</span>beam<span class=\"token punctuation\">[</span>gcp<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>SDK 선언 코드 </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> absolute_import\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> apache_beam <span class=\"token keyword\">as</span> beam\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> ReadFromText\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> WriteToText\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> Metrics\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> PipelineOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> SetupOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> StandardOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pipeline_options <span class=\"token keyword\">import</span> GoogleCloudOptions\n<span class=\"token keyword\">from</span> apache_beam<span class=\"token punctuation\">.</span>pipeline <span class=\"token keyword\">import</span> PipelineOptions\n<span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>cloud <span class=\"token keyword\">import</span> storage\n<span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>oauth2 <span class=\"token keyword\">import</span> service_account</code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>권한을 얻기 위한 코드 </p>\n<p>아까 Service Account를 생성하며 발급 받았던 Key의 위치를 선언해줍니다.<br>\nWindow/Linux 모두 환경변수로 GOOGLE<em>APPLICATION</em>CREDENTIALS 설정하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># GCP Service Account Key env</span>\nstorage_client <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">.</span>from_service_account_json<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\GCP\\lws-cloocus-d4fde98375c7.json'</span><span class=\"token punctuation\">)</span>\n    \n\n<span class=\"token comment\"># for linux/window \"service account key\" </span>\n\n<span class=\"token comment\">#GOOGLE_APPLICATION_CREDENTIALS('/home/nasa1515/dataflow/lwskey.json')</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>파이프라인 설정 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## ,으로 구분된 CSV File을 Bigquery가 인식하는 ,으로 구분된 Json File로 변환하는 코드</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordExtractingDoFn</span><span class=\"token punctuation\">(</span>beam<span class=\"token punctuation\">.</span>DoFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    splited <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n    writestring <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'price'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'manufacturer'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'condition'</span><span class=\"token punctuation\">:</span> splited<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#writestring = {'splited[0], splited[1], splited[2], splited[3]'}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>writestring<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token comment\">## pasing 할 데이터를 가져오고 write 할 Bigquery에 대한 정보들을 입력</span>\n\n<span class=\"token comment\"># parser option code</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>argv<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> save_main_session<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'--input'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'default'</span>\n    <span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'gs://storage_nasa1515/data/batch2.csv'</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'--output'</span><span class=\"token punctuation\">,</span>dest<span class=\"token operator\">=</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">,</span>required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'default'</span>\n    <span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'lws-cloocus:nasa1515.batchtest'</span><span class=\"token punctuation\">)</span>\n\nknown_args<span class=\"token punctuation\">,</span> pipeline_args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_known_args<span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span>\npipeline_options <span class=\"token operator\">=</span> PipelineOptions<span class=\"token punctuation\">(</span>pipeline_args<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># pipline option</span>\n\ngoogle_cloud_options <span class=\"token operator\">=</span> pipeline_options<span class=\"token punctuation\">.</span>view_as<span class=\"token punctuation\">(</span>GoogleCloudOptions<span class=\"token punctuation\">)</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>project <span class=\"token operator\">=</span> <span class=\"token string\">'lws-cloocus'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>job_name <span class=\"token operator\">=</span> <span class=\"token string\">'test-to-big'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>staging_location <span class=\"token operator\">=</span> <span class=\"token string\">'gs://storage_nasa1515/staging'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>temp_location <span class=\"token operator\">=</span> <span class=\"token string\">'gs://storage_nasa1515/temp'</span>\ngoogle_cloud_options<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> <span class=\"token string\">'asia-northeast3'</span>\npipeline_options<span class=\"token punctuation\">.</span>view_as<span class=\"token punctuation\">(</span>StandardOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>runner <span class=\"token operator\">=</span> <span class=\"token string\">'DataflowRunner'</span></code></pre></div>\n<ul>\n<li>이부분에서 주요하게 봐야 할 점을 Bigquery가 받아 들일 수 있는 파일의 형식입니다.  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>제가 Pasing 하려고 하는 Batch 성 데이터는 다음과 같습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116191285-06a6d900-a767-11eb-8860-ad389d2b7e0f.JPG\" alt=\"캡처\"></p>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>그러나 Bigquery에서는 미리 정의한 Schema 형태의 ,JSON으로만 Data를 Load 할 수 있습니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116191459-4cfc3800-a767-11eb-9b76-9717d755dfca.JPG\" alt=\"캡처2\"></p>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>만약 해당 Data 형태로 Parsing이 되지 않으면 아래와 같은 Error가 발생하며 Job이 멈춥니다.. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116191628-9ea4c280-a767-11eb-8c0c-f78ab7588ad3.png\" alt=\"MicrosoftTeams-image\"></p>\n<ul>\n<li>때문에 위의 자료형대로 형식을 맞춰주는 건 매우 중요합니다..[여기서 뻘짓을 너무 많이했어요..]</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<ul>\n<li>\n<p>또한 google<em>cloud</em>options에 GCS의 경로들은 전부 미리 생성되어있어야 합니다. </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116192136-6487f080-a768-11eb-9054-337c87a348be.JPG\" alt=\"캡처3\"></p>\n<ul>\n<li>staging</li>\n<li>temp </li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<hr>\n<h2 id=\"-이제-코드에-대한-설명을-이어서-하겠습니다\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EC%A0%9C-%EC%BD%94%EB%93%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85%EC%9D%84-%EC%9D%B4%EC%96%B4%EC%84%9C-%ED%95%98%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\" 이제 코드에 대한 설명을 이어서 하겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 이제 코드에 대한 설명을 이어서 하겠습니다.</h2>\n<ul>\n<li>\n<p>파이프라인 실행 코드 </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">p <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>Pipeline<span class=\"token punctuation\">(</span>options <span class=\"token operator\">=</span> PipelineOptions<span class=\"token punctuation\">(</span>pipeline_args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> beam<span class=\"token punctuation\">.</span>Pipeline<span class=\"token punctuation\">(</span>options<span class=\"token operator\">=</span>pipeline_options<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> p<span class=\"token punctuation\">:</span>\n\n    table_schema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'fields'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"INTEGER\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"manufacturer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"condition\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"STRING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NULLABLE\"</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token punctuation\">(</span>p \n        <span class=\"token operator\">|</span> <span class=\"token string\">'Read Data'</span> <span class=\"token operator\">>></span> ReadFromText<span class=\"token punctuation\">(</span>known_args<span class=\"token punctuation\">.</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token operator\">|</span> beam<span class=\"token punctuation\">.</span>ParDo<span class=\"token punctuation\">(</span>WordExtractingDoFn<span class=\"token punctuation\">(</span>WordExtractingDoFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">|</span> <span class=\"token string\">'write to BigQuery'</span> <span class=\"token operator\">>></span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>WriteToBigQuery<span class=\"token punctuation\">(</span>\n            known_args<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">,</span>\n            schema <span class=\"token operator\">=</span> table_schema<span class=\"token punctuation\">,</span>\n            method<span class=\"token operator\">=</span>beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>WriteToBigQuery<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">.</span>FILE_LOADS<span class=\"token punctuation\">,</span>\n            create_disposition <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>BigQueryDisposition<span class=\"token punctuation\">.</span>CREATE_IF_NEEDED<span class=\"token punctuation\">,</span>\n            write_disposition <span class=\"token operator\">=</span> beam<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>BigQueryDisposition<span class=\"token punctuation\">.</span>WRITE_TRUNCATE\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresult<span class=\"token punctuation\">.</span>wait_until_finish<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span>\n    run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>저는 위처럼 table_schema로 JSON 형태의 Schema를 미리 정의해서 사용했습니다.  </li>\n<li>\n<p>create<em>disposition = beam.io.BigQueryDisposition.CREATE</em>IF_NEEDED</p>\n<ul>\n<li>해당 구문은 BigQuery DataSet에 Table이 없으면 만들어 주는 옵션입니다.  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<br/>\n<hr>\n<h2 id=\"-실행-결과\" style=\"position:relative;\"><a href=\"#-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC\" aria-label=\" 실행 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 실행 결과</h2>\n<p>코드가 모두 짜여졌으니 코드를 실행시켜보죠.  </p>\n<br/>\n<ul>\n<li>\n<p>실행하면 다음과 같으 DataFlow Tab에서 결과를 확인 할 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116193716-bcbff200-a76a-11eb-887a-6bf57009c06c.JPG\" alt=\"캡처4\"></p>\n<ul>\n<li>항목마다 어떤 부분을 성공했는지 자세하게 볼 수 있습니다.  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>DataFlow Job이 성공이니 BigQuery Table을 확인 해 볼까요?  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/116193951-20e2b600-a76b-11eb-8827-666ff168be00.JPG\" alt=\"캡처5\"></p>\n<ul>\n<li>다음과 같이 간단한 쿼리문을 BigQuery에 날려보니 Data가 제대로 들어갔네요!  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>한 2~3일정도 삽질을 경험한 것 같습니다.<br>\n이번에는 Batch 형태의 데이터만 DataFlow를 이용했지만 사실 Streming의 역할이 더 중요합니다.<br>\n그래서 추후에 Pub/Sub과 연동하여 Streming Data를 적재하는 부분도 포스트 하겠습니다.   </p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-dataflow%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C\">✔ DataFlow에 대해서..</a></li>\n<li><a href=\"#-dataflow-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\">✌ DataFlow 사용을 위한 환경 구성</a></li>\n<li><a href=\"#-python-code-a-namea1a\">👍 python code <a name=\"a1\"></a></a></li>\n<li><a href=\"#-%EC%9D%B4%EC%A0%9C-%EC%BD%94%EB%93%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85%EC%9D%84-%EC%9D%B4%EC%96%B4%EC%84%9C-%ED%95%98%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\">👀 이제 코드에 대한 설명을 이어서 하겠습니다.</a></li>\n<li><a href=\"#-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC\">🙌 실행 결과</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   요즘 포스트를 작성 할 시간이 부족했습니다…(일…) 그래서 오랜만에 포스트를 올린 기념으로 이번 내용을 더욱 알차게 준비했습니다. 이번 포스트에서는 GCP의 DataFlow를 사용해 GCS에 있는 CSV 파일을 간단한 Parsing 작업을 한 뒤 BigQuery Table에 적재하는 부분을 다뤘습니다. 물론 파이썬을 첨가해서   ✔ DataFlow에 대해서.. DataFlow는 GCP에서 DataPipeline(ETL, MR 등)을 Apache Beam 기반으로 동작하도록 만든 Runtime Service 입니다. 음 간단하게 말하면 Spark Streming이나 Batch 처리를 Cloud를 사용해 Paa…","frontmatter":{"date":"September 02, 2021","title":"[DATA] - GCP DataFlow, csv from GCS to BigQuery With Python","categories":"DATA CLOUD","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/data-gcpdataflow/"}},"next":{"id":"44a1ef15-7454-5c7f-9869-55e001e067ce","html":"<p>머리말  </p>\n<p>이번에 새롭게 Azure PASS를 전달받아서 해당 구독으로 Cloud Shell을 사용하려고 했으나<br>\nCloudshell error = Error creating Azure Storage Account - code : 409 error<br>\n발생으로 Storage가 생성되지 않아 관련 포스트를 작성합니다.  </p>\n<hr>\n<h2 id=\"-error\" style=\"position:relative;\"><a href=\"#-error\" aria-label=\" error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Error!</h2>\n<h4 id=\"cloud-shell에-연결을-위한-storage를-생성하려는데-다음과-같은-error-발생\" style=\"position:relative;\"><a href=\"#cloud-shell%EC%97%90-%EC%97%B0%EA%B2%B0%EC%9D%84-%EC%9C%84%ED%95%9C-storage%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%A0%A4%EB%8A%94%EB%8D%B0-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-error-%EB%B0%9C%EC%83%9D\" aria-label=\"cloud shell에 연결을 위한 storage를 생성하려는데 다음과 같은 error 발생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cloud Shell에 연결을 위한 Storage를 생성하려는데 다음과 같은 Error 발생</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/112244518-cb5e4980-8c92-11eb-9688-bddeb6457fbf.JPG\" alt=\"11111\"></p>\n<ul>\n<li>해당 Error Code : 409가 발생전에 403 Error도 발생했으나 해결했습니다.  </li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"403-error-해결--stackoverflow에서-구독의-resource-providers의-microsoftstorage-권한-설정\" style=\"position:relative;\"><a href=\"#403-error-%ED%95%B4%EA%B2%B0--stackoverflow%EC%97%90%EC%84%9C-%EA%B5%AC%EB%8F%85%EC%9D%98-resource-providers%EC%9D%98-microsoftstorage-%EA%B6%8C%ED%95%9C-%EC%84%A4%EC%A0%95\" aria-label=\"403 error 해결  stackoverflow에서 구독의 resource providers의 microsoftstorage 권한 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>403 ERROR 해결 : <a href=\"https://stackoverflow.com/questions/44107943/unable-to-create-storage-for-persisting-account-files-in-azure-cloud-shell-cli\">StackOverFlow</a>에서 구독의 Resource providers의 Microsoft.Storage 권한 설정</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/112245160-b504bd80-8c93-11eb-96cc-11449ff92060.png\" alt=\"ehMUs\"></p>\n<ul>\n<li>해당 ERROR는 구독에서 providers의 권한이 없어서 발생한 문제였음  </li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"409-error-해결--stackoverflow에서-custom하게-storage-생성\" style=\"position:relative;\"><a href=\"#409-error-%ED%95%B4%EA%B2%B0--stackoverflow%EC%97%90%EC%84%9C-custom%ED%95%98%EA%B2%8C-storage-%EC%83%9D%EC%84%B1\" aria-label=\"409 error 해결  stackoverflow에서 custom하게 storage 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>409 ERROR 해결 : <a href=\"https://stackoverflow.com/questions/60620035/unable-to-open-cloud-shell-because-of-storage-account-error\">StackOverFlow</a>에서 Custom하게 Storage 생성</h4>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/112245280-e4b3c580-8c93-11eb-9514-14be46875521.png\" alt=\"KKoo7\"></p>\n<ul>\n<li>다음과 같이 <code class=\"language-text\">show advanced settings</code> tab을 선택해 Custom하게 생성   </li>\n</ul>\n<p>StorageAccountAlreadyTaken error는 스토리지 계정 생성 문제입니다.<br>\n이는 새로운 스토리지 계정을 만들고 있지만 동일한 이름의 스토리지 계정이 전 세계의 이미 존재함을 나타냅니다.<br>\n(왜냐하면 스토리지 계정 이름은 모든 Azure 계정에서 고유해야 하기 떄문).<br>\n또한 구독에 상속되어있는 Default Region의 문제일 수도 있어 해당 Region도 지정해주었습니다.  </p>\n</li>\n</ul>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-error\">✔ Error!</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#cloud-shell%EC%97%90-%EC%97%B0%EA%B2%B0%EC%9D%84-%EC%9C%84%ED%95%9C-storage%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%A0%A4%EB%8A%94%EB%8D%B0-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-error-%EB%B0%9C%EC%83%9D\">Cloud Shell에 연결을 위한 Storage를 생성하려는데 다음과 같은 Error 발생</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 20, 2021","title":"[AZURE] Cloudshell error = Error creating Azure Storage Account - code : 409","categories":"CLOUD Error-Report","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-coludshellerror/"}},"prev":{"id":"899a2ae9-4b12-5939-9578-b5831fff8cb9","html":"<p>머리말  </p>\n<p>요 근래 블로그 Rebuild, 업무 등등등…너무 바쁜 하루였습니다. (🤦‍♂️ 아직도 바쁘긴 하지만;;)<br>\n그래도 주말, 퇴근 이후에 기술공부 하는 시간 중에 쪼끔이나마 짬을내 블로그 업데이트를 하려고 노력중입니다!!<br>\n이번 포스트에서는 Azure의 DataFactory의 이론적인 내용과 실제 Oracle DB의 데이터를 수집하는 내용입니다.</p>\n<hr>\n<h2 id=\"-azure-datafactory\" style=\"position:relative;\"><a href=\"#-azure-datafactory\" aria-label=\" azure datafactory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Azure DataFactory?</h2>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136335857-f2cd40c3-07b9-4991-b3c4-116438c1fe11.png\" alt=\"image\">\n데이터 이동을 오케스트레이션하고 데이터를 변환하는 데이터 워크플로를 만들 수 있는 클라우드 기반 ETL 및 데이터 통합 서비스<br>\n서로 다른 데이터 저장소의 데이터를 수집할 수 있는 데이터 기반 워크플로(파이프라인이라고 함)를 만들고 예약할 수 있습니다.<br>\n데이터 흐름을 사용하거나 컴퓨팅 서비스(예: Azure HDInsight Hadoop, Azure Databricks 및 Azure SQL Database)를 사용해<br>\n데이터를 시각적으로 변환하는 복잡한 ETL 프로세스를 작성할 수 있습니다.</p>\n<p>라고 이론적으로는 써있는데 그냥 GCP의 DataFusion과 비슷한 아이 같습니다.<br>\n복잡하게 이론보다는 실습을 해보면서 깨닫는게 좋을 것 같습니다.  </p>\n<br/>\n<hr>\n<h2 id=\"-구축-예정-architecture\" style=\"position:relative;\"><a href=\"#-%EA%B5%AC%EC%B6%95-%EC%98%88%EC%A0%95-architecture\" aria-label=\" 구축 예정 architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👌 구축 예정 Architecture</h2>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136305623-de2ac3d2-18b7-4284-a976-e1413686acde.png\" alt=\"image\"></p>\n<p>On-Premise 같이 네트워크가 격리되어있는 환경을 만들고 싶었습니다.<br>\n때문에 Azure에서는 Subnet으로 비슷한 환경을 구성해서 Private 환경으로 DataFactory를 구성합니다.<br>\n총 서브넷 종류 및 용도는 다음과 같습니다.</p>\n<ul>\n<li>Subnet 01 [Private] (Oracle VM) - On-premise의 역할</li>\n<li>Subnet 02 [Private] (DataFactory) - Private 환경의 수집</li>\n<li>Subnet 03 [Private] (Jump Server) - Pirvate 환경에 접속하기 위한 Jump</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-datafactory-생성\" style=\"position:relative;\"><a href=\"#-datafactory-%EC%83%9D%EC%84%B1\" aria-label=\" datafactory 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ DataFactory 생성.</h2>\n<p>DataFactory 생성은 <a href=\"https://docs.microsoft.com/ko-kr/azure/data-factory/quickstart-create-data-factory-portal\">공식DOCS</a>를 보고 진행합니다.</p>\n<br/>\n<ul>\n<li>\n<p>DataFactory를 동일 RG등의 개인설정에 맞춰서 생성합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/135404274-8671e65e-26c3-4ffa-b589-9ab418aba4a9.png\" alt=\"image\"></p>\n<br/>\n</li>\n<li>\n<p>다만 Private 하게 DataFactory Resource가 동작할 수 있도록 Network 부분은 Private EndPoint로 지정해야 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136308452-5bb43348-50bb-4486-bffb-8ef401507385.png\" alt=\"image\"></p>\n</li>\n</ul>\n<p>이 외의 설정은 건드실 필요 없습니다.</p>\n<br/>\n<hr>\n<h2 id=\"-oracle-db-구축-azure-vm\" style=\"position:relative;\"><a href=\"#-oracle-db-%EA%B5%AC%EC%B6%95-azure-vm\" aria-label=\" oracle db 구축 azure vm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 Oracle DB 구축 (Azure VM)</h2>\n<ul>\n<li>Oracle DB 구축방법의 경우 <a href=\"https://docs.microsoft.com/ko-kr/azure/virtual-machines/workloads/oracle/oracle-database-quick-create\">공식 DOCS</a>를 보시고 설치하시면 됩니다.</li>\n</ul>\n<br/>\n<p>Azrue VM 생성 (Azure에서 제공해주는 Oracle DB Image를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">az vm create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span><span class=\"token keyword\">group</span> nasatest \\\n    <span class=\"token operator\">--</span>name nasa<span class=\"token operator\">-</span>oracle \\\n    <span class=\"token operator\">--</span><span class=\"token class-name\">image</span> Oracle<span class=\"token punctuation\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>oracle<span class=\"token operator\">-</span>database<span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">0904</span><span class=\"token punctuation\">:</span>latest \\\n    <span class=\"token operator\">--</span>size Standard_DS2_v2 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>username nasa1515 \\\n    <span class=\"token operator\">--</span>admin<span class=\"token operator\">-</span>password @dldnjstjr123 \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>allocation <span class=\"token keyword\">static</span> \\\n    <span class=\"token operator\">--</span><span class=\"token keyword\">public</span><span class=\"token operator\">-</span>ip<span class=\"token operator\">-</span>address<span class=\"token operator\">-</span>dns<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>dns</code></pre></div>\n<br/>\n<p>Oracle Data FILE용 디스크 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">az vm disk attach <span class=\"token operator\">--</span>name disk01 <span class=\"token operator\">--</span><span class=\"token keyword\">new</span> <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span><span class=\"token keyword\">group</span> nasatest <span class=\"token operator\">--</span>size<span class=\"token operator\">-</span>gb <span class=\"token number\">64</span> <span class=\"token operator\">--</span>sku StandardSSD_LRS <span class=\"token operator\">--</span>vm<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracle</code></pre></div>\n<br/>\n<p>연결을 위한 Port 방화벽 수정</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">az network nsg rule create \\\n    <span class=\"token operator\">--</span>resource<span class=\"token operator\">-</span><span class=\"token keyword\">group</span> nasatest \\\n    <span class=\"token operator\">--</span>nsg<span class=\"token operator\">-</span>name nasa<span class=\"token operator\">-</span>oracleNSG \\\n    <span class=\"token operator\">--</span>name nasa<span class=\"token operator\">-</span>oracle \\\n    <span class=\"token operator\">--</span>protocol tcp \\\n    <span class=\"token operator\">--</span>priority <span class=\"token number\">1001</span> \\\n    <span class=\"token operator\">--</span>destination<span class=\"token operator\">-</span>port<span class=\"token operator\">-</span>range <span class=\"token number\">1521</span></code></pre></div>\n<br/>\n<p>이제 기본적인 설정은 완료되었으니 VM에 접속 한 뒤 몇가지 사항을 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># sudo su -</span>\n<span class=\"token preprocessor property\"># ls -alt /dev/sd*|head -1</span>\n<span class=\"token punctuation\">[</span>root@nasa<span class=\"token operator\">-</span>oracle <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alt <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sd<span class=\"token operator\">*</span><span class=\"token operator\">|</span>head <span class=\"token operator\">-</span><span class=\"token number\">1</span>\nbrw<span class=\"token operator\">-</span>rw<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> root disk <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span> Sep <span class=\"token number\">29</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc</code></pre></div>\n<br/>\n<p>추가한 Disk를 합치기 위해 디스크 설정 작업을 진행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># parted /dev/sdc mklabel gpt</span>\n<span class=\"token preprocessor property\"># parted -a optimal /dev/sdc mkpart primary 0GB 64GB   </span>\n<span class=\"token preprocessor property\"># parted /dev/sdc print</span>\n\nModel<span class=\"token punctuation\">:</span> Msft <span class=\"token return-type class-name\">Virtual</span> Disk <span class=\"token punctuation\">(</span>scsi<span class=\"token punctuation\">)</span>\nDisk <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>sdc<span class=\"token punctuation\">:</span> <span class=\"token number\">68</span><span class=\"token punctuation\">.</span>7GB\n<span class=\"token return-type class-name\">Sector</span> size <span class=\"token punctuation\">(</span>logical<span class=\"token operator\">/</span>physical<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 512B<span class=\"token operator\">/</span>4096B\n<span class=\"token class-name\">Partition</span> Table<span class=\"token punctuation\">:</span> gpt\n<span class=\"token class-name\">Disk</span> Flags<span class=\"token punctuation\">:</span>\n\nNumber  Start   End     Size    File system  Name     Flags\n <span class=\"token number\">1</span>      1049kB  <span class=\"token number\">64</span><span class=\"token punctuation\">.</span>0GB  <span class=\"token number\">64</span><span class=\"token punctuation\">.</span>0GB               primary\n\n\n<span class=\"token preprocessor property\"># mkfs -t ext4 /dev/sdc1</span>\n<span class=\"token preprocessor property\"># mkdir /u02</span>\n<span class=\"token preprocessor property\"># mount /dev/sdc1 /u02</span>\n<span class=\"token preprocessor property\"># chmod 777 /u02</span></code></pre></div>\n<br/>\n<p>fstab 및 hosts 파일 수정해줍니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># echo </span><span class=\"token string\">\"/dev/sdc1               /u02                    ext4    defaults        0 0\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>fstab\n<span class=\"token preprocessor property\"># echo </span><span class=\"token string\">\"&lt;Public IP> &lt;VMname>.eastus.cloudapp.azure.com &lt;VMname>\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts</code></pre></div>\n<br/>\n<p>VM 내의 방화벽 Port를 열어줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># firewall-cmd --zone=public --add-port=1521/tcp --permanent</span>\n<span class=\"token preprocessor property\"># firewall-cmd --zone=public --add-port=5502/tcp --permanent</span>\n<span class=\"token preprocessor property\"># firewall-cmd --reload</span></code></pre></div>\n<br/>\n<p>Database 만들기</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># sudo su - oracle</span>\n<span class=\"token preprocessor property\"># lsnrctl start</span>\nLSNRCTL <span class=\"token keyword\">for</span> Linux<span class=\"token punctuation\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production <span class=\"token keyword\">on</span> <span class=\"token number\">20</span><span class=\"token operator\">-</span>OCT<span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span>\n\nCopyright <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1991</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> Oracle<span class=\"token punctuation\">.</span>  All rights reserved<span class=\"token punctuation\">.</span>\n\nStarting <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span>dbhome_1<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>tnslsnr<span class=\"token punctuation\">:</span> please wait<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n\nTNSLSNR <span class=\"token keyword\">for</span> Linux<span class=\"token punctuation\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nLog messages written to <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\n<span class=\"token class-name\">Listening</span> <span class=\"token keyword\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>DESCRIPTION<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ADDRESS<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>PROTOCOL<span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HOST<span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>PORT<span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token return-type class-name\">Connecting</span> to <span class=\"token punctuation\">(</span>ADDRESS<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>PROTOCOL<span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HOST<span class=\"token operator\">=</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>PORT<span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nSTATUS of the LISTENER\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nAlias                     LISTENER\nVersion                   TNSLSNR <span class=\"token keyword\">for</span> Linux<span class=\"token punctuation\">:</span> Version <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nStart Date                <span class=\"token number\">20</span><span class=\"token operator\">-</span>OCT<span class=\"token operator\">-</span><span class=\"token number\">2020</span> <span class=\"token number\">01</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span>\nUptime                    <span class=\"token number\">0</span> days <span class=\"token number\">0</span> hr<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> min<span class=\"token punctuation\">.</span> <span class=\"token number\">0</span> sec\nTrace Level               off\n<span class=\"token class-name\">Security</span>                  ON<span class=\"token punctuation\">:</span> Local OS Authentication\nSNMP                      OFF\nListener Log File         <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>diag<span class=\"token operator\">/</span>tnslsnr<span class=\"token operator\">/</span>vmoracle19c<span class=\"token operator\">/</span>listener<span class=\"token operator\">/</span>alert<span class=\"token operator\">/</span>log<span class=\"token punctuation\">.</span>xml\nListening Endpoints Summary<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">(</span>DESCRIPTION<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ADDRESS<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>PROTOCOL<span class=\"token operator\">=</span>tcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HOST<span class=\"token operator\">=</span>vmoracle19c<span class=\"token punctuation\">.</span>eastus<span class=\"token punctuation\">.</span>cloudapp<span class=\"token punctuation\">.</span>azure<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>PORT<span class=\"token operator\">=</span><span class=\"token number\">1521</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nThe listener supports no services\nThe command completed successfully\n\n<span class=\"token preprocessor property\"># mkdir /u02/oradata</span></code></pre></div>\n<br/>\n<p>DB 생성도우미로 Database 생성.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">dbca <span class=\"token operator\">-</span>silent \\\n   <span class=\"token operator\">-</span>createDatabase \\\n   <span class=\"token operator\">-</span>templateName General_Purpose<span class=\"token punctuation\">.</span>dbc \\\n   <span class=\"token operator\">-</span>gdbname nasatest \\\n   <span class=\"token operator\">-</span>sid nasatest \\\n   <span class=\"token operator\">-</span>responseFile NO_VALUE \\\n   <span class=\"token operator\">-</span>characterSet AL32UTF8 \\\n   <span class=\"token operator\">-</span>sysPassword @dldnjstjr123 \\\n   <span class=\"token operator\">-</span>systemPassword @dldnjstjr123 \\\n   <span class=\"token operator\">-</span>createAsContainerDatabase <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>databaseType MULTIPURPOSE \\\n   <span class=\"token operator\">-</span>automaticMemoryManagement <span class=\"token boolean\">false</span> \\\n   <span class=\"token operator\">-</span>storageType FS \\\n   <span class=\"token operator\">-</span>datafileDestination <span class=\"token string\">\"/u02/oradata/\"</span> \\\n   <span class=\"token operator\">-</span>ignorePreReqs\n\n\n\ndbca <span class=\"token operator\">-</span>ignorePrereqFailure <span class=\"token operator\">-</span>silent <span class=\"token operator\">-</span>createDatabase <span class=\"token operator\">-</span>templateName General_Purpose<span class=\"token punctuation\">.</span>dbc <span class=\"token operator\">-</span>gdbName ORCL <span class=\"token operator\">-</span><span class=\"token class-name\">nodeinfo</span> node1<span class=\"token punctuation\">,</span>node2 <span class=\"token operator\">-</span>characterset AL32UTF8\n\nPrepare <span class=\"token keyword\">for</span> db operation\n<span class=\"token number\">10</span><span class=\"token operator\">%</span> complete\nCopying database files\n<span class=\"token number\">40</span><span class=\"token operator\">%</span> complete\nCreating <span class=\"token keyword\">and</span> starting Oracle instance\n<span class=\"token number\">42</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">46</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">50</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">54</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">60</span><span class=\"token operator\">%</span> complete\nCompleting Database Creation\n<span class=\"token number\">66</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">69</span><span class=\"token operator\">%</span> complete\n<span class=\"token number\">70</span><span class=\"token operator\">%</span> complete\nExecuting Post Configuration Actions\n<span class=\"token number\">100</span><span class=\"token operator\">%</span> complete\nDatabase creation complete<span class=\"token punctuation\">.</span> For details check the <span class=\"token class-name\">logfiles</span> at<span class=\"token punctuation\">:</span>\n <span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>cfgtoollogs<span class=\"token operator\">/</span>dbca<span class=\"token operator\">/</span><span class=\"token class-name\">oratest1<span class=\"token punctuation\">.</span>\nDatabase</span> Information<span class=\"token punctuation\">:</span>\nGlobal <span class=\"token class-name\">Database</span> Name<span class=\"token punctuation\">:</span>oratest1\n<span class=\"token return-type class-name\">System</span> <span class=\"token function\">Identifier</span><span class=\"token punctuation\">(</span>SID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>oratest1\nLook at the log file <span class=\"token string\">\"/u01/app/oracle/cfgtoollogs/dbca/oratest1/oratest1.log\"</span> <span class=\"token keyword\">for</span> further details<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>oracle@nasa<span class=\"token operator\">-</span>oracle <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span>$</code></pre></div>\n<br/>\n<p>오라클 환경 변수 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># ORACLE_SID=nasatest; export ORACLE_SID</span>\n<span class=\"token preprocessor property\"># echo </span><span class=\"token string\">\"export ORACLE_SID=nasatest\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bashrc</code></pre></div>\n<br/>\n<p>Oracle db init 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># sed -i 's/:N/:Y/' /etc/oratab</span></code></pre></div>\n<br/>\n<p>/etc/init.d/dbora 파일 생성 후 아래 내용 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\">#!/bin/sh</span>\n<span class=\"token preprocessor property\"># chkconfig: 345 99 10</span>\n<span class=\"token preprocessor property\"># Description: Oracle auto start-stop script.</span>\n<span class=\"token preprocessor property\">#</span>\n<span class=\"token preprocessor property\"># Set ORA_HOME to be equivalent to $ORACLE_HOME.</span>\nORA_HOME<span class=\"token operator\">=</span><span class=\"token operator\">/</span>u01<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>oracle<span class=\"token operator\">/</span>product<span class=\"token operator\">/</span><span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token class-name\">dbhome_1</span>\nORA_OWNER<span class=\"token operator\">=</span>oracle\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"$1\"</span> <span class=\"token keyword\">in</span>\n'start'<span class=\"token punctuation\">)</span>\n    <span class=\"token preprocessor property\"># Start the Oracle databases:</span>\n    <span class=\"token preprocessor property\"># The following command assumes that the Oracle sign-in</span>\n    <span class=\"token preprocessor property\"># will not prompt the user for any values.</span>\n    <span class=\"token preprocessor property\"># Remove </span><span class=\"token string\">\"&amp;\"</span> <span class=\"token keyword\">if</span> you don't want startup <span class=\"token keyword\">as</span> <span class=\"token class-name\">a</span> background process<span class=\"token punctuation\">.</span>\n    su <span class=\"token operator\">-</span> $ORA_OWNER <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbstart $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    touch <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span><span class=\"token keyword\">lock</span><span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n'stop'<span class=\"token punctuation\">)</span>\n    <span class=\"token preprocessor property\"># Stop the Oracle databases:</span>\n    <span class=\"token preprocessor property\"># The following command assumes that the Oracle sign-in</span>\n    <span class=\"token preprocessor property\"># will not prompt the user for any values.</span>\n    su <span class=\"token operator\">-</span> $ORA_OWNER <span class=\"token operator\">-</span>c <span class=\"token string\">\"$ORA_HOME/bin/dbshut $ORA_HOME\"</span> <span class=\"token operator\">&amp;</span>\n    rm <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span><span class=\"token keyword\">lock</span><span class=\"token operator\">/</span>subsys<span class=\"token operator\">/</span>dbora\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\nesac</code></pre></div>\n<br/>\n<p>권한 변경 및 Link 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># chgrp dba /etc/init.d/dbora</span>\n<span class=\"token preprocessor property\"># chmod 750 /etc/init.d/dbora</span>\n<span class=\"token preprocessor property\"># ln -s /etc/init.d/dbora /etc/rc.d/rc0.d/K01dbora</span>\n<span class=\"token preprocessor property\"># ln -s /etc/init.d/dbora /etc/rc.d/rc3.d/S99dbora</span>\n<span class=\"token preprocessor property\"># ln -s /etc/init.d/dbora /etc/rc.d/rc5.d/S99dbora</span></code></pre></div>\n<br/>\n<p>Oracle Develop 연결을 위한 DB User 생성. (DataFactory에서는 sys user로 바로 연결이 되지 않습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># sqlplus sys as sysdba</span>\n\nSQL<span class=\"token operator\">*</span>Plus<span class=\"token punctuation\">:</span> Release <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production <span class=\"token keyword\">on</span> Thu Sep <span class=\"token number\">30</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">44</span><span class=\"token punctuation\">:</span><span class=\"token number\">51</span> <span class=\"token number\">2021</span>\nVersion <span class=\"token number\">19.3</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span>\n\nCopyright <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1982</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> Oracle<span class=\"token punctuation\">.</span>  All rights <span class=\"token class-name\">reserved<span class=\"token punctuation\">.</span>\n\nEnter</span> password<span class=\"token punctuation\">:</span>\n\n<span class=\"token class-name\">Connected</span> to<span class=\"token punctuation\">:</span>\nOracle Database 19c Enterprise Edition Release <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nVersion <span class=\"token number\">19.3</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span>\n\nSQL<span class=\"token operator\">></span> CREATE USER nasa1515 IDENTIFIED <span class=\"token class-name\">BY</span> qwer1234<span class=\"token punctuation\">;</span>\nUser created<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> grant all privileges <span class=\"token class-name\">to</span> nasa1515<span class=\"token punctuation\">;</span>\nGrant succeeded<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> exit</code></pre></div>\n<br/>\n<p>생성한 DB USER로 접속해 Test 데이터 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token preprocessor property\"># sqlplus nasa1515</span>\n\nSQL<span class=\"token operator\">*</span>Plus<span class=\"token punctuation\">:</span> Release <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production <span class=\"token keyword\">on</span> Thu Sep <span class=\"token number\">30</span> <span class=\"token number\">05</span><span class=\"token punctuation\">:</span><span class=\"token number\">42</span><span class=\"token punctuation\">:</span><span class=\"token number\">44</span> <span class=\"token number\">2021</span>\nVersion <span class=\"token number\">19.3</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span>\n\nCopyright <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token number\">1982</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> Oracle<span class=\"token punctuation\">.</span>  All rights <span class=\"token class-name\">reserved<span class=\"token punctuation\">.</span>\n\nEnter</span> password<span class=\"token punctuation\">:</span>\n\n<span class=\"token class-name\">Connected</span> to<span class=\"token punctuation\">:</span>\nOracle Database 19c Enterprise Edition Release <span class=\"token number\">19.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span> <span class=\"token operator\">-</span> Production\nVersion <span class=\"token number\">19.3</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span>\n\nSQL<span class=\"token operator\">></span> CREATE <span class=\"token return-type class-name\">TABLE</span> test <span class=\"token punctuation\">(</span> <span class=\"token return-type class-name\">seq</span> <span class=\"token function\">NUMBER</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token class-name\">NOT</span> NULL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nTable created<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> insert <span class=\"token keyword\">into</span> <span class=\"token return-type class-name\">test</span> values <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token number\">1</span> row created<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> insert <span class=\"token keyword\">into</span> <span class=\"token return-type class-name\">test</span> values <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token number\">1</span> row created<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> insert <span class=\"token keyword\">into</span> <span class=\"token return-type class-name\">test</span> values <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token number\">1</span> row created<span class=\"token punctuation\">.</span>\n\nSQL<span class=\"token operator\">></span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> test<span class=\"token punctuation\">;</span>\n\n       SEQ\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n         <span class=\"token number\">1</span>\n         <span class=\"token number\">2</span>\n         <span class=\"token number\">3</span></code></pre></div>\n<br/>\n<p>연결 용 Oracle 완료</p>\n<br/>\n<hr>\n<h2 id=\"🤦♂️-azure-infra-network-구성\" style=\"position:relative;\"><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-azure-infra-network-%EA%B5%AC%EC%84%B1\" aria-label=\"🤦♂️ azure infra network 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤦‍♂️ Azure Infra (Network) 구성</h2>\n<br/>\n<h3 id=\"azure-network-logic\" style=\"position:relative;\"><a href=\"#azure-network-logic\" aria-label=\"azure network logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Azure Network Logic</h3>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136329888-548f3328-886d-47f5-a6a5-e803e6584096.png\" alt=\"image\"></p>\n<ul>\n<li>DataFactory에서 Private한 Self-hoted VM을 사용하기 위해선 둘 간의 Private Endpoint 설정이 필요합니다.</li>\n</ul>\n<br/>\n<br/>\n<p>위를 재현하기 위한 연결을 위한 VPC의 Subnet의 경우 다음과 같이 나눠 분리하였습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136308851-a864141d-2dde-48dc-8f31-b1d328f2ebc1.png\" alt=\"image\"></p>\n<ul>\n<li>pub-01 : jumpserver가 Public IP를 할당 받을 Subnet</li>\n<li>Pri-01 : DataFactory와 연결된 self-hosted VM이 사용 할 Subnet</li>\n</ul>\n<br/>\n<br/>\n<h3 id=\"vpc-endpoint-생성\" style=\"position:relative;\"><a href=\"#vpc-endpoint-%EC%83%9D%EC%84%B1\" aria-label=\"vpc endpoint 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VPC Endpoint 생성</h3>\n<p>자세한 설정의 경우 <a href=\"\">공식 DOC</a> 확인 하시면 됩니다.<br>\n저는 Private 연결 시 필요한 구성에 대해서만 설명하겠습니다.</p>\n<br/>\n<p>Azure Potal에서 Private link Service로 접속한 뒤 Private endpoint Tab으로 이동 후 ADD 합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136330216-b9d5e688-101b-4972-a4c2-2fc98701f420.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>Basics Tab에서는 기본 정보를 입력하고, Resource Tab에서 아래와 같이 설정합니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136331315-4813eae8-90fa-4a91-8685-90cdd8a0b4e7.png\" alt=\"image\"></p>\n<ul>\n<li>Subscription</li>\n<li>Resource Type</li>\n<li>Resource</li>\n<li>Target sub-resource (해당 설정의 경우 Self-Hosted VM을 사용하려면 datafactory로 고정입니다.)</li>\n</ul>\n<br/>\n<br/>\n<p>Configuration Tab에서는 아래와 같이 설정합니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136331788-54a9972d-b228-4930-9410-1781d796882e.png\" alt=\"image\"></p>\n<ul>\n<li>subnet : self-hosted VM의 Subnet을 선택</li>\n<li>Resource Group : Self-hoted VM이 위치하고 있는 RG 선택</li>\n</ul>\n<br/>\n<br/>\n<p>그럼 다음과 같이 생성된 Endpoint를 확인 할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136331888-f721eb44-1850-402a-a24c-b9d85ec7dfc1.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>추가적으로 DataFactory Instance -> Network Tab에서도 endpoint 연결을 확인할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136331932-4a19e1a3-cf21-43b1-b170-7d35bc33fd40.png\" alt=\"image\"></p>\n<br/>\n<hr>\n<h2 id=\"-databricks-self-hosted-vm-연동\" style=\"position:relative;\"><a href=\"#-databricks-self-hosted-vm-%EC%97%B0%EB%8F%99\" aria-label=\" databricks self hosted vm 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😂 DataBricks Self-hosted VM 연동</h2>\n<br/>\n<p>접속 루트 : Azure Data Factory Studio → 관리 → 통합런타임 → 새로만들기 → Azure, 자체 호스팅 → 자체 호스팅 → 생성\n<img src=\"https://user-images.githubusercontent.com/69498804/136332154-3d59c2fd-55fd-4d40-8de9-4715078d8fd0.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>생성되면 아직 연결이 되지 않은 자체 호스팅 런타임이 생성되는데 접속하여<br>\n통합 런타임 파일은 다운한 뒤 설정 Tab의 Key 값을 저장해둡니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136332397-1e076bef-c666-4551-8eae-cee4986fccee.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>이제 JumpServer -> Self-hosted VM으로 RDP 접속 후 Self-Hosted에 다운로드 받은 런타임 파일을 설치 합니다.<br>\n설치가 완료되면 아래와 같은 intergration Runtime manager가 실행되는데 아까 저장해둔 Key 값을 입력하여 연결합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136332713-79287322-d5bf-42c6-b09d-8f297dc4a318.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>정상적으로 Private endpoint 설정을 했다면 아래와 같이 Runtime이 추가됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136332894-38051fbd-717f-443e-8352-3631d0b4cebe.png\" alt=\"image\"></p>\n<br/>\n<hr>\n<h2 id=\"-oracle-data-ingestion\" style=\"position:relative;\"><a href=\"#-oracle-data-ingestion\" aria-label=\" oracle data ingestion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😜 Oracle Data Ingestion</h2>\n<br/>\n<p>DataFactory -> Factory Resource -> Data Set -> create -> Oracle 검색!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136333296-1259339c-afc3-4a61-9a67-fa1ed1b6a87e.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>이후 연결정보에 대한 값은 위에서 생성한 Oracle의 SID 값이나 DB 접속 정보를 입력합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136334629-2d3c334d-2ed4-4fae-b603-7f97d9679ac1.png\" alt=\"image\"></p>\n<ul>\n<li>연결테스트 결과 : 정상!</li>\n</ul>\n<br/>\n<br/>\n<p>추가 속성설정 부분에서는 위에서 생성한 Table 값을 넣어줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/136334743-9d7b839b-3214-4b1c-911d-80fedf9f2fcb.png\" alt=\"image\"></p>\n<br/>\n<br/>\n<p>연결을 마치게 되면 Oracle DataSet이 생성이 되고, 해당 데이터를 확인 할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136335374-af3c07bd-b888-4618-beb8-1f740877625b.png\" alt=\"image\"></p>\n<br/>\n<p>이제 DataFactory의 파이프라인에서 Flow (ETL), Data Migration 등 다양한 작업을 진행할 수 있습니다.\n<img src=\"https://user-images.githubusercontent.com/69498804/136335528-cf52026c-c431-4186-ad6b-bb509b0b2c90.png\" alt=\"image\"></p>\n<p>-> 해당 부분은 다음 포스트에서 더 자세히 정리하도록 하겠습니다.</p>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>GCP의 경우 DataFlow, Proc 등 많은 Resource 들을 사용해봤지만 이제 Azure 쪽의 Data Rosouce를 사용해보려고 합니다.<br>\n다음 포스트에서 뵙겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-azure-datafactory\">✔ Azure DataFactory?</a></li>\n<li><a href=\"#-%EA%B5%AC%EC%B6%95-%EC%98%88%EC%A0%95-architecture\">👌 구축 예정 Architecture</a></li>\n<li><a href=\"#-datafactory-%EC%83%9D%EC%84%B1\">✌ DataFactory 생성.</a></li>\n<li><a href=\"#-oracle-db-%EA%B5%AC%EC%B6%95-azure-vm\">👍 Oracle DB 구축 (Azure VM)</a></li>\n<li>\n<p><a href=\"#%F0%9F%A4%A6%E2%99%82%EF%B8%8F-azure-infra-network-%EA%B5%AC%EC%84%B1\">🤦‍♂️ Azure Infra (Network) 구성</a></p>\n<ul>\n<li><a href=\"#azure-network-logic\">Azure Network Logic</a></li>\n<li><a href=\"#vpc-endpoint-%EC%83%9D%EC%84%B1\">VPC Endpoint 생성</a></li>\n</ul>\n</li>\n<li><a href=\"#-databricks-self-hosted-vm-%EC%97%B0%EB%8F%99\">😂 DataBricks Self-hosted VM 연동</a></li>\n<li><a href=\"#-oracle-data-ingestion\">😜 Oracle Data Ingestion</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 05, 2021","title":"[DATA, AZURE] Azure DataFactory로 Oracle Data 수집하기","categories":"CLOUD DATA","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/azure-datafactory/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/data-gcpdataflow/","nextSlug":"/azure-coludshellerror/","prevSlug":"/azure-datafactory/"}},"staticQueryHashes":["1073350324","2938748437"]}