{"componentChunkName":"component---src-templates-blog-template-js","path":"/devops-harbor/","result":{"data":{"cur":{"id":"f1f3cd19-e979-5f14-987a-47d3f564c240","html":"<p>머리말  </p>\n<p>그동안 빌드된 이미지를 관리하거나 정적분석 할 때 Docker hub를 기반으로 구성했으나<br>\n이번 프로젝트에서는 어떻게 하면 보안에 조금 더 중점을 둘 수 있을까를 생각하다<br>\nHarbor를 사용하여 독립적인 저장소로 이미지를 관리하기로 결정하였습니다.</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>Jenkins</li>\n<li>OWASP ZAP</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"-harbor-설치-docker\" style=\"position:relative;\"><a href=\"#-harbor-%EC%84%A4%EC%B9%98-docker\" aria-label=\" harbor 설치 docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Harbor 설치 (Docker)</h2>\n<p>Harbor 설치의 경우 이미 많은 분들이 더 쉽게 설명해놓으셔서 간단히 넘어가겠습니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/51220344/102866432-99163380-447a-11eb-8d9f-ded27807e327.jpg\" alt=\"img\"></p>\n<ul>\n<li>우선 Harbor는 특정 OS에 맞는 docker, docker-compose가 요구됩니다 [Centos 7을 기반으로 진행하였습니다.]</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"docker-compose\" style=\"position:relative;\"><a href=\"#docker-compose\" aria-label=\"docker compose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker-compose</h4>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">sudo curl <span class=\"token operator\">-</span>L <span class=\"token string\">\"https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)\"</span> <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\nsudo chmod <span class=\"token operator\">+</span>x <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose\ndocker<span class=\"token operator\">-</span>compose <span class=\"token operator\">-</span>v</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"harbor-관련-링크\" style=\"position:relative;\"><a href=\"#harbor-%EA%B4%80%EB%A0%A8-%EB%A7%81%ED%81%AC\" aria-label=\"harbor 관련 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Harbor <a href=\"https://github.com/goharbor/harbor/releases\">관련 링크</a></h4>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\">wget</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>goharbor<span class=\"token operator\">/</span>harbor<span class=\"token operator\">/</span>releases<span class=\"token operator\">/</span>download<span class=\"token operator\">/</span>v1<span class=\"token punctuation\">.</span><span class=\"token number\">9.4</span><span class=\"token operator\">/</span>harbor<span class=\"token operator\">-</span>online<span class=\"token operator\">-</span>installer<span class=\"token operator\">-</span>v1<span class=\"token punctuation\">.</span><span class=\"token number\">9.4</span><span class=\"token punctuation\">.</span>tgz\ntar xvfz harbor<span class=\"token operator\">-</span>online<span class=\"token operator\">-</span>installer<span class=\"token operator\">-</span>v1<span class=\"token punctuation\">.</span><span class=\"token number\">9.4</span><span class=\"token punctuation\">.</span>tgz\ncd harbor\nvi harbor<span class=\"token punctuation\">.</span>yml <span class=\"token comment\">// port 변경가능</span>\n<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>install<span class=\"token punctuation\">.</span>sh</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<h4 id=\"위의-간단한-명령어로-설치가-완료되면-설정한-public-ip로-접근됩니다\" style=\"position:relative;\"><a href=\"#%EC%9C%84%EC%9D%98-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%A1%9C-%EC%84%A4%EC%B9%98%EA%B0%80-%EC%99%84%EB%A3%8C%EB%90%98%EB%A9%B4-%EC%84%A4%EC%A0%95%ED%95%9C-public-ip%EB%A1%9C-%EC%A0%91%EA%B7%BC%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"위의 간단한 명령어로 설치가 완료되면 설정한 public ip로 접근됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>위의 간단한 명령어로 설치가 완료되면 설정한 Public IP로 접근됩니다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/51220344/102866526-c19e2d80-447a-11eb-9e5c-ded42c1df7fc.png\" alt=\"img1\"></p>\n<blockquote>\n<p>ID : admin / Pass : Harbor12345</p>\n</blockquote>\n</li>\n</ul>\n<br/>\n<ul>\n<li>사용 및 수정한 Harvor.xml은 다음과 같습니다.</li>\n<li>\n<h3 id=\"harbor-conf\" style=\"position:relative;\"><a href=\"#harbor-conf\" aria-label=\"harbor conf permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Harbor conf</h3>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">vi harbor<span class=\"token punctuation\">.</span>xml\n<span class=\"token preprocessor property\"># hostname</span>\n<span class=\"token preprocessor property\"># https 주석(미사용시)</span>\n<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>prepare\n<span class=\"token preprocessor property\">#docker-compose reset</span>\ndocker<span class=\"token operator\">-</span>compose down <span class=\"token operator\">-</span>v\ndocker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"-그러나-harbor는-https가-기본입니다\" style=\"position:relative;\"><a href=\"#-%EA%B7%B8%EB%9F%AC%EB%82%98-harbor%EB%8A%94-https%EA%B0%80-%EA%B8%B0%EB%B3%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\" 그러나 harbor는 https가 기본입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ 그러나 Harbor는 HTTPS가 기본입니다.</h3>\n<br/>\n<ul>\n<li>\n<p>저희는 SSL 인증서에 많은 시간을 쓰고 싶지 않아 아래와 같은 방법으로 HTTP로 Harbor를 사용했습니다.</p>\n<ul>\n<li>Harbor를 설치한 서버와 연결할 node들에 해당 명령어를 일일히 기입해야합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">ke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # vim <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span>docker \ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # \ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # systemctl restart docker\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # \ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # \ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # cat <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span><span class=\"token class-name\">docker</span> \nDOCKER_OPTS<span class=\"token operator\">=</span>\"<span class=\"token operator\">-</span>p <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run<span class=\"token operator\">/</span>docker<span class=\"token punctuation\">.</span>pid <span class=\"token operator\">--</span>iptables<span class=\"token operator\">=</span><span class=\"token boolean\">false</span> <span class=\"token operator\">--</span>ip<span class=\"token operator\">-</span>masq<span class=\"token operator\">=</span><span class=\"token boolean\">false</span> <span class=\"token operator\">--</span>log<span class=\"token operator\">-</span>level<span class=\"token operator\">=</span>warn <span class=\"token operator\">--</span>bip<span class=\"token operator\">=</span>\n<span class=\"token number\">169.254</span><span class=\"token number\">.123</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span><span class=\"token number\">24</span> <span class=\"token operator\">--</span>registry<span class=\"token operator\">-</span>mirror<span class=\"token operator\">=</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mirror<span class=\"token punctuation\">.</span>gcr<span class=\"token punctuation\">.</span>io <span class=\"token operator\">--</span>log<span class=\"token operator\">-</span>driver<span class=\"token operator\">=</span>json<span class=\"token operator\">-</span>file <span class=\"token operator\">--</span>log<span class=\"token operator\">-</span>opt<span class=\"token operator\">=</span>ma\nx<span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token number\">10m</span> <span class=\"token operator\">--</span>log<span class=\"token operator\">-</span>opt<span class=\"token operator\">=</span>max<span class=\"token operator\">-</span>file<span class=\"token operator\">=</span><span class=\"token number\">5</span> <span class=\"token operator\">--</span>insecure<span class=\"token operator\">-</span>registry <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>\"\n\n\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # docker info <span class=\"token operator\">|</span> grep Insecure <span class=\"token operator\">-</span>A2\n<span class=\"token class-name\">Insecure</span> Registries<span class=\"token punctuation\">:</span>\n<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>\n<span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">8</span></code></pre></div>\n<ul>\n<li>/etc/default/docker 파일의 —insecure-registry 구문을 수정한 뒤 Docker를 재시작 시켜주면 되는 간단한 작업입니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"-로그인이-안되는-문제가-발생했습니다\" style=\"position:relative;\"><a href=\"#-%EB%A1%9C%EA%B7%B8%EC%9D%B8%EC%9D%B4-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\" 로그인이 안되는 문제가 발생했습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 로그인이 안되는 문제가 발생했습니다.</h3>\n<br/>\n<ul>\n<li>\n<p>아래와 같이 Harbor 저장소를 HTTP로 연결하려하는데 실패했습니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">gke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # docker <span class=\"token class-name\">login</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>\nUsername<span class=\"token punctuation\">:</span> <span class=\"token class-name\">admin</span>\nPassword<span class=\"token punctuation\">:</span> \nError response <span class=\"token keyword\">from</span> daemon<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Get</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>v2<span class=\"token operator\">/</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Get</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>jenkins<span class=\"token operator\">/</span>service<span class=\"token operator\">/</span>token<span class=\"token punctuation\">?</span><span class=\"token class-name\">a</span>\nccount<span class=\"token operator\">=</span>admin<span class=\"token operator\">&amp;</span>client_id<span class=\"token operator\">=</span>docker<span class=\"token operator\">&amp;</span>offline_token<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token operator\">&amp;</span>service<span class=\"token operator\">=</span>harbor<span class=\"token operator\">-</span>registry<span class=\"token punctuation\">:</span> <span class=\"token class-name\">dial</span> tcp<span class=\"token punctuation\">:</span> lookup j\nenkins <span class=\"token keyword\">on</span> <span class=\"token number\">169.254</span><span class=\"token number\">.169</span><span class=\"token number\">.254</span><span class=\"token punctuation\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">:</span> no such host</code></pre></div>\n<ul>\n<li>lookup jenkins on 169.254.169.254:53: no such host 로그내용을 보니 DNS or HOSTS의 문제인 것으로 판단됩니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>다음과 같이 hosts에 추가해줘봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">gke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7 <span class=\"token operator\">~</span> # cat <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts <span class=\"token operator\">|</span> grep jenkins\n<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>   jenkins</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 아래와 같이 정상적으로 저장소에 로그인이 가능해집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">gke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>b3hf <span class=\"token operator\">~</span> # docker <span class=\"token class-name\">login</span> http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>\nUsername<span class=\"token punctuation\">:</span> <span class=\"token class-name\">admin</span>\nPassword<span class=\"token punctuation\">:</span> \nWARNING<span class=\"token operator\">!</span> Your password will be <span class=\"token class-name\">stored</span> unencrypted <span class=\"token keyword\">in</span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>docker<span class=\"token operator\">/</span>config<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span>\nConfigure a credential helper to <span class=\"token keyword\">remove</span> <span class=\"token keyword\">this</span> <span class=\"token class-name\">warning<span class=\"token punctuation\">.</span> See</span>\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>docs<span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>engine<span class=\"token operator\">/</span>reference<span class=\"token operator\">/</span>commandline<span class=\"token operator\">/</span>login<span class=\"token operator\">/</span>#credentials<span class=\"token operator\">-</span>store\nError <span class=\"token class-name\">saving</span> credentials<span class=\"token punctuation\">:</span> mkdir <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>docker<span class=\"token punctuation\">:</span> read<span class=\"token operator\">-</span>only file system</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>물론 이미지를 가져오는 것도 자유롭습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root@rancher <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker pull <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>centos<span class=\"token punctuation\">:</span><span class=\"token class-name\">latest</span>\nlatest<span class=\"token punctuation\">:</span> Pulling <span class=\"token keyword\">from</span> cccr<span class=\"token operator\">/</span><span class=\"token class-name\">centos</span>\ne4c3d3e4f7b0<span class=\"token punctuation\">:</span> Pull complete \n101c41d0463b<span class=\"token punctuation\">:</span> Pull complete \n8275efcd805f<span class=\"token punctuation\">:</span> Pull complete \n751620502a7a<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \na59da3a7d0e7<span class=\"token punctuation\">:</span> Pull complete \n5ad32ac1e527<span class=\"token punctuation\">:</span> Pull complete \n50f250ce9768<span class=\"token punctuation\">:</span> Pull complete \n3dd70b2a7b06<span class=\"token punctuation\">:</span> Pull complete \n8c2eed4e2f48<span class=\"token punctuation\">:</span> Pull complete \n724b4bfec817<span class=\"token punctuation\">:</span> Pull complete \n61ae8c03d512<span class=\"token punctuation\">:</span> Pull complete \n9a94fab24995<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nda240281d421<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \na3770e71565d<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \ne1c790c868f5<span class=\"token punctuation\">:</span> Pull complete \n70b50f1bf238<span class=\"token punctuation\">:</span> Pull <span class=\"token class-name\">complete</span> \nDigest<span class=\"token punctuation\">:</span> sha256<span class=\"token punctuation\">:</span><span class=\"token class-name\">cc72b06299df2ca6ed89a93190f062cb918185742afe270a5e179b2ab52c1d17</span>\nStatus<span class=\"token punctuation\">:</span> Downloaded newer image <span class=\"token keyword\">for</span> <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>centos<span class=\"token punctuation\">:</span>latest\n<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>centos<span class=\"token punctuation\">:</span>latest\n<span class=\"token punctuation\">[</span>root@rancher <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span># docker images\nREPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE\n<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>centos   latest              d35d713b85e5        <span class=\"token number\">12</span> days ago         <span class=\"token number\">892M</span>\nB</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"argcod-인증\" style=\"position:relative;\"><a href=\"#argcod-%EC%9D%B8%EC%A6%9D\" aria-label=\"argcod 인증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Argcod 인증</h3>\n<ul>\n<li>\n<p>쿠버네티스 클러스터에 아래와 같이 시크릿을 추가해줘야 정상적으로 연동이 됩니다..</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">kubectl <span class=\"token keyword\">get</span> secret regcred <span class=\"token operator\">--</span>output<span class=\"token operator\">=</span><span class=\"token class-name\">yaml</span>\napiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\ndata<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span>dockerconfigjson<span class=\"token punctuation\">:</span> <span class=\"token class-name\">eyJhdXRocyI6eyJodHRwOi8vMzQuNjQuMjM3LjExMiI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJIYXJib3IxMjM0NSIsImF1dGgiOiJZV1J0YVc0NlNHRnlZbTl5TVRJek5EVT0ifX19</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Secret</span>\nmetadata<span class=\"token punctuation\">:</span>\ncreationTimestamp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2020-11-12T09:29:40Z\"</span>\nname<span class=\"token punctuation\">:</span> regcred\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">default</span>\nresourceVersion<span class=\"token punctuation\">:</span> <span class=\"token string\">\"13089794\"</span>\nselfLink<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>namespaces<span class=\"token operator\">/</span><span class=\"token keyword\">default</span><span class=\"token operator\">/</span>secrets<span class=\"token operator\">/</span><span class=\"token class-name\">regcred</span>\nuid<span class=\"token punctuation\">:</span> 50cc6a2d<span class=\"token operator\">-</span>0f39<span class=\"token operator\">-</span>4fed<span class=\"token operator\">-</span><span class=\"token number\">96e7</span><span class=\"token operator\">-</span><span class=\"token class-name\">d5edde4e0f37</span>\ntype<span class=\"token punctuation\">:</span> kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>dockerconfigjson\n<span class=\"token operator\">></span> \n<span class=\"token operator\">></span> \n<span class=\"token operator\">></span> kubectl <span class=\"token keyword\">get</span> secret regcred <span class=\"token operator\">--</span>output<span class=\"token operator\">=</span><span class=\"token string\">\"jsonpath={.data.\\.dockerconfigjson}\"</span> <span class=\"token operator\">|</span> base64 <span class=\"token operator\">--</span><span class=\"token class-name\">decode</span>\nbase64<span class=\"token punctuation\">:</span> <span class=\"token class-name\">unrecognized</span> option<span class=\"token punctuation\">:</span> decode\nBusyBox v1<span class=\"token punctuation\">.</span><span class=\"token number\">31.1</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> multi<span class=\"token operator\">-</span>call binary<span class=\"token punctuation\">.</span>\n\nUsage<span class=\"token punctuation\">:</span> base64 <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>d<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">FILE</span></span><span class=\"token punctuation\">]</span>\n\nBase64 encode <span class=\"token keyword\">or</span> decode FILE to standard output\n        <span class=\"token operator\">-</span>d      Decode data\n<span class=\"token operator\">></span> \n<span class=\"token operator\">></span> \n<span class=\"token operator\">></span> kubectl <span class=\"token keyword\">get</span> secret regcred <span class=\"token operator\">--</span>output<span class=\"token operator\">=</span><span class=\"token string\">\"jsonpath={.data.\\.dockerconfigjson}\"</span> <span class=\"token operator\">|</span> base64 <span class=\"token operator\">-</span>d\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"auths\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"http://34.64.237.112\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Harbor12345\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"auth\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"YWRtaW46SGFyYm9yMTIzNDU=\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"jenkins에서-다음과-같이-연결합니다\" style=\"position:relative;\"><a href=\"#jenkins%EC%97%90%EC%84%9C-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%B4-%EC%97%B0%EA%B2%B0%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"jenkins에서 다음과 같이 연결합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins에서 다음과 같이 연결합니다.</h3>\n<br/>\n<p>Harbor의 경우 별 다른 APP 설치 없이 파이프라인 스크립트에서 바로 연결이 가능합니다.</p>\n<ul>\n<li>\n<p>저의 경우 스크립트 환경변수에 다음과 같이 할당했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">pipeline <span class=\"token punctuation\">{</span>\n    environment <span class=\"token punctuation\">{</span>\n        slack_channel <span class=\"token operator\">=</span> '#studying'\n        REGISTRY <span class=\"token operator\">=</span> 'cccr<span class=\"token operator\">/</span>jisun'\n        REGISTRY_IP <span class=\"token operator\">=</span> '<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>'       <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span> Harbor <span class=\"token class-name\">IP</span>\n        REGISTRYCREDENTIAL <span class=\"token operator\">=</span> 'harbor'       <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span> <span class=\"token class-name\">Credential</span>\n        DOCKER_IMAGE <span class=\"token operator\">=</span> ''\n        TAG_NUM <span class=\"token operator\">=</span> ''\n    <span class=\"token punctuation\">}</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>중략<span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Docker image push to Harbor'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">--</span> 다음과 같이 푸시하도록<span class=\"token punctuation\">.</span>\n            steps<span class=\"token punctuation\">{</span>\n                script <span class=\"token punctuation\">{</span>\n                    docker<span class=\"token punctuation\">.</span><span class=\"token function\">withRegistry</span><span class=\"token punctuation\">(</span>'http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$REGISTRY_IP'<span class=\"token punctuation\">,</span> REGISTRYCREDENTIAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        DOCKER_IMAGE<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>'$<span class=\"token punctuation\">{</span>BUILD_NUMBER<span class=\"token punctuation\">}</span>'<span class=\"token punctuation\">)</span>\n                        DOCKER_IMAGE<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                sh 'docker rmi $REGISTRY<span class=\"token punctuation\">:</span>latest'\n                sh 'docker rmi $REGISTRY_IP<span class=\"token operator\">/</span>$REGISTRY<span class=\"token punctuation\">:</span>$BUILD_NUMBER'\n                sh 'docker rmi $REGISTRY_IP<span class=\"token operator\">/</span>$REGISTRY<span class=\"token punctuation\">:</span>latest'\n            <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그럼 최종적으로 아래와 같이 Harbor를 통해서 이미지를 관리할 수 있게 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/102946406-eee2ee00-4503-11eb-87d6-fad094b4187f.PNG\" alt=\"gg\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>이번 프로젝트에서는 처음 다뤄본 툴이 너무 많았습니다. 그래서 더욱 많은 분들의 포스트를 보고, 공식문서를 보다보니<br>\n처음 다뤄보거나, 접해보는 툴들의 대한 이해도와 숙련도를 올리는 방법을 알게 되었던 것 같습니다.<br>\nHarbor를 설치하면서 느낀건 쿠버네티스 기반으로 오픈소스 툴들을 잘 정리한 블로그들은 많이 없다는 것입니다.<br>\n특히 클러스터를 연결하는 부분에서…<br>\n앞으로 더 많은 오픈소스들이 나올텐테 저는 그것들을 다뤄보는 것을 취미로 가져봐야 겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-harbor-%EC%84%A4%EC%B9%98-docker\">✔ Harbor 설치 (Docker)</a></p>\n<ul>\n<li><a href=\"#-%EA%B7%B8%EB%9F%AC%EB%82%98-harbor%EB%8A%94-https%EA%B0%80-%EA%B8%B0%EB%B3%B8%EC%9E%85%EB%8B%88%EB%8B%A4\">✌ 그러나 Harbor는 HTTPS가 기본입니다.</a></li>\n<li><a href=\"#-%EB%A1%9C%EA%B7%B8%EC%9D%B8%EC%9D%B4-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4\">👀 로그인이 안되는 문제가 발생했습니다.</a></li>\n<li><a href=\"#argcod-%EC%9D%B8%EC%A6%9D\">Argcod 인증</a></li>\n<li><a href=\"#jenkins%EC%97%90%EC%84%9C-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%B4-%EC%97%B0%EA%B2%B0%ED%95%A9%EB%8B%88%EB%8B%A4\">Jenkins에서 다음과 같이 연결합니다.</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","excerpt":"머리말   그동안 빌드된 이미지를 관리하거나 정적분석 할 때 Docker hub를 기반으로 구성했으나 이번 프로젝트에서는 어떻게 하면 보안에 조금 더 중점을 둘 수 있을까를 생각하다 Harbor를 사용하여 독립적인 저장소로 이미지를 관리하기로 결정하였습니다. 사용 할 툴을 다음과 같습니다.   Jenkins OWASP ZAP ✔ Harbor 설치 (Docker) Harbor 설치의 경우 이미 많은 분들이 더 쉽게 설명해놓으셔서 간단히 넘어가겠습니다.   img 우선 Harbor는 특정 OS에 맞는 docker, docker-compose가 요구됩니다 Centos 7을 기반으로 진행하였습니다. docker-compose…","frontmatter":{"date":"August 10, 2021","title":"[DEVOPS] - Private 이미지 저장소 Harbor 도입","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-harbor/"}},"next":{"id":"08b7b481-d22d-5769-b198-a051e19e0c19","html":"<p>머리말  </p>\n<p>이번 포스트에서는 구축된 DevSecOps 파이프라인에서 보안쪽을 강화하기 위해서 OWASP ZAP을 도입한 도입기 포스트입니다.<br>\n보통 외부 서버로 두고 서비스의 Port나 IP등을 스캔하지만 저희는 k8s 클러스터에 직접 올려 pod들을 스캐닝 하려고 했습니다.</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>Jenkins</li>\n<li>OWASP ZAP</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-gcp의-lb-ip를-고정\" style=\"position:relative;\"><a href=\"#-gcp%EC%9D%98-lb-ip%EB%A5%BC-%EA%B3%A0%EC%A0%95\" aria-label=\" gcp의 lb ip를 고정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ GCP의 LB IP를 고정</h2>\n<ul>\n<li>\n<p>저는 gcloud-sdk를 이용하여 Cloud Shell에서 작업을 진행했습니다</p>\n<p>아래와 같이 CLoud Shell에 원격 접속 후 GKE 클러스터에 대한 권한을 받아옵니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud config <span class=\"token keyword\">set</span> compute<span class=\"token operator\">/</span>zone us<span class=\"token operator\">-</span>central1<span class=\"token operator\">-</span>f\nUpdated property <span class=\"token punctuation\">[</span>compute<span class=\"token operator\">/</span>zone<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ \nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud container clusters <span class=\"token keyword\">get</span><span class=\"token operator\">-</span>credentials c<span class=\"token operator\">-</span>dcn6h\nFetching cluster endpoint <span class=\"token keyword\">and</span> auth data<span class=\"token punctuation\">.</span>\nkubeconfig entry generated <span class=\"token keyword\">for</span> c<span class=\"token operator\">-</span>dcn6h<span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>etc <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ kubectl <span class=\"token keyword\">get</span> nodes\nNAME                                  STATUS   ROLES    AGE     VERSION\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>b3hf   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   2d21h   v1<span class=\"token punctuation\">.</span><span class=\"token number\">17.12</span><span class=\"token operator\">-</span>gke<span class=\"token punctuation\">.</span><span class=\"token number\">1501</span>\ngke<span class=\"token operator\">-</span>c<span class=\"token operator\">-</span>dcn6h<span class=\"token operator\">-</span><span class=\"token keyword\">default</span><span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">-</span>41c99d2b<span class=\"token operator\">-</span>zkp7   Ready    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   2d21h   v1<span class=\"token punctuation\">.</span><span class=\"token number\">17.12</span><span class=\"token operator\">-</span>gke<span class=\"token punctuation\">.</span><span class=\"token number\">1501</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>그 후 아래 명령어로 외부 고정 IP를 생성해줍니다</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses create app<span class=\"token operator\">-</span>lb\nFor the <span class=\"token class-name\">following</span> address<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>test<span class=\"token operator\">-</span>lb<span class=\"token operator\">-</span>ip<span class=\"token punctuation\">]</span>\nchoose a region <span class=\"token keyword\">or</span> <span class=\"token keyword\">global</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">global</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>east2\n<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast2\n<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>northeast3\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>south1\n<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>southeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> asia<span class=\"token operator\">-</span>southeast2\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> australia<span class=\"token operator\">-</span>southeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>north1\n<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west1\n<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west2\n<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west3\n<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west4\n<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> europe<span class=\"token operator\">-</span>west6\n<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> northamerica<span class=\"token operator\">-</span>northeast1\n<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> southamerica<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>central1\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>east1\n<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>east4\n<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west1\n<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west2\n<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west3\n<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> region<span class=\"token punctuation\">:</span> us<span class=\"token operator\">-</span>west4\nPlease enter your <span class=\"token class-name\">numeric</span> choice<span class=\"token punctuation\">:</span>  <span class=\"token number\">19</span>         \n\nCreated <span class=\"token punctuation\">[</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>googleapis<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>compute<span class=\"token operator\">/</span>v1<span class=\"token operator\">/</span>projects<span class=\"token operator\">/</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token operator\">/</span>regions<span class=\"token operator\">/</span>us<span class=\"token operator\">-</span>central1<span class=\"token operator\">/</span>addresses<span class=\"token operator\">/</span>app<span class=\"token operator\">-</span>lb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>\nh43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses list\nNAME                 ADDRESS<span class=\"token operator\">/</span>RANGE   TYPE      PURPOSE  NETWORK  REGION           SUBNET  STATUS\napp<span class=\"token operator\">-</span>lb               <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>    EXTERNAL                    us<span class=\"token operator\">-</span>central1              RESERVED\njenkins<span class=\"token operator\">-</span>external<span class=\"token operator\">-</span>ip  <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>   EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE\nrancher              <span class=\"token number\">34.64</span><span class=\"token number\">.228</span><span class=\"token number\">.193</span>   EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후에 배포 할 서비스의 메니페스트 파일에 <code class=\"language-text\">spec.loadBalancerIP</code>항목을 정의하여 LB IP를 고정하여 넣어주어야 합니다.</p>\n<p>GCP의 경우 LoadBalancerIP 항목을 명시해주면 자동으로 매칭되어 서비스가 올라옵니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">apiVersion<span class=\"token punctuation\">:</span> <span class=\"token class-name\">v1</span>\nkind<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Service</span>\nmetadata<span class=\"token punctuation\">:</span>\nannotations<span class=\"token punctuation\">:</span>\n    cloud<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>neg<span class=\"token punctuation\">:</span> '<span class=\"token punctuation\">{</span><span class=\"token string\">\"ingress\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>'\n    field<span class=\"token punctuation\">.</span>cattle<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>publicEndpoints<span class=\"token punctuation\">:</span> '<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"addresses\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"35.223.27.28\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">8080</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"protocol\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"TCP\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"serviceName\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"cd-test:app\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"allNodes\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>'\n    kompose<span class=\"token punctuation\">.</span>cmd<span class=\"token punctuation\">:</span> kompose convert\n    kompose<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">:</span> <span class=\"token number\">1.21</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>992df58d8<span class=\"token punctuation\">)</span>\nlabels<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nname<span class=\"token punctuation\">:</span> app<span class=\"token operator\">-</span>lb\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nspec<span class=\"token punctuation\">:</span>\nexternalTrafficPolicy<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Cluster</span>\nports<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">-</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"8080\"</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    protocol<span class=\"token punctuation\">:</span> <span class=\"token class-name\">TCP</span>\n    targetPort<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\nselector<span class=\"token punctuation\">:</span>\n    io<span class=\"token punctuation\">.</span>kompose<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nsessionAffinity<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ClientIP</span>\ntype<span class=\"token punctuation\">:</span> <span class=\"token class-name\">LoadBalancer</span>\nloadBalancerIP<span class=\"token punctuation\">:</span> <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>    <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span>이부분<span class=\"token operator\">>></span><span class=\"token operator\">>></span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Service의 배포가 완료되면 아래와 같이 <code class=\"language-text\">App-lb</code>가 <code class=\"language-text\">IN_USE</code>로 바뀐 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ gcloud compute addresses list\nNAME                 ADDRESS<span class=\"token operator\">/</span>RANGE  TYPE      PURPOSE  NETWORK  REGION           SUBNET  STATUS\napp<span class=\"token operator\">-</span>lb               <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>   EXTERNAL                    us<span class=\"token operator\">-</span>central1              IN_USE\njenkins<span class=\"token operator\">-</span>external<span class=\"token operator\">-</span>ip  <span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span>  EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE\nrancher              <span class=\"token number\">34.64</span><span class=\"token number\">.228</span><span class=\"token number\">.193</span>  EXTERNAL                    asia<span class=\"token operator\">-</span>northeast3          IN_USE</code></pre></div>\n<br/>\n</li>\n<li>\n<p>또한 k8s 클러스터에서도 해당 LB IP로 서비스가 정상적으로 생성됨을 확인!</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">h43254@cloudshell<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span> <span class=\"token punctuation\">(</span>cccr<span class=\"token operator\">-</span>nov2<span class=\"token punctuation\">)</span>$ kubectl <span class=\"token keyword\">get</span> svc <span class=\"token operator\">-</span>n cd<span class=\"token operator\">-</span>test\nNAME     TYPE           CLUSTER<span class=\"token operator\">-</span>IP    EXTERNAL<span class=\"token operator\">-</span><span class=\"token return-type class-name\">IP</span>    <span class=\"token function\">PORT</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>          AGE\napp<span class=\"token operator\">-</span>lb   LoadBalancer   <span class=\"token number\">10.0</span><span class=\"token number\">.30</span><span class=\"token number\">.127</span>   <span class=\"token number\">35.223</span><span class=\"token number\">.27</span><span class=\"token number\">.28</span>   <span class=\"token number\">8080</span><span class=\"token punctuation\">:</span><span class=\"token number\">32530</span><span class=\"token operator\">/</span>TCP   9m2s\nmysql    ClusterIP      <span class=\"token number\">10.0</span><span class=\"token number\">.24</span><span class=\"token number\">.243</span>   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>         <span class=\"token number\">3306</span><span class=\"token operator\">/</span>TCP         18h</code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-jenkins에-owasp-zap-설치\" style=\"position:relative;\"><a href=\"#-jenkins%EC%97%90-owasp-zap-%EC%84%A4%EC%B9%98\" aria-label=\" jenkins에 owasp zap 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✌ Jenkins에 OWASP ZAP 설치</h2>\n<p>처음에는 Kubernetes의 Helm으로 ZAP을 배포하려고 했었지만<br>\nURL을 읽어오는 SPIDER등의 설정 가이드가 많이 부족해서 Jnekins와 연동하기로 했습니다</p>\n<br/>\n<ul>\n<li>\n<p>제일 처음으로 가장 최신 릴리즈 버전의 ZAPPROXY를 다운받습니다.</p>\n<ul>\n<li><a href=\"https://github.com/zaproxy/zaproxy/releases\">링크</a></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97682414-78b1a480-1adb-11eb-958b-0e649ab8c4b3.png\" alt=\"스크린샷, 2020-10-30 18-12-23\"></p>\n<br/>\n<ul>\n<li>이후 다운받은 Zip파일을 Jenkins 인스턴스에 <code class=\"language-text\">복사</code>합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span>root<span class=\"token class-name\">@jenkins</span> bin<span class=\"token punctuation\">]</span># pwd\n<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin\n<span class=\"token punctuation\">[</span>root<span class=\"token class-name\">@jenkins</span> bin<span class=\"token punctuation\">]</span># ls <span class=\"token operator\">-</span>alrt ZAP_D<span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">26</span><span class=\"token operator\">/</span>\ntotal <span class=\"token number\">5472</span>\n<span class=\"token operator\">-</span>rwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins    <span class=\"token number\">4187</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>sh\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins  <span class=\"token number\">123778</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>ico\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins <span class=\"token number\">5440213</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token operator\">-</span>D<span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">-</span><span class=\"token number\">26</span><span class=\"token punctuation\">.</span>jar\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins     <span class=\"token number\">206</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> zap<span class=\"token punctuation\">.</span>bat\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">161</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> xml\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">3</span> jenkins jenkins      <span class=\"token number\">23</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> scripts\n<span class=\"token operator\">-</span>rw<span class=\"token operator\">-</span>r<span class=\"token operator\">--</span>r<span class=\"token operator\">--</span><span class=\"token punctuation\">.</span> <span class=\"token number\">1</span> jenkins jenkins    <span class=\"token number\">2157</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> README\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> plugin\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">265</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> license\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> lib\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins    <span class=\"token number\">4096</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> lang\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span> jenkins jenkins     <span class=\"token number\">140</span> Feb  <span class=\"token number\">1</span>  <span class=\"token number\">1980</span> db\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">3</span> root    root         <span class=\"token number\">86</span> Oct <span class=\"token number\">28</span> <span class=\"token number\">07</span><span class=\"token punctuation\">:</span><span class=\"token number\">09</span> <span class=\"token range operator\">..</span>\ndrwxr<span class=\"token operator\">-</span>xr<span class=\"token operator\">-</span>x<span class=\"token punctuation\">.</span> <span class=\"token number\">9</span> jenkins jenkins     <span class=\"token number\">180</span> Oct <span class=\"token number\">29</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span> <span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>복사가 끝났다면 Jenkins에 OWASP ZAP 관련 Plugin 들을 모두 설치합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674610-279cb300-1ad1-11eb-9494-067695600318.png\" alt=\"스크린샷, 2020-10-30 16-58-32\"></p>\n<ul>\n<li>Official OWASP ZAP Jenkins Plugin</li>\n<li>OWASP Dependency-Check Plugin</li>\n<li>OWASP Dependency-Track Plugin</li>\n<li>OWASP Markup Formatter Plugin</li>\n<li>JDK</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>플러그인이 설치가 완료되었다면 ZAP의 환경변수 설정을 합니다.</p>\n<ul>\n<li>Manage Jenkins -> configure System 탭에서 설정</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>미리 Jenkins 인스턴스 내에 Clone 해놓았던 zap.sh 스크립트가 존재하는 위치 지정  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97678244-d7c0ea80-1ad6-11eb-8024-da31b3d943ee.png\" alt=\"스크린샷, 2020-10-30 17-39-16\"></p>\n<ul>\n<li>Environment variables : 체크</li>\n<li>List of variables.name : ZAPROXY_HOME -> 나중에 프로젝트에서 설정할 위치</li>\n<li>List of variables.Value : 실제 Jenkins 서버의 zap.sh 스크립트 위치.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>ZAP PROXY 설정  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97678185-c4ae1a80-1ad6-11eb-8db4-eda98456b84b.png\" alt=\"스크린샷, 2020-10-30 17-38-45\"></p>\n<ul>\n<li>Default Host : Jenkins 서버의 로컬로 돌리기 위한 값.</li>\n<li>Default Port : Jenkins 서버에서 동작할 Port 번호</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>환경변수 설정 후 freestyle의 프로젝트를 생성합니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674823-83673c00-1ad1-11eb-99ed-53a6f5531b41.png\" alt=\"스크린샷, 2020-10-30 16-57-15\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이후 Build tab에서 <code class=\"language-text\">Excute ZAP</code>을 추가해 Zap PROXY의 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97674988-ccb78b80-1ad1-11eb-9f85-b09ca675f922.png\" alt=\"스크린샷, 2020-10-30 17-03-11\"></p>\n<ul>\n<li>localhost : Jenkins 서버의 로컬에서 동작.</li>\n<li>override Port : Jenkins 서버에서 동작할 Zap의 사용포트</li>\n<li>JAVA : OWASP ZAP은 JAVA기반으로 돌기때문에 JDK 플러그인의 추가 설치가 필요합니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 ZAP의 실행 Method의 관련 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97675101-0ab4af80-1ad2-11eb-8ca4-a1d424602fb4.png\" alt=\"스크린샷, 2020-10-30 17-04-54\"></p>\n<ul>\n<li>Environment Variable : 이전에 설정했던 OWASP ZAP의 환경변수 값 기입</li>\n<li>ZAP Home Directory : Jenkins 서버에 미리 Clone 해놓은 Zap.sh 파일의 위치 기입</li>\n<li>Filename : job-seesion으로 default 잡아주면 됩니다</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>이제 Session Properties 설정을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97675273-5ebf9400-1ad2-11eb-962e-d710a3dc9968.png\" alt=\"스크린샷, 2020-10-30 17-07-17\"></p>\n<ul>\n<li>Context Name : default로 컨택스트를 잡아주면 됩니다.</li>\n<li>Include in Context : 검사할 URL의 주소를 넣어주면 됩니다</li>\n<li>Username : 실제 사이트에 들어가기 위한 Account User 정보</li>\n<li>Password : Account User의 PASSWORD 정보</li>\n<li>Logged in Indicator\t: 스캔을 마치고 나올 메세지를 적으면 됩니다 <code class=\"language-text\">\\QLogout\\E</code></li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>바로 아래에 있는 Form-based Authentication 설정도 추가해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677213-469d4400-1ad5-11eb-93c7-7c2bdd55344c.png\" alt=\"스크린샷, 2020-10-30 17-28-05\"></p>\n<ul>\n<li>Login Form Target URL : 로그인 Parameter를 기입할 URL 주소를 기입</li>\n<li>Username Parameter : Username Parameter 값을 기입해줍니다.</li>\n<li>Password Parameter : Password Parameter 값을 기입해줍니다.  </li>\n<li>Attack Mode.Starting Point\t: 스캔할 URL의 가장 초기 URL을 적어줍니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>바로 아래에 있는 Spider Scan 설정도 추가해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677451-9b40bf00-1ad5-11eb-93a2-87d01ae6fe77.png\" alt=\"스크린샷, 2020-10-30 17-30-26\"></p>\n<ul>\n<li>Spider Scan : 체크</li>\n<li>Recurse : 체크</li>\n<li>Subtree Only : 체크</li>\n<li>Active Scan : 체크</li>\n<li>Policy : default Policy 로 설정</li>\n<li>Recurse : 체크</li>\n</ul>\n</li>\n<li>\n<p>스캔 결과의 리포트 파일을 남기기 위해서 Generate Reports 설정을 추가합니다.</p>\n<ul>\n<li>Generate Reports : 체크</li>\n<li>Clean Workspace Reports : 체크</li>\n<li>Filename : ~ {BUILD_ID} 빌드 넘버로 남기기 위한 설정</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>Report 파일의 형식이 다음과 같음을 확인합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677724-11452600-1ad6-11eb-9a15-0b11ac43f947.png\" alt=\"스크린샷, 2020-10-30 17-33-45\"></p>\n<ul>\n<li>Generate Report : xml, html 설정 확인</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>POST Build ACTION을 설정해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97677797-2de15e00-1ad6-11eb-9611-b0d58fd7988c.png\" alt=\"스크린샷, 2020-10-30 17-34-32\"></p>\n<ul>\n<li>Files to archive : 결과 파일로 띄워줄 로그와 리포트 파일의 위치.</li>\n<li>HTML directory to archive : Report 파일의 디렉토리 기입</li>\n<li>Index page[s] : 위에서 생성해줬던 <code class=\"language-text\">[REPORT 파일명].html</code> 기입.</li>\n<li>Report title : html로 띄워줄 리포트 결과의 제목</li>\n</ul>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"-빌드-테스트\" style=\"position:relative;\"><a href=\"#-%EB%B9%8C%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 빌드 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙌 빌드 테스트!</h2>\n<ul>\n<li>\n<p>Jenkins의 OWASP ZAP 프로젝트에서 빌드!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97683734-d34b0080-1adb-11eb-9785-af9b9eb6d381.png\" alt=\"스크린샷, 2020-10-30 18-14-55\"></p>\n<ul>\n<li>빌드가 완료되면 위의 그림과 같이 html,xml 로그가 생성됩니다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 해당 Report 파일에 접속하면 아래와 같은 형식으로 리포트 해주는 것을 확인가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684035-f5dd1980-1adb-11eb-8207-790e2b143e8b.png\" alt=\"스크린샷, 2020-10-30 18-15-54\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>리포트 파일을 확인해보면 홈페이지의 A1,A2등의 취약점 검사를 자동으로 한 것이 확인가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684390-17d69c00-1adc-11eb-8c1e-9c0dd0cd26c2.png\" alt=\"스크린샷, 2020-10-30 18-16-51\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>실제 동작은 해당 웹페이지에 user, password를 자동으로 기입해주고</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97684956-3fc5ff80-1adc-11eb-8c9f-be7222b8a14b.png\" alt=\"스크린샷, 2020-10-30 18-17-57\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>메인 페이지에 연결되어있는 1~10까지의 보안취약점에 대해 자동으로 스캔을 해줍니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/97685276-58361a00-1adc-11eb-8b96-c86e60d393e4.png\" alt=\"스크린샷, 2020-10-30 18-18-39\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>사실 보안툴의 자동화는 물론이고 보안툴을 올려보는 것 조차 이번이 처음이었습니다.<br>\n처음엔 Helm으로 k8s 클러스터에 배포하려는 시행착오를 3일정도 겪고, 실패하고, Docker 컨테이너 기반으로 올리고, 실패하고를 반복하면서 5일정도를 날렸던 것 같습니다.<br>\n결국 Jenkins로 파이프라인에 자동적으로 스캔하도록 설정함으로 마무리를 지었지만 아직 미련은 조금 남아있는 상태입니다.<br>\n프로젝트가 끝나고 개인적으로 Helm을 이용해 클러스터에 직접 배포하는 것도 성공해봐야겠습니다<br>\n이번 OWASP ZAP 도입기를 작성하면서 DevSecOps 파이프라인의 보안에 대해서 조금의 감은 잡은 것 같습니다.<br>\n실제로 OWASP ZAP 관련해서 한글문서나 정확한 설정 가이드가 미흡하다 보니<br>\n이번 포스트가 많은 사람들에게 도움이 되었으면 좋겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-gcp%EC%9D%98-lb-ip%EB%A5%BC-%EA%B3%A0%EC%A0%95\">✔ GCP의 LB IP를 고정</a></li>\n<li><a href=\"#-jenkins%EC%97%90-owasp-zap-%EC%84%A4%EC%B9%98\">✌ Jenkins에 OWASP ZAP 설치</a></li>\n<li><a href=\"#-%EB%B9%8C%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\">🙌 빌드 테스트!</a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 09, 2021","title":"[DEVOPS] - Jenkins Pipeline에 OWASP ZAP 도입기","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-owaspzap/"}},"prev":{"id":"db35f671-1882-5449-b83f-40eecad72930","html":"<p>머리말  </p>\n<p>지난 포스트에서 간단하게 전체적인 파이프라인에 대해서 포스트를 했습니다.<br>\n이번 포스트는 Harbor에 배포 될 Container Image 분석 오픈소스 Anchore를 도입했던 포스트를 작성했습니다.</p>\n<hr>\n<ul>\n<li>\n<p>사용 할 툴을 다음과 같습니다.  </p>\n<ul>\n<li>Jenkins</li>\n<li>Anchore</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"-anchore-\" style=\"position:relative;\"><a href=\"#-anchore-\" aria-label=\" anchore  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔ Anchore ??</h2>\n<p>정말 간단히 설명해서 Docker Image의 취약점을 스캔하는 스캐너라고 생각하면 됩니다.</p>\n<p>Anchore 오픈 소스 버전은 다음에서 참고할 수 있습니다.</p>\n<p><a href=\"https://anchore.com/opensource/\">https://anchore.com/opensource/</a></p>\n<br/>\n<ol>\n<li>이미지 분석<br>\n컨테이너 이미지의 심층 검사를 수행하여 모든 OS의 패키지, 파일 및 소프트웨어 아티팩트<br>\n(Ruby GEMs, JARs, Node Modules) Cataloging화 한다.  </li>\n</ol>\n<br/>\n<ol start=\"2\">\n<li>정책 관리<br>\n보안 모범 사례를 기반으로 정책을 정의하고 적용하여 위험한 빌드가 완료되지 않고 문제가 있는 이미지가 배포되지 않도록 한다.  </li>\n</ol>\n<br/>\n<ol start=\"3\">\n<li>Continuous Monitoring<br>\n이미지가 업데이트되거나 CVE가 추가 또는 제거되거나 새로운 모범 사례가 설정 될 때<br>\n생성 된 문제를 파악하기 위해 정책을 지속적으로 관리한다.</li>\n</ol>\n<br/>\n<ol start=\"4\">\n<li>CI / CD 통합<br>\nAnchore Engine을 CI/CD 파이프 라인에 통합하여<br>\n이미지가 사용자 지정 보안 및 요구 사항을 충족할 때만 성공적으로 빌드되도록한다.</li>\n</ol>\n<br/>\n<ol start=\"5\">\n<li>커스터마이징<br>\n이미지 내부 Package, Whitelists, Blacklists, 설정파일, 보안, Manifest, 포트 등에<br>\n대한 취약점을 점검하기 정책을 유연하게 정의할 수 있다.</li>\n</ol>\n<br/>\n<hr>\n<h3 id=\"anchore-설치-docker\" style=\"position:relative;\"><a href=\"#anchore-%EC%84%A4%EC%B9%98-docker\" aria-label=\"anchore 설치 docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Anchore 설치 (Docker)</h3>\n<br/>\n<p>Anchore 설치와 Jenkins와 연동은 이미 많은 분들이 포스트하셨습니다.<br>\n따라서 제 포스트에서는 간단하게 명령어, 이미 설치되어있다는 가정하에 정리하였습니다.</p>\n<ul>\n<li>\n<p>설치 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">$ <span class=\"token class-name\">curl</span> https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>docs<span class=\"token punctuation\">.</span>anchore<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>current<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>engine<span class=\"token operator\">/</span>quickstart<span class=\"token operator\">/</span>docker<span class=\"token operator\">-</span>compose<span class=\"token punctuation\">.</span>yaml <span class=\"token operator\">></span> docker<span class=\"token operator\">-</span>compose<span class=\"token punctuation\">.</span>yaml\n$ docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d\n\n$ yum install epel<span class=\"token operator\">-</span>release\n$ yum install python<span class=\"token operator\">-</span>pip\n$ pip install anchorecli</code></pre></div>\n<hr>\n</li>\n</ul>\n<p>추가적으로 anchore를 jenkins에서 사용하기 위해서는 plugin을 설치해야 합니다.  </p>\n<ul>\n<li>\n<p>설치될 plugin은 다음과 같습니다.</p>\n<ul>\n<li><a href=\"http://plugins.jenkins.io/anchore-container-scanner/\">http://plugins.jenkins.io/anchore-container-scanner/</a>  </li>\n</ul>\n</li>\n</ul>\n<p>plugin설치가 완료된후 jenkins의 configuration system 메뉴에서<br>\nAnchore Container Image Scanner 설정을 추가합니다.  (아래사진)</p>\n<ul>\n<li>\n<p>Jenkins에서 동작하는 Anchore는 다음과 같은 WorkFlow를 가집니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103251164-e59dc980-49ba-11eb-871f-ecfb62bdad91.PNG\" alt=\"3332112\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"gcp-방화벽-설정\" style=\"position:relative;\"><a href=\"#gcp-%EB%B0%A9%ED%99%94%EB%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"gcp 방화벽 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GCP 방화벽 설정</h3>\n<p>GCP 기반의 인프라이기 때문에 GCP의 VPN에서 설치 할 때 설정해줬던<br>\nAnchore의 Service Port를 허용해줘야만 Jenkins에서 연동이 가능합니다.</p>\n<ul>\n<li>\n<p>다음과 같이 Jenkins-환경설정에서 Anchore Container Image Scanner<br>\n설정의 Servic Port를 Anchore와 GCP에서 Allow 해준 Port를 기입하면 됩니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250454-3b707280-49b7-11eb-95ce-220663b7dc54.PNG\" alt=\"캡처22\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"jenkins-pipeline-script-수정\" style=\"position:relative;\"><a href=\"#jenkins-pipeline-script-%EC%88%98%EC%A0%95\" aria-label=\"jenkins pipeline script 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins Pipeline Script 수정</h3>\n<p>위에 있는 연동을 위한 환경설정들이 모두 마무리 되었으면<br>\n아래처럼 파이프라인 스크립트내에 Anchore의 Analyse부분을 추가해줍니다.</p>\n<ul>\n<li>\n<p>스크립트  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">        <span class=\"token function\">stage</span><span class=\"token punctuation\">(</span>'Anchore analyse'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            steps <span class=\"token punctuation\">{</span>  \n                <span class=\"token function\">catchError</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">buildResult</span><span class=\"token punctuation\">:</span> 'SUCCESS'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">stageResult</span><span class=\"token punctuation\">:</span> 'SUCCESS'<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">writeFile</span> file<span class=\"token punctuation\">:</span> 'anchore_images'<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">text</span><span class=\"token punctuation\">:</span> '<span class=\"token number\">34.64</span><span class=\"token number\">.237</span><span class=\"token number\">.112</span><span class=\"token operator\">/</span>cccr<span class=\"token operator\">/</span>jisun'  \n                <span class=\"token class-name\">anchore</span> name<span class=\"token punctuation\">:</span> 'anchore_images'  \n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"파이프라인-실행-결과\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC\" aria-label=\"파이프라인 실행 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프라인 실행 결과</h3>\n<p>제대로 연동되었다면 파이프라인이 종료된 뒤 가시적인 로그를 볼 수 있습니다.</p>\n<ul>\n<li>\n<p>Anchore 스캐닝 리포트</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250671-5f808380-49b8-11eb-8ef1-c939886fde60.PNG\" alt=\"33\"></p>\n</li>\n</ul>\n<br/>\n<hr>\n<h3 id=\"정상-스캐닝-여부-확인\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%83%81-%EC%8A%A4%EC%BA%90%EB%8B%9D-%EC%97%AC%EB%B6%80-%ED%99%95%EC%9D%B8\" aria-label=\"정상 스캐닝 여부 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정상 스캐닝 여부 확인</h3>\n<p>Anchore의 가시적인 리포트는 확인 할 수 있지만 정말 정확한 스캐닝을 하는 건지는 잘 모르겠습니다.<br>\n그래서 나온 ERROR 중 일부를 수정해서 결과가 반영되는지를 확인해보죠</p>\n<ul>\n<li>\n<p>Anchore의 리포트를 보니 아래와 같은 이슈가 있었습니다.  </p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250811-1c72e000-49b9-11eb-9b27-ab7849ec81c5.PNG\" alt=\"44\"></p>\n<p>로그확인을 해보니 - Oracle MySQL 5.7.14 이상으로 버전 업그레이드 필요하다는 로그였네요</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>바로 관련된 소스를 수정합니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250871-6fe52e00-49b9-11eb-9716-7c3fb7eaff84.PNG\" alt=\"aaaa\"></p>\n<p>간단하게 연결되어있는 DVWA 앱의 pom.xml의 소스를 수정해서 반영시켜봤습니다.</p>\n</li>\n</ul>\n<br/>\n<p>수정해서 파이프라인을 동작시키니 정상적으로 스캐닝 하고있음을 확인했습니다.</p>\n<ul>\n<li>\n<ol>\n<li>Anchore 리포트 로그의 MYSQL 항목을 더 이상 찾을 수 없습니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250938-cb172080-49b9-11eb-8909-3c27a7901c58.PNG\" alt=\"dds\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<ol start=\"2\">\n<li>가시적인 그래프가 줄어 들었음을 확인 할 수 있습니다.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/69498804/103250982-fe59af80-49b9-11eb-8f6c-6ae4a33c9ece.PNG\" alt=\"ssssss\"></p>\n<p>다음과 같이 마지막 Build에서 그래프가 꺾여 내려갑니다.</p>\n</li>\n</ul>\n<br/>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며…</h2>\n<p>조금씩 프로젝트 포스트에서 막바지가 다가와 갑니다.<br>\nAnchore는 비교적 쉽게 구현했던 오픈소스입니다.<br>\n그나마 조금 시간을 잡아먹거나, 불편했던 점이라고 한다면\nAnchore는 기본적으로 파이프라인의 성공/실패 여부에 따라<br>\nBuild를 멈추거나 무시하도록 설정 할 수 있게 되어있는데 이 부분을 모르고 있었습니다.<br>\n계속해서 Anchore가 실행 될 때마다 Build가 멈추는 현상이 일어나 원인분석에 2일정도를 썼던 것 같습니다..<br>\n정리를 해가면서 다시 한번 배우고 있는 것 같습니다.<br>\n한국은 아직 Anchore 툴의 여부를 모르는 사람들도 많은 것 같은데 하루 빨리 많은 오픈소스들이 산업에 도입되었으면..</p>\n<p>다음글은 Sornaqube 포스트로 돌아 오겠습니다.</p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-anchore-\">✔ Anchore ??</a></p>\n<ul>\n<li><a href=\"#anchore-%EC%84%A4%EC%B9%98-docker\">Anchore 설치 (Docker)</a></li>\n<li><a href=\"#gcp-%EB%B0%A9%ED%99%94%EB%B2%BD-%EC%84%A4%EC%A0%95\">GCP 방화벽 설정</a></li>\n<li><a href=\"#jenkins-pipeline-script-%EC%88%98%EC%A0%95\">Jenkins Pipeline Script 수정</a></li>\n<li><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC\">파이프라인 실행 결과</a></li>\n<li><a href=\"#%EC%A0%95%EC%83%81-%EC%8A%A4%EC%BA%90%EB%8B%9D-%EC%97%AC%EB%B6%80-%ED%99%95%EC%9D%B8\">정상 스캐닝 여부 확인</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며…</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 11, 2021","title":"[DEVOPS] - 이미지 분석 툴 Anchore With Jenkins","categories":"DevOps","author":"nasa1515","emoji":"🤦‍♂️"},"fields":{"slug":"/devops-anchor/"}},"site":{"siteMetadata":{"siteUrl":"https://nasa1515.com","comments":{"utterances":{"repo":"nasa1515/nasablog"}}}}},"pageContext":{"slug":"/devops-harbor/","nextSlug":"/devops-owaspzap/","prevSlug":"/devops-anchor/"}},"staticQueryHashes":["1073350324","2938748437"]}